{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import{CodedError,Platform}from'expo-modules-core';import FontObserver from'fontfaceobserver';import{FontDisplay}from\"./Font.types\";function getFontFaceStyleSheet(){if(!Platform.isDOMAvailable){return null;}var styleSheet=getStyleElement();return styleSheet.sheet?styleSheet.sheet:null;}function getFontFaceRules(){var sheet=getFontFaceStyleSheet();if(sheet){var rules=_toConsumableArray(sheet.cssRules);var items=[];for(var i=0;i<rules.length;i++){var rule=rules[i];if(rule instanceof CSSFontFaceRule){items.push({rule:rule,index:i});}}return items;}return[];}function getFontFaceRulesMatchingResource(fontFamilyName,options){var rules=getFontFaceRules();return rules.filter(function(_ref){var rule=_ref.rule;return rule.style.fontFamily===fontFamilyName&&(options&&options.display?options.display===rule.style.fontDisplay:true);});}export default{get name(){return'ExpoFontLoader';},unloadAllAsync:function(){var _unloadAllAsync=_asyncToGenerator(function*(){if(!Platform.isDOMAvailable)return;var element=document.getElementById(ID);if(element&&element instanceof HTMLStyleElement){document.removeChild(element);}});function unloadAllAsync(){return _unloadAllAsync.apply(this,arguments);}return unloadAllAsync;}(),unloadAsync:function(){var _unloadAsync=_asyncToGenerator(function*(fontFamilyName,options){var sheet=getFontFaceStyleSheet();if(!sheet)return;var items=getFontFaceRulesMatchingResource(fontFamilyName,options);for(var item of items){sheet.deleteRule(item.index);}});function unloadAsync(_x,_x2){return _unloadAsync.apply(this,arguments);}return unloadAsync;}(),loadAsync:function(){var _loadAsync=_asyncToGenerator(function*(fontFamilyName,resource){if(!Platform.isDOMAvailable){return;}var canInjectStyle=document.head&&typeof document.head.appendChild==='function';if(!canInjectStyle){throw new CodedError('ERR_WEB_ENVIRONMENT',\"The browser's `document.head` element doesn't support injecting fonts.\");}var style=_createWebStyle(fontFamilyName,resource);document.head.appendChild(style);if(!isFontLoadingListenerSupported()){return;}return new FontObserver(fontFamilyName,{display:resource.display}).load();});function loadAsync(_x3,_x4){return _loadAsync.apply(this,arguments);}return loadAsync;}()};var ID='expo-generated-fonts';function getStyleElement(){var element=document.getElementById(ID);if(element&&element instanceof HTMLStyleElement){return element;}var styleElement=document.createElement('style');styleElement.id=ID;styleElement.type='text/css';return styleElement;}function _createWebStyle(fontFamily,resource){var fontStyle=\"@font-face {\\n    font-family: \"+fontFamily+\";\\n    src: url(\"+resource.uri+\");\\n    font-display: \"+(resource.display||FontDisplay.AUTO)+\";\\n  }\";var styleElement=getStyleElement();if(styleElement.styleSheet){var styleElementIE=styleElement;styleElementIE.styleSheet.cssText=styleElementIE.styleSheet.cssText?styleElementIE.styleSheet.cssText+fontStyle:fontStyle;}else{var textNode=document.createTextNode(fontStyle);styleElement.appendChild(textNode);}return styleElement;}function isFontLoadingListenerSupported(){var userAgent=window.navigator.userAgent;var isIOS=!!userAgent.match(/iPad|iPhone/i);var isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);var isEdge=userAgent.includes('Edge');var isIE=userAgent.includes('Trident');var isFirefox=userAgent.includes('Firefox');return!isSafari&&!isIOS&&!isEdge&&!isIE&&!isFirefox;}","map":{"version":3,"sources":["../src/ExpoFontLoader.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\n\nimport { UnloadFontOptions } from './Font';\nimport { FontDisplay, FontResource } from './Font.types';\n\nfunction getFontFaceStyleSheet(): CSSStyleSheet | null {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n  const styleSheet = getStyleElement();\n  return styleSheet.sheet ? (styleSheet.sheet as CSSStyleSheet) : null;\n}\n\ntype RuleItem = { rule: CSSFontFaceRule; index: number };\n\nfunction getFontFaceRules(): RuleItem[] {\n  const sheet = getFontFaceStyleSheet();\n  if (sheet) {\n    // @ts-ignore: rule iterator\n    const rules = [...sheet.cssRules];\n\n    const items: RuleItem[] = [];\n\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i];\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({ rule, index: i });\n      }\n    }\n    return items;\n  }\n  return [];\n}\n\nfunction getFontFaceRulesMatchingResource(\n  fontFamilyName: string,\n  options?: UnloadFontOptions\n): RuleItem[] {\n  const rules = getFontFaceRules();\n  return rules.filter(({ rule }) => {\n    return (\n      rule.style.fontFamily === fontFamilyName &&\n      (options && options.display ? options.display === (rule.style as any).fontDisplay : true)\n    );\n  });\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoFontLoader';\n  },\n\n  async unloadAllAsync(): Promise<void> {\n    if (!Platform.isDOMAvailable) return;\n\n    const element = document.getElementById(ID);\n    if (element && element instanceof HTMLStyleElement) {\n      document.removeChild(element);\n    }\n  },\n\n  async unloadAsync(fontFamilyName: string, options?: UnloadFontOptions): Promise<void> {\n    const sheet = getFontFaceStyleSheet();\n    if (!sheet) return;\n    const items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n    for (const item of items) {\n      sheet.deleteRule(item.index);\n    }\n  },\n\n  async loadAsync(fontFamilyName: string, resource: FontResource): Promise<void> {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new CodedError(\n        'ERR_WEB_ENVIRONMENT',\n        `The browser's \\`document.head\\` element doesn't support injecting fonts.`\n      );\n    }\n\n    const style = _createWebStyle(fontFamilyName, resource);\n    document.head!.appendChild(style);\n\n    if (!isFontLoadingListenerSupported()) {\n      return;\n    }\n\n    return new FontObserver(fontFamilyName, { display: resource.display }).load();\n  },\n};\n\nconst ID = 'expo-generated-fonts';\n\nfunction getStyleElement(): HTMLStyleElement {\n  const element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  const styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nfunction _createWebStyle(fontFamily: string, resource: FontResource): HTMLStyleElement {\n  const fontStyle = `@font-face {\n    font-family: ${fontFamily};\n    src: url(${resource.uri});\n    font-display: ${resource.display || FontDisplay.AUTO};\n  }`;\n\n  const styleElement = getStyleElement();\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    const styleElementIE = styleElement as any;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText\n      ? styleElementIE.styleSheet.cssText + fontStyle\n      : fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n\nfunction isFontLoadingListenerSupported(): boolean {\n  const { userAgent } = window.navigator;\n  // WebKit is broken https://github.com/bramstein/fontfaceobserver/issues/95\n  const isIOS = !!userAgent.match(/iPad|iPhone/i);\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  // Edge is broken https://github.com/bramstein/fontfaceobserver/issues/109#issuecomment-333356795\n  const isEdge = userAgent.includes('Edge');\n  // Internet Explorer\n  const isIE = userAgent.includes('Trident');\n  // Firefox\n  const isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
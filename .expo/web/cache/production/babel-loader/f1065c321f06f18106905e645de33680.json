{"ast":null,"code":"import*as React from'react';import CurrentRenderContext from\"./CurrentRenderContext\";export default function useCurrentRender(_ref){var state=_ref.state,navigation=_ref.navigation,descriptors=_ref.descriptors;var current=React.useContext(CurrentRenderContext);if(current&&navigation.isFocused()){current.options=descriptors[state.routes[state.index].key].options;}}","map":{"version":3,"sources":["useCurrentRender.tsx"],"names":["React","CurrentRenderContext","useCurrentRender","state","navigation","descriptors","current","useContext","isFocused","options","routes","index","key"],"mappings":"AACA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAE9B,MAAOC,qBAAoB,8BAqB3B,cAAe,SAASC,iBAAgB,CAAA,IAAA,CAI5B,CAJ6B,GACvCC,MAAK,CAGG,IAAA,CAHRA,KAAK,CACLC,UAAU,CAEF,IAAA,CAFRA,UAAU,CACVC,WAAAA,CACQ,IAAA,CADRA,WAAAA,CAEA,GAAMC,QAAO,CAAGN,KAAK,CAACO,UAAU,CAACN,oBAAoB,CAAC,CAEtD,GAAIK,OAAO,EAAIF,UAAU,CAACI,SAAS,EAAE,CAAE,CACrCF,OAAO,CAACG,OAAO,CAAGJ,WAAW,CAACF,KAAK,CAACO,MAAM,CAACP,KAAK,CAACQ,KAAK,CAAC,CAACC,GAAG,CAAC,CAACH,OAAO,CACtE,CACF","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport CurrentRenderContext from './CurrentRenderContext';\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender(_ref) {\n  let {\n    state,\n    navigation,\n    descriptors\n  } = _ref;\n  const current = React.useContext(CurrentRenderContext);\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n//# sourceMappingURL=useCurrentRender.js.map"]},"metadata":{},"sourceType":"module"}
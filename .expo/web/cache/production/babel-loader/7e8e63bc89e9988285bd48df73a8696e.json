{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"label\",\"active\",\"theme\",\"style\",\"onPress\",\"accessibilityLabel\",\"right\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{withInternalTheme}from\"../../core/theming\";import Icon from\"../Icon\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";var DrawerItem=function DrawerItem(_ref){var icon=_ref.icon,label=_ref.label,active=_ref.active,theme=_ref.theme,style=_ref.style,onPress=_ref.onPress,accessibilityLabel=_ref.accessibilityLabel,right=_ref.right,rest=_objectWithoutProperties(_ref,_excluded);var roundness=theme.roundness,isV3=theme.isV3;var backgroundColor=active?isV3?theme.colors.secondaryContainer:color(theme.colors.primary).alpha(0.12).rgb().string():'transparent';var contentColor=active?isV3?theme.colors.onSecondaryContainer:theme.colors.primary:isV3?theme.colors.onSurfaceVariant:color(theme.colors.text).alpha(0.68).rgb().string();var labelMargin=icon?isV3?12:32:0;var borderRadius=(isV3?7:1)*roundness;var underlayColor=isV3?color(backgroundColor).mix(color(theme.colors.onSecondaryContainer),0.16).rgb().toString():undefined;var font=isV3?theme.fonts.labelLarge:theme.fonts.medium;return React.createElement(View,rest,React.createElement(TouchableRipple,{borderless:true,onPress:onPress,style:[styles.container,{backgroundColor:backgroundColor,borderRadius:borderRadius},isV3&&styles.v3Container,style],accessibilityRole:\"button\",accessibilityState:{selected:active},accessibilityLabel:accessibilityLabel,underlayColor:underlayColor},React.createElement(View,{style:[styles.wrapper,isV3&&styles.v3Wrapper]},React.createElement(View,{style:styles.content},icon?React.createElement(Icon,{source:icon,size:24,color:contentColor}):null,React.createElement(Text,{variant:\"labelLarge\",selectable:false,numberOfLines:1,style:[styles.label,_objectSpread({color:contentColor,marginLeft:labelMargin},font)]},label)),right===null||right===void 0?void 0:right({color:contentColor}))));};DrawerItem.displayName='Drawer.Item';var styles=StyleSheet.create({container:{marginHorizontal:10,marginVertical:4},v3Container:{justifyContent:'center',height:56,marginLeft:12,marginRight:12,marginVertical:0},wrapper:{flexDirection:'row',alignItems:'center',padding:8},v3Wrapper:{marginLeft:16,marginRight:24,padding:0},content:{flex:1,flexDirection:'row',alignItems:'center'},label:{marginRight:32}});export default withInternalTheme(DrawerItem);","map":{"version":3,"mappings":"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","names":["React","color","withInternalTheme","Icon","TouchableRipple","Text","DrawerItem","_ref","icon","label","active","theme","style","onPress","accessibilityLabel","right","rest","roundness","isV3","backgroundColor","colors","secondaryContainer","primary","alpha","rgb","string","contentColor","onSecondaryContainer","onSurfaceVariant","text","labelMargin","borderRadius","underlayColor","mix","toString","undefined","font","fonts","labelLarge","medium","View","borderless","styles","container","v3Container","accessibilityRole","accessibilityState","selected","wrapper","v3Wrapper","content","source","size","variant","selectable","numberOfLines","marginLeft","displayName","StyleSheet","create","marginHorizontal","marginVertical","justifyContent","height","marginRight","flexDirection","alignItems","padding","flex"],"sources":["DrawerItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Callback which returns a React element to display on the right side. For instance a Badge.\n   */\n  right?: (props: { color: string }) => React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = ({\n  icon,\n  label,\n  active,\n  theme,\n  style,\n  onPress,\n  accessibilityLabel,\n  right,\n  ...rest\n}: Props) => {\n  const { roundness, isV3 } = theme;\n\n  const backgroundColor = active\n    ? isV3\n      ? theme.colors.secondaryContainer\n      : color(theme.colors.primary).alpha(0.12).rgb().string()\n    : 'transparent';\n  const contentColor = active\n    ? isV3\n      ? theme.colors.onSecondaryContainer\n      : theme.colors.primary\n    : isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.68).rgb().string();\n\n  const labelMargin = icon ? (isV3 ? 12 : 32) : 0;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n  const underlayColor = isV3\n    ? color(backgroundColor)\n        .mix(color(theme.colors.onSecondaryContainer), 0.16)\n        .rgb()\n        .toString()\n    : undefined;\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  return (\n    <View {...rest}>\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius },\n          isV3 && styles.v3Container,\n          style,\n        ]}\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n        underlayColor={underlayColor}\n      >\n        <View style={[styles.wrapper, isV3 && styles.v3Wrapper]}>\n          <View style={styles.content}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              variant=\"labelLarge\"\n              selectable={false}\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  marginLeft: labelMargin,\n                  ...font,\n                },\n              ]}\n            >\n              {label}\n            </Text>\n          </View>\n\n          {right?.({ color: contentColor })}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nDrawerItem.displayName = 'Drawer.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  v3Container: {\n    justifyContent: 'center',\n    height: 56,\n    marginLeft: 12,\n    marginRight: 12,\n    marginVertical: 0,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  v3Wrapper: {\n    marginLeft: 16,\n    marginRight: 24,\n    padding: 0,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default withInternalTheme(DrawerItem);\n"]},"metadata":{},"sourceType":"module"}
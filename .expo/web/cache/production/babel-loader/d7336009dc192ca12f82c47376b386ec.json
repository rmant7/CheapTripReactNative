{"ast":null,"code":"import*as React from'react';import View from\"react-native-web/dist/exports/View\";export var RadioButtonContext=React.createContext(null);var RadioButtonGroup=function RadioButtonGroup(_ref){var value=_ref.value,onValueChange=_ref.onValueChange,children=_ref.children;return React.createElement(RadioButtonContext.Provider,{value:{value:value,onValueChange:onValueChange}},React.createElement(View,{accessibilityRole:\"radiogroup\"},children));};RadioButtonGroup.displayName='RadioButton.Group';export default RadioButtonGroup;export{RadioButtonGroup};","map":{"version":3,"mappings":"AAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,sDAuB9B,MAAO,IAAMC,mBAAkB,CAAGD,KAAK,CAACE,aAAa,CACnD,IAAI,CACL,CA0CD,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAGC,SAAGC,MAAK,CAAkCD,KAAvCC,KAAK,CAAEC,aAAa,CAAmBF,KAAhCE,aAAa,CAAEC,SAAiBH,KAAjBG,SAAiB,MACjEP,qBAACC,kBAAkB,CAACO,QAAQ,EAACH,KAAK,CAAE,CAAEA,KAAK,CAALA,KAAK,CAAEC,2BAAc,CAAE,EAC3DN,oBAACS,IAAI,EAACC,iBAAiB,CAAC,YAAY,EAAEH,QAAQ,CAAQ,CAC1B,EAC/B,CAEDJ,gBAAgB,CAACQ,WAAW,CAAG,mBAAmB,CAClD,cAAeR,iBAAgB,CAG/B,OAASA,gBAAgB","names":["React","RadioButtonContext","createContext","RadioButtonGroup","_ref","value","onValueChange","children","Provider","View","accessibilityRole","displayName"],"sources":["RadioButtonGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\n\nexport type Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected radio button.\n   */\n  value: string;\n  /**\n   * React elements containing radio buttons.\n   */\n  children: React.ReactNode;\n};\n\nexport type RadioButtonContextType = {\n  value: string;\n  onValueChange: (item: string) => void;\n};\n\nexport const RadioButtonContext = React.createContext<RadioButtonContextType>(\n  null as any\n);\n\n/**\n * Radio button group allows to control a group of radio buttons.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-button-group-android.gif\" />\n *  <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-button-group-ios.gif\" />\n *  <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={newValue => setValue(newValue)} value={value}>\n *       <View>\n *         <Text>First</Text>\n *         <RadioButton value=\"first\" />\n *       </View>\n *       <View>\n *         <Text>Second</Text>\n *         <RadioButton value=\"second\" />\n *       </View>\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst RadioButtonGroup = ({ value, onValueChange, children }: Props) => (\n  <RadioButtonContext.Provider value={{ value, onValueChange }}>\n    <View accessibilityRole=\"radiogroup\">{children}</View>\n  </RadioButtonContext.Provider>\n);\n\nRadioButtonGroup.displayName = 'RadioButton.Group';\nexport default RadioButtonGroup;\n\n// @component-docs ignore-next-line\nexport { RadioButtonGroup };\n"]},"metadata":{},"sourceType":"module"}
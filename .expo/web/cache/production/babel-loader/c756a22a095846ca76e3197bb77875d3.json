{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"source\",\"color\",\"size\",\"theme\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Image from\"react-native-web/dist/exports/Image\";import Platform from\"react-native-web/dist/exports/Platform\";import{Consumer as SettingsConsumer}from\"../core/settings\";import{withInternalTheme}from\"../core/theming\";import{accessibilityProps}from\"./MaterialCommunityIcon\";var isImageSource=function isImageSource(source){return typeof source==='object'&&source!==null&&Object.prototype.hasOwnProperty.call(source,'uri')&&typeof source.uri==='string'||typeof source==='number'||Platform.OS==='web'&&typeof source==='string'&&(source.startsWith('data:image')||/\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source));};var getIconId=function getIconId(source){if(typeof source==='object'&&source!==null&&Object.prototype.hasOwnProperty.call(source,'uri')&&typeof source.uri==='string'){return source.uri;}return source;};export var isValidIcon=function isValidIcon(source){return typeof source==='string'||typeof source==='function'||isImageSource(source);};export var isEqualIcon=function isEqualIcon(a,b){return a===b||getIconId(a)===getIconId(b);};var Icon=function Icon(_ref){var source=_ref.source,color=_ref.color,size=_ref.size,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var direction=typeof source==='object'&&source.direction&&source.source?source.direction==='auto'?I18nManager.getConstants().isRTL?'rtl':'ltr':source.direction:null;var s=typeof source==='object'&&source.direction&&source.source?source.source:source;var iconColor=color||(theme.isV3?theme.colors.onSurface:theme.colors.text);if(isImageSource(s)){return React.createElement(Image,_extends({},rest,{source:s,style:[{transform:[{scaleX:direction==='rtl'?-1:1}]},{width:size,height:size,tintColor:color,resizeMode:'contain'}]},accessibilityProps,{accessibilityIgnoresInvertColors:true}));}else if(typeof s==='string'){return React.createElement(SettingsConsumer,null,function(_ref2){var icon=_ref2.icon;return icon({name:s,color:iconColor,size:size,direction:direction});});}else if(typeof s==='function'){return s({color:iconColor,size:size,direction:direction});}return null;};export default withInternalTheme(Icon);","map":{"version":3,"mappings":"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","names":["React","Consumer","SettingsConsumer","withInternalTheme","accessibilityProps","isImageSource","source","Object","prototype","hasOwnProperty","call","uri","Platform","OS","startsWith","test","getIconId","isValidIcon","isEqualIcon","a","b","Icon","_ref","color","size","theme","rest","direction","I18nManager","getConstants","isRTL","s","iconColor","isV3","colors","onSurface","text","Image","style","transform","scaleX","width","height","tintColor","resizeMode","accessibilityIgnoresInvertColors","icon","_ref2","name"],"sources":["Icon.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Image,\n  ImageSourcePropType,\n  Platform,\n} from 'react-native';\n\nimport { Consumer as SettingsConsumer } from '../core/settings';\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\nimport { accessibilityProps } from './MaterialCommunityIcon';\n\ntype IconSourceBase = string | ImageSourcePropType;\n\nexport type IconSource =\n  | IconSourceBase\n  | Readonly<{ source: IconSourceBase; direction: 'rtl' | 'ltr' | 'auto' }>\n  | ((props: IconProps & { color: string }) => React.ReactNode);\n\ntype IconProps = {\n  size: number;\n  allowFontScaling?: boolean;\n};\n\ntype Props = IconProps & {\n  color?: string;\n  source: any;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst isImageSource = (source: any) =>\n  // source is an object with uri\n  (typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string') ||\n  // source is a module, e.g. - require('image')\n  typeof source === 'number' ||\n  // image url on web\n  (Platform.OS === 'web' &&\n    typeof source === 'string' &&\n    (source.startsWith('data:image') ||\n      /\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source)));\n\nconst getIconId = (source: any) => {\n  if (\n    typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string'\n  ) {\n    return source.uri;\n  }\n\n  return source;\n};\n\nexport const isValidIcon = (source: any) =>\n  typeof source === 'string' ||\n  typeof source === 'function' ||\n  isImageSource(source);\n\nexport const isEqualIcon = (a: any, b: any) =>\n  a === b || getIconId(a) === getIconId(b);\n\nconst Icon = ({ source, color, size, theme, ...rest }: Props) => {\n  const direction =\n    typeof source === 'object' && source.direction && source.source\n      ? source.direction === 'auto'\n        ? I18nManager.getConstants().isRTL\n          ? 'rtl'\n          : 'ltr'\n        : source.direction\n      : null;\n  const s =\n    typeof source === 'object' && source.direction && source.source\n      ? source.source\n      : source;\n  const iconColor =\n    color || (theme.isV3 ? theme.colors.onSurface : theme.colors.text);\n\n  if (isImageSource(s)) {\n    return (\n      <Image\n        {...rest}\n        source={s}\n        style={[\n          {\n            transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n          },\n          {\n            width: size,\n            height: size,\n            tintColor: color,\n            resizeMode: 'contain',\n          },\n        ]}\n        {...accessibilityProps}\n        accessibilityIgnoresInvertColors\n      />\n    );\n  } else if (typeof s === 'string') {\n    return (\n      <SettingsConsumer>\n        {({ icon }) => {\n          return icon({\n            name: s,\n            color: iconColor,\n            size,\n            direction,\n          });\n        }}\n      </SettingsConsumer>\n    );\n  } else if (typeof s === 'function') {\n    return s({ color: iconColor, size, direction });\n  }\n\n  return null;\n};\n\nexport default withInternalTheme(Icon);\n"]},"metadata":{},"sourceType":"module"}
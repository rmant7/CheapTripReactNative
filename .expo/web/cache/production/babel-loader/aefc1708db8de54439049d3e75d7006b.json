{"ast":null,"code":"import*as React from'react';import NavigationBuilderContext from\"./NavigationBuilderContext\";export default function useFocusedListenersChildrenAdapter(_ref){var navigation=_ref.navigation,focusedListeners=_ref.focusedListeners;var _React$useContext=React.useContext(NavigationBuilderContext),addListener=_React$useContext.addListener;var listener=React.useCallback(function(callback){if(navigation.isFocused()){for(var _listener of focusedListeners){var _listener2=_listener(callback),handled=_listener2.handled,result=_listener2.result;if(handled){return{handled:handled,result:result};}}return{handled:true,result:callback(navigation)};}else{return{handled:false,result:null};}},[focusedListeners,navigation]);React.useEffect(function(){return addListener===null||addListener===void 0?void 0:addListener('focus',listener);},[addListener,listener]);}","map":{"version":3,"sources":["useFocusedListenersChildrenAdapter.tsx"],"names":["React","NavigationBuilderContext","useFocusedListenersChildrenAdapter","navigation","focusedListeners","addListener","useContext","listener","useCallback","callback","isFocused","handled","result","useEffect"],"mappings":"AACA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAE9B,MAAOC,yBAAwB,kCAc/B,cAAe,SAASC,mCAAkC,CAAA,IAAA,CAG9C,CAH+C,GACzDC,WAAU,CAEF,IAAA,CAFRA,UAAU,CACVC,gBAAAA,CACQ,IAAA,CADRA,gBAAAA,CAEA,sBAAwBJ,KAAK,CAACM,UAAU,CAACL,wBAAwB,CAAC,CAA1DI,WAAAA,mBAAAA,WAAAA,CAER,GAAME,SAAQ,CAAGP,KAAK,CAACQ,WAAW,CAC/BC,SAAAA,QAAwC,CAAK,CAC5C,GAAIN,UAAU,CAACO,SAAS,EAAE,CAAE,CAC1B,IAAK,GAAMH,UAAQ,GAAIH,iBAAgB,CAAE,CACvC,eAA4BG,SAAQ,CAACE,QAAQ,CAAC,CAAtCE,OAAO,YAAPA,OAAO,CAAEC,MAAAA,YAAAA,MAAAA,CAEjB,GAAID,OAAO,CAAE,CACX,MAAO,CAAEA,OAAO,CAAPA,OAAO,CAAEC,MAAAA,CAAAA,MAAO,CAAC,CAC5B,CACF,CAEA,MAAO,CAAED,OAAO,CAAE,IAAI,CAAEC,MAAM,CAAEH,QAAQ,CAACN,UAAU,CAAE,CAAC,CACxD,CAAC,IAAM,CACL,MAAO,CAAEQ,OAAO,CAAE,KAAK,CAAEC,MAAM,CAAE,IAAK,CAAC,CACzC,CACF,CAAC,CACD,CAACR,gBAAgB,CAAED,UAAU,CAAC,CAC/B,CAEDH,KAAK,CAACa,SAAS,CACb,iBAAMR,YAAW,GAAA,IAAA,EAAXA,WAAW,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAXA,WAAW,CAAG,OAAO,CAAEE,QAAQ,CAAC,GACtC,CAACF,WAAW,CAAEE,QAAQ,CAAC,CACxB,CACH","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\n/**\n * Hook for passing focus callback to children\n */\nexport default function useFocusedListenersChildrenAdapter(_ref) {\n  let {\n    navigation,\n    focusedListeners\n  } = _ref;\n  const {\n    addListener\n  } = React.useContext(NavigationBuilderContext);\n  const listener = React.useCallback(callback => {\n    if (navigation.isFocused()) {\n      for (const listener of focusedListeners) {\n        const {\n          handled,\n          result\n        } = listener(callback);\n        if (handled) {\n          return {\n            handled,\n            result\n          };\n        }\n      }\n      return {\n        handled: true,\n        result: callback(navigation)\n      };\n    } else {\n      return {\n        handled: false,\n        result: null\n      };\n    }\n  }, [focusedListeners, navigation]);\n  React.useEffect(() => addListener === null || addListener === void 0 ? void 0 : addListener('focus', listener), [addListener, listener]);\n}\n//# sourceMappingURL=useFocusedListenersChildrenAdapter.js.map"]},"metadata":{},"sourceType":"module"}
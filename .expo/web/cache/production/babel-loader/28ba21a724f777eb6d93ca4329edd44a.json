{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';export default function useLayout(){var _React$useState=React.useState({height:0,width:0,measured:false}),_React$useState2=_slicedToArray(_React$useState,2),layout=_React$useState2[0],setLayout=_React$useState2[1];var onLayout=React.useCallback(function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;if(height===layout.height&&width===layout.width){return;}setLayout({height:height,width:width,measured:true});},[layout.height,layout.width]);return[layout,onLayout];}","map":{"version":3,"sources":["useLayout.tsx"],"names":["React","useLayout","layout","setLayout","useState","height","width","measured","onLayout","useCallback","e","nativeEvent"],"mappings":"iEAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAG9B,cAAe,SAASC,UAAS,EAAG,CAClC,oBAA4BD,KAAK,CAACI,QAAQ,CAIvC,CAAEC,MAAM,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,QAAQ,CAAE,KAAM,CAAC,CAAC,oDAJrCL,MAAM,qBAAEC,SAAS,qBAMxB,GAAMK,SAAQ,CAAGR,KAAK,CAACS,WAAW,CAC/BC,SAAAA,CAAoB,CAAK,CACxB,0BAA0BA,CAAC,CAACC,WAAW,CAACT,MAAM,CAAtCG,MAAM,uBAANA,MAAM,CAAEC,KAAAA,uBAAAA,KAAAA,CAEhB,GAAID,MAAM,GAAKH,MAAM,CAACG,MAAM,EAAIC,KAAK,GAAKJ,MAAM,CAACI,KAAK,CAAE,CACtD,OACF,CAEAH,SAAS,CAAC,CACRE,MAAM,CAANA,MAAM,CACNC,KAAK,CAALA,KAAK,CACLC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CAAC,CACD,CAACL,MAAM,CAACG,MAAM,CAAEH,MAAM,CAACI,KAAK,CAAC,CAC9B,CAED,MAAO,CAACJ,MAAM,CAAEM,QAAQ,CAAC,CAC3B","sourcesContent":["import * as React from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\n\nexport default function useLayout() {\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    width: number;\n    measured: boolean;\n  }>({ height: 0, width: 0, measured: false });\n\n  const onLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      const { height, width } = e.nativeEvent.layout;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      setLayout({\n        height,\n        width,\n        measured: true,\n      });\n    },\n    [layout.height, layout.width]\n  );\n\n  return [layout, onLayout] as const;\n}\n"]},"metadata":{},"sourceType":"module"}
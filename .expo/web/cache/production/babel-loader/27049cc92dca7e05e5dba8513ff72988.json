{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"active\",\"activityState\",\"style\",\"enabled\"];function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";export*from\"./types\";export{default as useTransitionProgress}from\"./useTransitionProgress\";export{isSearchBarAvailableForCurrentPlatform,executeNativeBackPress}from\"./utils\";var ENABLE_SCREENS=true;export function enableScreens(){var shouldEnableScreens=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;ENABLE_SCREENS=shouldEnableScreens;}export function screensEnabled(){return ENABLE_SCREENS;}export function enableFreeze(){var shouldEnableReactFreeze=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;}export var NativeScreen=function(_React$Component){_inherits(NativeScreen,_React$Component);var _super=_createSuper(NativeScreen);function NativeScreen(){_classCallCheck(this,NativeScreen);return _super.apply(this,arguments);}_createClass(NativeScreen,[{key:\"render\",value:function render(){var _this$props=this.props,active=_this$props.active,activityState=_this$props.activityState,style=_this$props.style,_this$props$enabled=_this$props.enabled,enabled=_this$props$enabled===void 0?ENABLE_SCREENS:_this$props$enabled,rest=_objectWithoutProperties(_this$props,_excluded);if(enabled){if(active!==undefined&&activityState===undefined){activityState=active!==0?2:0;}return React.createElement(View,_extends({hidden:activityState===0,style:[style,{display:activityState!==0?'flex':'none'}]},rest));}return React.createElement(View,rest);}}]);return NativeScreen;}(React.Component);export var Screen=Animated.createAnimatedComponent(NativeScreen);export var InnerScreen=View;export var ScreenContext=React.createContext(Screen);export var ScreenContainer=View;export var NativeScreenContainer=View;export var NativeScreenNavigationContainer=View;export var ScreenStack=View;export var FullWindowOverlay=View;export var ScreenStackHeaderBackButtonImage=function ScreenStackHeaderBackButtonImage(props){return React.createElement(View,null,React.createElement(Image,_extends({resizeMode:\"center\",fadeDuration:0},props)));};export var ScreenStackHeaderRightView=function ScreenStackHeaderRightView(props){return React.createElement(View,props);};export var ScreenStackHeaderLeftView=function ScreenStackHeaderLeftView(props){return React.createElement(View,props);};export var ScreenStackHeaderCenterView=function ScreenStackHeaderCenterView(props){return React.createElement(View,props);};export var ScreenStackHeaderSearchBarView=function ScreenStackHeaderSearchBarView(props){return React.createElement(View,props);};export var ScreenStackHeaderConfig=View;export var SearchBar=View;export var ScreenStackHeaderSubview=View;export var shouldUseActivityState=true;","map":{"version":3,"mappings":"46CAAA,MAAOA,MAAP,KAAkB,OAAlB,0KAWA,qBACA,OAASC,OAAO,GAAIC,sBAApB,+BACA,OACEC,sCADF,CAEEC,sBAFF,eAKA,GAAIC,eAAc,CAAG,IAArB,CAEA,MAAO,SAASC,cAAT,EAAyD,IAAlCC,oBAAmB,2DAAG,IAA7C,CACLF,cAAc,CAAGE,mBAAjB,CACD,CAED,MAAO,SAASC,eAAT,EAAmC,CACxC,MAAOH,eAAP,CACD,CAID,MAAO,SAASI,aAAT,EAA4D,IAAtCC,wBAAuB,2DAAG,IAAhD,CAEN,CAED,UAAaC,aAAN,0PACLC,iBAAsB,CACpB,gBAMI,KAAKC,KANT,CACEC,MADE,aACFA,MADE,CAEFC,aAFE,aAEFA,aAFE,CAGFC,KAHE,aAGFA,KAHE,iCAIFC,OAAO,CAAPA,OAAO,8BAAGZ,cAJR,qBAKCa,qDAGL,GAAID,OAAJ,CAAa,CACX,GAAIH,MAAM,GAAKK,SAAX,EAAwBJ,aAAa,GAAKI,SAA9C,CAAyD,CACvDJ,aAAa,CAAGD,MAAM,GAAK,CAAX,CAAe,CAAf,CAAmB,CAAnC,CACD,CACD,MACEd,qBAACoB,IAAD,WAEEC,MAAM,CAAEN,aAAa,GAAK,CAF5B,CAGEC,KAAK,CAAE,CAACA,KAAD,CAAQ,CAAEM,OAAO,CAAEP,aAAa,GAAK,CAAlB,CAAsB,MAAtB,CAA+B,MAA1C,CAAR,CAHT,EAIMG,IAJN,EADF,CAQD,CAED,MAAOlB,qBAACoB,IAAD,CAAUF,IAAV,CAAP,CACD,2BAzB+BlB,KAAK,CAACuB,SAAjC,EA4BP,MAAO,IAAMC,OAAM,CAAGC,QAAQ,CAACC,uBAAT,CAAiCf,YAAjC,CAAf,CAEP,MAAO,IAAMgB,YAAW,CAAGP,IAApB,CAEP,MAAO,IAAMQ,cAAa,CAAG5B,KAAK,CAAC6B,aAAN,CAAoBL,MAApB,CAAtB,CAEP,MAAO,IAAMM,gBAA0D,CAAGV,IAAnE,CAEP,MAAO,IAAMW,sBAAgE,CAAGX,IAAzE,CAEP,MAAO,IAAMY,gCAA0E,CAAGZ,IAAnF,CAEP,MAAO,IAAMa,YAAkD,CAAGb,IAA3D,CAEP,MAAO,IAAMc,kBAAiB,CAAGd,IAA1B,CAEP,MAAO,IAAMe,iCAAgC,CAC3CtB,QADWsB,iCAAgC,CAC3CtB,KAD8C,QAG9Cb,qBAACoB,IAAD,MACEpB,oBAACoC,KAAD,WAAOC,UAAU,CAAC,QAAlB,CAA2BC,YAAY,CAAE,CAAzC,EAAgDzB,KAAhD,EADF,CAHK,GAQP,MAAO,IAAM0B,2BAA0B,CACrC1B,QADW0B,2BAA0B,CACrC1B,KADwC,QAExBb,qBAACoB,IAAD,CAAUP,KAAV,CAFX,GAIP,MAAO,IAAM2B,0BAAyB,CACpC3B,QADW2B,0BAAyB,CACpC3B,KADuC,QAEvBb,qBAACoB,IAAD,CAAUP,KAAV,CAFX,GAIP,MAAO,IAAM4B,4BAA2B,CACtC5B,QADW4B,4BAA2B,CACtC5B,KADyC,QAEzBb,qBAACoB,IAAD,CAAUP,KAAV,CAFX,GAIP,MAAO,IAAM6B,+BAA8B,CACzC7B,QADW6B,+BAA8B,CACzC7B,KAD4C,QAE5Bb,qBAACoB,IAAD,CAAUP,KAAV,CAFX,GAIP,MAAO,IAAM8B,wBAA0E,CAAGvB,IAAnF,CAGP,MAAO,IAAMwB,UAA8C,CAAGxB,IAAvD,CAEP,MAAO,IAAMyB,yBAEX,CAAGzB,IAFE,CAIP,MAAO,IAAM0B,uBAAsB,CAAG,IAA/B","names":["React","default","useTransitionProgress","isSearchBarAvailableForCurrentPlatform","executeNativeBackPress","ENABLE_SCREENS","enableScreens","shouldEnableScreens","screensEnabled","enableFreeze","shouldEnableReactFreeze","NativeScreen","render","props","active","activityState","style","enabled","rest","undefined","View","hidden","display","Component","Screen","Animated","createAnimatedComponent","InnerScreen","ScreenContext","createContext","ScreenContainer","NativeScreenContainer","NativeScreenNavigationContainer","ScreenStack","FullWindowOverlay","ScreenStackHeaderBackButtonImage","Image","resizeMode","fadeDuration","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","ScreenStackHeaderConfig","SearchBar","ScreenStackHeaderSubview","shouldUseActivityState"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, View, ViewProps, ImageProps, Image } from 'react-native';\nimport {\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  HeaderSubviewTypes,\n  SearchBarProps,\n} from './types';\n\nexport * from './types';\nexport { default as useTransitionProgress } from './useTransitionProgress';\nexport {\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n} from './utils';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\n// @ts-ignore function stub, freezing logic is located in index.native.tsx\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function enableFreeze(shouldEnableReactFreeze = true): void {\n  // noop\n}\n\nexport class NativeScreen extends React.Component<ScreenProps> {\n  render(): JSX.Element {\n    let {\n      active,\n      activityState,\n      style,\n      enabled = ENABLE_SCREENS,\n      ...rest\n    } = this.props;\n\n    if (enabled) {\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0; // change taken from index.native.tsx\n      }\n      return (\n        <View\n          // @ts-expect-error: hidden exists on web, but not in React Native\n          hidden={activityState === 0}\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          {...rest}\n        />\n      );\n    }\n\n    return <View {...rest} />;\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const InnerScreen = View;\n\nexport const ScreenContext = React.createContext(Screen);\n\nexport const ScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const NativeScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const NativeScreenNavigationContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const ScreenStack: React.ComponentType<ScreenStackProps> = View;\n\nexport const FullWindowOverlay = View;\n\nexport const ScreenStackHeaderBackButtonImage = (\n  props: ImageProps\n): JSX.Element => (\n  <View>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </View>\n);\n\nexport const ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps> = View;\n\n// @ts-expect-error: search bar props have no common props with View\nexport const SearchBar: React.ComponentType<SearchBarProps> = View;\n\nexport const ScreenStackHeaderSubview: React.ComponentType<React.PropsWithChildren<\n  ViewProps & { type?: HeaderSubviewTypes }\n>> = View;\n\nexport const shouldUseActivityState = true;\n"]},"metadata":{},"sourceType":"module"}
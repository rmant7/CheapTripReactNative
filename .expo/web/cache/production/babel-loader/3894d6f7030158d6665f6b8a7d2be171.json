{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import AnimatedText from\"../../Typography/AnimatedText\";var InputLabel=function InputLabel(props){var parentState=props.parentState,labelBackground=props.labelBackground;var _props$labelProps=props.labelProps,label=_props$labelProps.label,error=_props$labelProps.error,onLayoutAnimatedText=_props$labelProps.onLayoutAnimatedText,hasActiveOutline=_props$labelProps.hasActiveOutline,activeColor=_props$labelProps.activeColor,placeholderStyle=_props$labelProps.placeholderStyle,baseLabelTranslateX=_props$labelProps.baseLabelTranslateX,baseLabelTranslateY=_props$labelProps.baseLabelTranslateY,font=_props$labelProps.font,fontSize=_props$labelProps.fontSize,lineHeight=_props$labelProps.lineHeight,fontWeight=_props$labelProps.fontWeight,placeholderOpacity=_props$labelProps.placeholderOpacity,wiggleOffsetX=_props$labelProps.wiggleOffsetX,labelScale=_props$labelProps.labelScale,topPosition=_props$labelProps.topPosition,paddingOffset=_props$labelProps.paddingOffset,placeholderColor=_props$labelProps.placeholderColor,errorColor=_props$labelProps.errorColor,labelTranslationXOffset=_props$labelProps.labelTranslationXOffset,maxFontSizeMultiplier=_props$labelProps.maxFontSizeMultiplier,testID=_props$labelProps.testID;var labelTranslationX={transform:[{translateX:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[baseLabelTranslateX,labelTranslationXOffset||0]})}]};var labelStyle=_objectSpread(_objectSpread({},font),{},{fontSize:fontSize,lineHeight:lineHeight,fontWeight:fontWeight,transform:[{translateX:parentState.error.interpolate({inputRange:[0,0.5,1],outputRange:[0,parentState.value&&error?wiggleOffsetX:0,0]})},{translateY:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[baseLabelTranslateY,0]})},{scale:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[labelScale,1]})}]});var textColor=error&&errorColor?errorColor:placeholderColor;return label?React.createElement(Animated.View,{pointerEvents:\"none\",style:[StyleSheet.absoluteFill,styles.labelContainer,{opacity:parentState.value||parentState.focused?parentState.labelLayout.measured?1:0:1},labelTranslationX]},labelBackground===null||labelBackground===void 0?void 0:labelBackground({parentState:parentState,labelStyle:labelStyle,labelProps:props.labelProps,maxFontSizeMultiplier:maxFontSizeMultiplier}),React.createElement(AnimatedText,{variant:\"bodySmall\",onLayout:onLayoutAnimatedText,style:[placeholderStyle,{top:topPosition},labelStyle,paddingOffset||{},{color:activeColor,opacity:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[hasActiveOutline?1:0,0]})}],numberOfLines:1,maxFontSizeMultiplier:maxFontSizeMultiplier,testID:testID+\"-label-active\"},label),React.createElement(AnimatedText,{variant:parentState.focused?'bodyLarge':'bodySmall',style:[placeholderStyle,{top:topPosition},labelStyle,paddingOffset,{color:textColor,opacity:placeholderOpacity}],numberOfLines:1,maxFontSizeMultiplier:maxFontSizeMultiplier,testID:testID+\"-label-inactive\"},label)):null;};var styles=StyleSheet.create({labelContainer:{zIndex:3}});export default InputLabel;","map":{"version":3,"mappings":"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","names":["React","AnimatedText","InputLabel","props","parentState","labelBackground","labelProps","label","error","onLayoutAnimatedText","hasActiveOutline","activeColor","placeholderStyle","baseLabelTranslateX","baseLabelTranslateY","font","fontSize","lineHeight","fontWeight","placeholderOpacity","wiggleOffsetX","labelScale","topPosition","paddingOffset","placeholderColor","errorColor","labelTranslationXOffset","maxFontSizeMultiplier","testID","labelTranslationX","transform","translateX","labeled","interpolate","inputRange","outputRange","labelStyle","value","translateY","scale","textColor","Animated","View","pointerEvents","style","StyleSheet","absoluteFill","styles","labelContainer","opacity","focused","labelLayout","measured","variant","onLayout","top","color","numberOfLines","create","zIndex"],"sources":["InputLabel.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport type { InputLabelProps } from '../types';\n\nconst InputLabel = (props: InputLabelProps) => {\n  const { parentState, labelBackground } = props;\n  const {\n    label,\n    error,\n    onLayoutAnimatedText,\n    hasActiveOutline,\n    activeColor,\n    placeholderStyle,\n    baseLabelTranslateX,\n    baseLabelTranslateY,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    placeholderOpacity,\n    wiggleOffsetX,\n    labelScale,\n    topPosition,\n    paddingOffset,\n    placeholderColor,\n    errorColor,\n    labelTranslationXOffset,\n    maxFontSizeMultiplier,\n    testID,\n  } = props.labelProps;\n\n  const labelTranslationX = {\n    transform: [\n      {\n        // Offset label scale since RN doesn't support transform origin\n        translateX: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0],\n        }),\n      },\n    ],\n  };\n\n  const labelStyle = {\n    ...font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    transform: [\n      {\n        // Wiggle the label when there's an error\n        translateX: parentState.error.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [0, parentState.value && error ? wiggleOffsetX : 0, 0],\n        }),\n      },\n      {\n        // Move label to top\n        translateY: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [baseLabelTranslateY, 0],\n        }),\n      },\n      {\n        // Make label smaller\n        scale: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [labelScale, 1],\n        }),\n      },\n    ],\n  };\n\n  const textColor = error && errorColor ? errorColor : placeholderColor;\n\n  return label ? (\n    // Position colored placeholder and gray placeholder on top of each other and crossfade them\n    // This gives the effect of animating the color, but allows us to use native driver\n    <Animated.View\n      pointerEvents=\"none\"\n      style={[\n        StyleSheet.absoluteFill,\n        styles.labelContainer,\n        {\n          opacity:\n            // Hide the label in minimized state until we measure it's width\n            parentState.value || parentState.focused\n              ? parentState.labelLayout.measured\n                ? 1\n                : 0\n              : 1,\n        },\n        labelTranslationX,\n      ]}\n    >\n      {labelBackground?.({\n        parentState,\n        labelStyle,\n        labelProps: props.labelProps,\n        maxFontSizeMultiplier: maxFontSizeMultiplier,\n      })}\n      <AnimatedText\n        variant=\"bodySmall\"\n        onLayout={onLayoutAnimatedText}\n        style={[\n          placeholderStyle,\n          {\n            top: topPosition,\n          },\n          labelStyle,\n          paddingOffset || {},\n          {\n            color: activeColor,\n            opacity: parentState.labeled.interpolate({\n              inputRange: [0, 1],\n              outputRange: [hasActiveOutline ? 1 : 0, 0],\n            }),\n          },\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        testID={`${testID}-label-active`}\n      >\n        {label}\n      </AnimatedText>\n      <AnimatedText\n        variant={parentState.focused ? 'bodyLarge' : 'bodySmall'}\n        style={[\n          placeholderStyle,\n          {\n            top: topPosition,\n          },\n          labelStyle,\n          paddingOffset,\n          {\n            color: textColor,\n            opacity: placeholderOpacity,\n          },\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        testID={`${testID}-label-inactive`}\n      >\n        {label}\n      </AnimatedText>\n    </Animated.View>\n  ) : null;\n};\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    zIndex: 3,\n  },\n});\n\nexport default InputLabel;\n"]},"metadata":{},"sourceType":"module"}
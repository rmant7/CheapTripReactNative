{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import color from'color';import configureFonts from\"../../fonts\";import{black,pinkA100,white}from\"./colors\";import{MD2LightTheme}from\"./LightTheme\";export var MD2DarkTheme=_objectSpread(_objectSpread({},MD2LightTheme),{},{dark:true,mode:'adaptive',version:2,isV3:false,colors:_objectSpread(_objectSpread({},MD2LightTheme.colors),{},{primary:'#BB86FC',accent:'#03dac6',background:'#121212',surface:'#121212',error:'#CF6679',onSurface:'#FFFFFF',text:white,disabled:color(white).alpha(0.38).rgb().string(),placeholder:color(white).alpha(0.54).rgb().string(),backdrop:color(black).alpha(0.5).rgb().string(),notification:pinkA100,tooltip:'rgba(230, 225, 229, 1)'}),fonts:configureFonts({isV3:false})});","map":{"version":3,"mappings":"w0BAAA,MAAOA,MAAK,KAAM,OAAO,CAGzB,MAAOC,eAAc,mBACrB,OAASC,KAAK,CAAEC,QAAQ,CAAEC,KAAK,gBAC/B,OAASC,aAAa,oBAEtB,MAAO,IAAMC,aAAsB,gCAC9BD,aAAa,MAChBE,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,UAAU,CAChBC,OAAO,CAAE,CAAC,CACVC,IAAI,CAAE,KAAK,CACXC,MAAM,gCACDN,aAAa,CAACM,MAAM,MACvBC,OAAO,CAAE,SAAS,CAClBC,MAAM,CAAE,SAAS,CACjBC,UAAU,CAAE,SAAS,CACrBC,OAAO,CAAE,SAAS,CAClBC,KAAK,CAAE,SAAS,CAChBC,SAAS,CAAE,SAAS,CACpBC,IAAI,CAAEd,KAAK,CACXe,QAAQ,CAAEnB,KAAK,CAACI,KAAK,CAAC,CAACgB,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE,CACjDC,WAAW,CAAEvB,KAAK,CAACI,KAAK,CAAC,CAACgB,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE,CACpDE,QAAQ,CAAExB,KAAK,CAACE,KAAK,CAAC,CAACkB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE,CAChDG,YAAY,CAAEtB,QAAQ,CACtBuB,OAAO,CAAE,0BACV,CACDC,KAAK,CAAE1B,cAAc,CAAC,CAAES,IAAI,CAAE,KAAM,CAAC,GACtC","names":["color","configureFonts","black","pinkA100","white","MD2LightTheme","MD2DarkTheme","dark","mode","version","isV3","colors","primary","accent","background","surface","error","onSurface","text","disabled","alpha","rgb","string","placeholder","backdrop","notification","tooltip","fonts"],"sources":["DarkTheme.tsx"],"sourcesContent":["import color from 'color';\n\nimport type { Fonts, MD2Theme } from '../../../types';\nimport configureFonts from '../../fonts';\nimport { black, pinkA100, white } from './colors';\nimport { MD2LightTheme } from './LightTheme';\n\nexport const MD2DarkTheme: MD2Theme = {\n  ...MD2LightTheme,\n  dark: true,\n  mode: 'adaptive',\n  version: 2,\n  isV3: false,\n  colors: {\n    ...MD2LightTheme.colors,\n    primary: '#BB86FC',\n    accent: '#03dac6',\n    background: '#121212',\n    surface: '#121212',\n    error: '#CF6679',\n    onSurface: '#FFFFFF',\n    text: white,\n    disabled: color(white).alpha(0.38).rgb().string(),\n    placeholder: color(white).alpha(0.54).rgb().string(),\n    backdrop: color(black).alpha(0.5).rgb().string(),\n    notification: pinkA100,\n    tooltip: 'rgba(230, 225, 229, 1)',\n  },\n  fonts: configureFonts({ isV3: false }) as Fonts,\n};\n"]},"metadata":{},"sourceType":"module"}
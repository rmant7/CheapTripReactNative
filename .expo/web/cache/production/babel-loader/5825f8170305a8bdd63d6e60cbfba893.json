{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{ContinousBaseGesture}from\"./gesture\";function changeEventCalculator(current,previous){'worklet';var changePayload;if(previous===undefined){changePayload={changeX:current.translationX,changeY:current.translationY};}else{changePayload={changeX:current.translationX-previous.translationX,changeY:current.translationY-previous.translationY};}return _objectSpread(_objectSpread({},current),changePayload);}export var PanGesture=function(_ContinousBaseGesture){_inherits(PanGesture,_ContinousBaseGesture);var _super=_createSuper(PanGesture);function PanGesture(){var _this;_classCallCheck(this,PanGesture);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),\"config\",{});_this.handlerName='PanGestureHandler';return _this;}_createClass(PanGesture,[{key:\"activeOffsetY\",value:function activeOffsetY(offset){if(Array.isArray(offset)){this.config.activeOffsetYStart=offset[0];this.config.activeOffsetYEnd=offset[1];}else if(offset<0){this.config.activeOffsetYStart=offset;}else{this.config.activeOffsetYEnd=offset;}return this;}},{key:\"activeOffsetX\",value:function activeOffsetX(offset){if(Array.isArray(offset)){this.config.activeOffsetXStart=offset[0];this.config.activeOffsetXEnd=offset[1];}else if(offset<0){this.config.activeOffsetXStart=offset;}else{this.config.activeOffsetXEnd=offset;}return this;}},{key:\"failOffsetY\",value:function failOffsetY(offset){if(Array.isArray(offset)){this.config.failOffsetYStart=offset[0];this.config.failOffsetYEnd=offset[1];}else if(offset<0){this.config.failOffsetYStart=offset;}else{this.config.failOffsetYEnd=offset;}return this;}},{key:\"failOffsetX\",value:function failOffsetX(offset){if(Array.isArray(offset)){this.config.failOffsetXStart=offset[0];this.config.failOffsetXEnd=offset[1];}else if(offset<0){this.config.failOffsetXStart=offset;}else{this.config.failOffsetXEnd=offset;}return this;}},{key:\"minPointers\",value:function minPointers(_minPointers){this.config.minPointers=_minPointers;return this;}},{key:\"maxPointers\",value:function maxPointers(_maxPointers){this.config.maxPointers=_maxPointers;return this;}},{key:\"minDistance\",value:function minDistance(distance){this.config.minDist=distance;return this;}},{key:\"minVelocity\",value:function minVelocity(velocity){this.config.minVelocity=velocity;return this;}},{key:\"minVelocityX\",value:function minVelocityX(velocity){this.config.minVelocityX=velocity;return this;}},{key:\"minVelocityY\",value:function minVelocityY(velocity){this.config.minVelocityY=velocity;return this;}},{key:\"averageTouches\",value:function averageTouches(value){this.config.avgTouches=value;return this;}},{key:\"enableTrackpadTwoFingerGesture\",value:function enableTrackpadTwoFingerGesture(value){this.config.enableTrackpadTwoFingerGesture=value;return this;}},{key:\"activateAfterLongPress\",value:function activateAfterLongPress(duration){this.config.activateAfterLongPress=duration;return this;}},{key:\"onChange\",value:function onChange(callback){this.handlers.changeEventCalculator=changeEventCalculator;return _get(_getPrototypeOf(PanGesture.prototype),\"onChange\",this).call(this,callback);}}]);return PanGesture;}(ContinousBaseGesture);","map":{"version":3,"mappings":"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","names":["ContinousBaseGesture","changeEventCalculator","current","previous","changePayload","undefined","changeX","translationX","changeY","translationY","PanGesture","constructor","_defineProperty","handlerName","activeOffsetY","offset","Array","isArray","config","activeOffsetYStart","activeOffsetYEnd","activeOffsetX","activeOffsetXStart","activeOffsetXEnd","failOffsetY","failOffsetYStart","failOffsetYEnd","failOffsetX","failOffsetXStart","failOffsetXEnd","minPointers","maxPointers","minDistance","distance","minDist","minVelocity","velocity","minVelocityX","minVelocityY","averageTouches","value","avgTouches","enableTrackpadTwoFingerGesture","activateAfterLongPress","duration","onChange","callback","handlers"],"sources":["panGesture.ts"],"sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport {\n  PanGestureConfig,\n  PanGestureHandlerEventPayload,\n} from '../PanGestureHandler';\n\nexport type PanGestureChangeEventPayload = {\n  changeX: number;\n  changeY: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<PanGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<PanGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: PanGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      changeX: current.translationX,\n      changeY: current.translationY,\n    };\n  } else {\n    changePayload = {\n      changeX: current.translationX - previous.translationX,\n      changeY: current.translationY - previous.translationY,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class PanGesture extends ContinousBaseGesture<\n  PanGestureHandlerEventPayload,\n  PanGestureChangeEventPayload\n> {\n  public config: BaseGestureConfig & PanGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'PanGestureHandler';\n  }\n\n  activeOffsetY(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetYStart = offset[0];\n      this.config.activeOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetYStart = offset;\n    } else {\n      this.config.activeOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  activeOffsetX(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetXStart = offset[0];\n      this.config.activeOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetXStart = offset;\n    } else {\n      this.config.activeOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  failOffsetY(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetYStart = offset[0];\n      this.config.failOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetYStart = offset;\n    } else {\n      this.config.failOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  failOffsetX(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetXStart = offset[0];\n      this.config.failOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetXStart = offset;\n    } else {\n      this.config.failOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  maxPointers(maxPointers: number) {\n    this.config.maxPointers = maxPointers;\n    return this;\n  }\n\n  minDistance(distance: number) {\n    this.config.minDist = distance;\n    return this;\n  }\n\n  minVelocity(velocity: number) {\n    this.config.minVelocity = velocity;\n    return this;\n  }\n\n  minVelocityX(velocity: number) {\n    this.config.minVelocityX = velocity;\n    return this;\n  }\n\n  minVelocityY(velocity: number) {\n    this.config.minVelocityY = velocity;\n    return this;\n  }\n\n  averageTouches(value: boolean) {\n    this.config.avgTouches = value;\n    return this;\n  }\n\n  enableTrackpadTwoFingerGesture(value: boolean) {\n    this.config.enableTrackpadTwoFingerGesture = value;\n    return this;\n  }\n\n  activateAfterLongPress(duration: number) {\n    this.config.activateAfterLongPress = duration;\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        PanGestureHandlerEventPayload & PanGestureChangeEventPayload\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type PanGestureType = InstanceType<typeof PanGesture>;\n"]},"metadata":{},"sourceType":"module"}
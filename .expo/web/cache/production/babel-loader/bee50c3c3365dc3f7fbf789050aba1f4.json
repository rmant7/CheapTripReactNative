{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import isArrayEqual from\"./isArrayEqual\";import NavigationBuilderContext from\"./NavigationBuilderContext\";import NavigationRouteContext from\"./NavigationRouteContext\";export default function useOnGetState(_ref){var getState=_ref.getState,getStateListeners=_ref.getStateListeners;var _React$useContext=React.useContext(NavigationBuilderContext),addKeyedListener=_React$useContext.addKeyedListener;var route=React.useContext(NavigationRouteContext);var key=route?route.key:'root';var getRehydratedState=React.useCallback(function(){var state=getState();var routes=state.routes.map(function(route){var _getStateListeners$ro;var childState=(_getStateListeners$ro=getStateListeners[route.key])===null||_getStateListeners$ro===void 0?void 0:_getStateListeners$ro.call(getStateListeners);if(route.state===childState){return route;}return _objectSpread(_objectSpread({},route),{},{state:childState});});if(isArrayEqual(state.routes,routes)){return state;}return _objectSpread(_objectSpread({},state),{},{routes:routes});},[getState,getStateListeners]);React.useEffect(function(){return addKeyedListener===null||addKeyedListener===void 0?void 0:addKeyedListener('getState',key,getRehydratedState);},[addKeyedListener,getRehydratedState,key]);}","map":{"version":3,"sources":["useOnGetState.tsx"],"names":["React","isArrayEqual","NavigationBuilderContext","NavigationRouteContext","useOnGetState","getState","getStateListeners","addKeyedListener","useContext","route","key","getRehydratedState","useCallback","state","routes","map","childState","useEffect"],"mappings":"w0BACA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAE9B,MAAOC,aAAY,sBACnB,MAAOC,yBAAwB,kCAG/B,MAAOC,uBAAsB,gCAO7B,cAAe,SAASC,cAAa,CAAA,IAAA,CAGzB,CAH0B,GACpCC,SAAQ,CAEA,IAAA,CAFRA,QAAQ,CACRC,iBAAAA,CACQ,IAAA,CADRA,iBAAAA,CAEA,sBAA6BN,KAAK,CAACQ,UAAU,CAACN,wBAAwB,CAAC,CAA/DK,gBAAAA,mBAAAA,gBAAAA,CACR,GAAME,MAAK,CAAGT,KAAK,CAACQ,UAAU,CAACL,sBAAsB,CAAC,CACtD,GAAMO,IAAG,CAAGD,KAAK,CAAGA,KAAK,CAACC,GAAG,CAAG,MAAM,CAEtC,GAAMC,mBAAkB,CAAGX,KAAK,CAACY,WAAW,CAAC,UAAM,CACjD,GAAMC,MAAK,CAAGR,QAAQ,EAAE,CAGxB,GAAMS,OAAM,CAAGD,KAAK,CAACC,MAAM,CAACC,GAAG,CAAEN,SAAAA,KAAK,CAAK,CAAA,GAAA,sBAAA,CACzC,GAAMO,WAAU,CAAA,CAAA,qBAAA,CAAGV,iBAAiB,CAACG,KAAK,CAACC,GAAG,CAAC,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAA5BJ,qBAAAA,CAAAA,IAAAA,CAAAA,iBAAiB,CAAe,CAEnD,GAAIG,KAAK,CAACI,KAAK,GAAKG,UAAU,CAAE,CAC9B,MAAOP,MAAK,CACd,CAEA,sCAAYA,KAAK,MAAEI,KAAK,CAAEG,UAAAA,GAC5B,CAAC,CAAC,CAEF,GAAIf,YAAY,CAACY,KAAK,CAACC,MAAM,CAAEA,MAAM,CAAC,CAAE,CACtC,MAAOD,MAAK,CACd,CAEA,sCAAYA,KAAK,MAAEC,MAAAA,CAAAA,MAAAA,GACrB,CAAC,CAAE,CAACT,QAAQ,CAAEC,iBAAiB,CAAC,CAAC,CAEjCN,KAAK,CAACiB,SAAS,CAAC,UAAM,CACpB,MAAOV,iBAAgB,GAAA,IAAA,EAAhBA,gBAAgB,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAhBA,gBAAgB,CAAG,UAAU,CAAEG,GAAG,CAAEC,kBAAkB,CAAC,CAChE,CAAC,CAAE,CAACJ,gBAAgB,CAAEI,kBAAkB,CAAED,GAAG,CAAC,CAAC,CACjD","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport isArrayEqual from './isArrayEqual';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nexport default function useOnGetState(_ref) {\n  let {\n    getState,\n    getStateListeners\n  } = _ref;\n  const {\n    addKeyedListener\n  } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n\n    // Avoid returning new route objects if we don't need to\n    const routes = state.routes.map(route => {\n      var _getStateListeners$ro;\n      const childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);\n      if (route.state === childState) {\n        return route;\n      }\n      return {\n        ...route,\n        state: childState\n      };\n    });\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n    return {\n      ...state,\n      routes\n    };\n  }, [getState, getStateListeners]);\n  React.useEffect(() => {\n    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n//# sourceMappingURL=useOnGetState.js.map"]},"metadata":{},"sourceType":"module"}
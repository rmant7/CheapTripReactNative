{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import pack from'react-native/package.json';var _pack$version$split=pack.version.split('.'),_pack$version$split2=_slicedToArray(_pack$version$split,2),majorStr=_pack$version$split2[0],minorStr=_pack$version$split2[1];export var REACT_NATIVE_VERSION={major:parseInt(majorStr,10),minor:parseInt(minorStr,10)};export function toArray(object){if(!Array.isArray(object)){return[object];}return object;}export function withPrevAndCurrent(array,mapFn){var previousArr=[null];var currentArr=_toConsumableArray(array);var transformedArr=[];currentArr.forEach(function(current,i){var previous=previousArr[i];var transformed=mapFn(previous,current);previousArr.push(transformed);transformedArr.push(transformed);});return transformedArr;}export function hasProperty(object,key){return Object.prototype.hasOwnProperty.call(object,key);}export function isJestEnv(){return hasProperty(global,'process')&&!!process.env.JEST_WORKER_ID;}export function tagMessage(msg){return\"[react-native-gesture-handler] \"+msg;}export function isFabric(){var _global;return!!((_global=global)!==null&&_global!==void 0&&_global.nativeFabricUIManager);}export function shouldUseCodegenNativeComponent(){return REACT_NATIVE_VERSION.minor>=68||REACT_NATIVE_VERSION.major>0;}export function isRemoteDebuggingEnabled(){return!global.nativeCallSyncHook||global.__REMOTEDEV__;}","map":{"version":3,"sources":["utils.ts"],"names":["pack","majorStr","minorStr","version","split","REACT_NATIVE_VERSION","major","parseInt","minor","toArray","object","Array","isArray","withPrevAndCurrent","array","mapFn","previousArr","currentArr","transformedArr","forEach","current","i","previous","transformed","push","hasProperty","key","Object","prototype","hasOwnProperty","call","isJestEnv","global","process","env","JEST_WORKER_ID","tagMessage","msg","isFabric","nativeFabricUIManager","shouldUseCodegenNativeComponent","isRemoteDebuggingEnabled","nativeCallSyncHook","__REMOTEDEV__"],"mappings":"0IAAA,MAAOA,KAAP,KAAiB,2BAAjB,CAEA,wBAA6BA,IAAI,CAACG,OAALH,CAAaI,KAAbJ,CAAmB,GAAnBA,CAA7B,4DAAOC,QAAD,yBAAWC,QAAX,yBACN,MAAO,IAAMG,qBAAoB,CAAG,CAClCC,KAAK,CAAEC,QAAQ,CAACN,QAAD,CAAW,EAAX,CADmB,CAElCO,KAAK,CAAED,QAAQ,CAACL,QAAD,CAAW,EAAX,CAFmB,CAA7B,CAKP,MAAO,SAASO,QAAT,CAAoBC,MAApB,CAA0C,CAC/C,GAAI,CAACC,KAAK,CAACC,OAAND,CAAcD,MAAdC,CAAL,CAA4B,CAC1B,MAAO,CAACD,MAAD,CAAP,CACD,CAED,MAAOA,OAAP,CACD,CAMD,MAAO,SAASG,mBAAT,CACLC,KADK,CAELC,KAFK,CAGU,CACf,GAAMC,YAAmC,CAAG,CAAC,IAAD,CAA5C,CACA,GAAMC,WAAU,oBAAOH,KAAJ,CAAnB,CACA,GAAMI,eAA6B,CAAG,EAAtC,CACAD,UAAU,CAACE,OAAXF,CAAmB,SAACG,OAAD,CAAUC,CAAV,CAAgB,CACjC,GAAMC,SAAQ,CAAGN,WAAW,CAACK,CAAD,CAA5B,CACA,GAAME,YAAW,CAAGR,KAAK,CAACO,QAAD,CAAWF,OAAX,CAAzB,CACAJ,WAAW,CAACQ,IAAZR,CAAiBO,WAAjBP,CAAAA,CACAE,cAAc,CAACM,IAAfN,CAAoBK,WAApBL,CAAAA,CACD,CALDD,CAAAA,CAMA,MAAOC,eAAP,CACD,CAGD,MAAO,SAASO,YAAT,CAAqBf,MAArB,CAAqCgB,GAArC,CAAkD,CACvD,MAAOC,OAAM,CAACC,SAAPD,CAAiBE,cAAjBF,CAAgCG,IAAhCH,CAAqCjB,MAArCiB,CAA6CD,GAA7CC,CAAP,CACD,CAED,MAAO,SAASI,UAAT,EAA8B,CAEnC,MAAON,YAAW,CAACO,MAAD,CAAS,SAAT,CAAXP,EAAkC,CAAC,CAACQ,OAAO,CAACC,GAARD,CAAYE,cAAvD,CACD,CAED,MAAO,SAASC,WAAT,CAAoBC,GAApB,CAAiC,CACtC,wCAAyCA,GAAzC,CACD,CAID,MAAO,SAASC,SAAT,EAA6B,CAAA,GAAA,QAAA,CAElC,MAAO,CAAC,EAAA,CAAA,OAAA,CAACN,MAAD,IAAA,IAAA,EAAA,OAAA,GAAA,IAAA,EAAA,EAACA,OAAAA,CAAQO,qBAAT,CAAR,CACD,CAED,MAAO,SAASC,gCAAT,EAAoD,CAEzD,MAAOnC,qBAAoB,CAACG,KAArBH,EAA8B,EAA9BA,EAAoCA,oBAAoB,CAACC,KAArBD,CAA6B,CAAxE,CACD,CAED,MAAO,SAASoC,yBAAT,EAA6C,CAGlD,MAAO,CAAET,MAAD,CAAgBU,kBAAjB,EAAwCV,MAAD,CAAgBW,aAA9D,CACD","sourcesContent":["import pack from 'react-native/package.json';\n\nconst [majorStr, minorStr] = pack.version.split('.');\nexport const REACT_NATIVE_VERSION = {\n  major: parseInt(majorStr, 10),\n  minor: parseInt(minorStr, 10),\n};\n\nexport function toArray<T>(object: T | T[]): T[] {\n  if (!Array.isArray(object)) {\n    return [object];\n  }\n\n  return object;\n}\n\nexport type withPrevAndCurrentMapFn<T, Transformed> = (\n  previous: Transformed | null,\n  current: T\n) => Transformed;\nexport function withPrevAndCurrent<T, Transformed>(\n  array: T[],\n  mapFn: withPrevAndCurrentMapFn<T, Transformed>\n): Transformed[] {\n  const previousArr: (null | Transformed)[] = [null];\n  const currentArr = [...array];\n  const transformedArr: Transformed[] = [];\n  currentArr.forEach((current, i) => {\n    const previous = previousArr[i];\n    const transformed = mapFn(previous, current);\n    previousArr.push(transformed);\n    transformedArr.push(transformed);\n  });\n  return transformedArr;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function hasProperty(object: object, key: string) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nexport function isJestEnv(): boolean {\n  // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n  return hasProperty(global, 'process') && !!process.env.JEST_WORKER_ID;\n}\n\nexport function tagMessage(msg: string) {\n  return `[react-native-gesture-handler] ${msg}`;\n}\n\n// helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n// may not be initialized before the first render\nexport function isFabric(): boolean {\n  // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n  return !!global?.nativeFabricUIManager;\n}\n\nexport function shouldUseCodegenNativeComponent(): boolean {\n  // use codegenNativeComponent starting with RN 0.68\n  return REACT_NATIVE_VERSION.minor >= 68 || REACT_NATIVE_VERSION.major > 0;\n}\n\nexport function isRemoteDebuggingEnabled(): boolean {\n  // react-native-reanimated checks if in remote debugging in the same way\n  // @ts-ignore global is available but node types are not included\n  return !(global as any).nativeCallSyncHook || (global as any).__REMOTEDEV__;\n}\n"]},"metadata":{},"sourceType":"module"}
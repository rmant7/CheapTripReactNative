{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"mode\",\"dense\",\"disabled\",\"error\",\"multiline\",\"editable\",\"render\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import NativeTextInput from\"react-native-web/dist/exports/TextInput\";import{withInternalTheme}from\"../../core/theming\";import TextInputAffix from\"./Adornment/TextInputAffix\";import TextInputIcon from\"./Adornment/TextInputIcon\";import TextInputFlat from\"./TextInputFlat\";import TextInputOutlined from\"./TextInputOutlined\";var BLUR_ANIMATION_DURATION=180;var FOCUS_ANIMATION_DURATION=150;var TextInput=React.forwardRef(function(_ref,ref){var _ref$mode=_ref.mode,mode=_ref$mode===void 0?'flat':_ref$mode,_ref$dense=_ref.dense,dense=_ref$dense===void 0?false:_ref$dense,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,_ref$error=_ref.error,errorProp=_ref$error===void 0?false:_ref$error,_ref$multiline=_ref.multiline,multiline=_ref$multiline===void 0?false:_ref$multiline,_ref$editable=_ref.editable,editable=_ref$editable===void 0?true:_ref$editable,_ref$render=_ref.render,render=_ref$render===void 0?function(props){return React.createElement(NativeTextInput,props);}:_ref$render,rest=_objectWithoutProperties(_ref,_excluded);var isControlled=rest.value!==undefined;var validInputValue=isControlled?rest.value:rest.defaultValue;var _React$useRef=React.useRef(new Animated.Value(validInputValue?0:1)),labeled=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(errorProp?1:0)),error=_React$useRef2.current;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),focused=_React$useState2[0],setFocused=_React$useState2[1];var _React$useState3=React.useState(' '),_React$useState4=_slicedToArray(_React$useState3,2),placeholder=_React$useState4[0],setPlaceholder=_React$useState4[1];var _React$useState5=React.useState(validInputValue),_React$useState6=_slicedToArray(_React$useState5,2),uncontrolledValue=_React$useState6[0],setUncontrolledValue=_React$useState6[1];var value=isControlled?rest.value:uncontrolledValue;var _React$useState7=React.useState({measured:false,width:0,height:0}),_React$useState8=_slicedToArray(_React$useState7,2),labelLayout=_React$useState8[0],setLabelLayout=_React$useState8[1];var _React$useState9=React.useState({width:null,height:null}),_React$useState10=_slicedToArray(_React$useState9,2),leftLayout=_React$useState10[0],setLeftLayout=_React$useState10[1];var _React$useState11=React.useState({width:null,height:null}),_React$useState12=_slicedToArray(_React$useState11,2),rightLayout=_React$useState12[0],setRightLayout=_React$useState12[1];var timer=React.useRef();var root=React.useRef();var scale=rest.theme.animation.scale;React.useImperativeHandle(ref,function(){return{focus:function focus(){var _root$current;return(_root$current=root.current)===null||_root$current===void 0?void 0:_root$current.focus();},clear:function clear(){var _root$current2;return(_root$current2=root.current)===null||_root$current2===void 0?void 0:_root$current2.clear();},setNativeProps:function setNativeProps(args){var _root$current3;return(_root$current3=root.current)===null||_root$current3===void 0?void 0:_root$current3.setNativeProps(args);},isFocused:function isFocused(){var _root$current4;return((_root$current4=root.current)===null||_root$current4===void 0?void 0:_root$current4.isFocused())||false;},blur:function blur(){var _root$current5;return(_root$current5=root.current)===null||_root$current5===void 0?void 0:_root$current5.blur();},forceFocus:function forceFocus(){var _root$current6;return(_root$current6=root.current)===null||_root$current6===void 0?void 0:_root$current6.focus();}};});React.useEffect(function(){if(errorProp){Animated.timing(error,{toValue:1,duration:FOCUS_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}else{{Animated.timing(error,{toValue:0,duration:BLUR_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}}},[errorProp,scale,error]);React.useEffect(function(){if(focused||!rest.label){if(rest.placeholder){timer.current=setTimeout(function(){return setPlaceholder(rest.placeholder);},50);}}else{setPlaceholder(' ');}return function(){if(timer.current){clearTimeout(timer.current);}};},[focused,rest.label,rest.placeholder]);React.useEffect(function(){if(value||focused){Animated.timing(labeled,{toValue:0,duration:BLUR_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}else{{Animated.timing(labeled,{toValue:1,duration:FOCUS_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}}},[focused,value,labeled,scale]);var onLeftAffixLayoutChange=function onLeftAffixLayoutChange(event){setLeftLayout({height:event.nativeEvent.layout.height,width:event.nativeEvent.layout.width});};var onRightAffixLayoutChange=function onRightAffixLayoutChange(event){setRightLayout({width:event.nativeEvent.layout.width,height:event.nativeEvent.layout.height});};var handleFocus=function handleFocus(args){var _rest$onFocus;if(disabled||!editable){return;}setFocused(true);(_rest$onFocus=rest.onFocus)===null||_rest$onFocus===void 0?void 0:_rest$onFocus.call(rest,args);};var handleBlur=function handleBlur(args){var _rest$onBlur;if(!editable){return;}setFocused(false);(_rest$onBlur=rest.onBlur)===null||_rest$onBlur===void 0?void 0:_rest$onBlur.call(rest,args);};var handleChangeText=function handleChangeText(value){var _rest$onChangeText;if(!editable||disabled){return;}if(!isControlled){setUncontrolledValue(value);}(_rest$onChangeText=rest.onChangeText)===null||_rest$onChangeText===void 0?void 0:_rest$onChangeText.call(rest,value);};var handleLayoutAnimatedText=function handleLayoutAnimatedText(e){setLabelLayout({width:e.nativeEvent.layout.width,height:e.nativeEvent.layout.height,measured:true});};var forceFocus=function forceFocus(){var _root$current7;return(_root$current7=root.current)===null||_root$current7===void 0?void 0:_root$current7.focus();};var _rest$maxFontSizeMult=rest.maxFontSizeMultiplier,maxFontSizeMultiplier=_rest$maxFontSizeMult===void 0?1.5:_rest$maxFontSizeMult;if(mode==='outlined'){return React.createElement(TextInputOutlined,_extends({dense:dense,disabled:disabled,error:errorProp,multiline:multiline,editable:editable,render:render},rest,{value:value,parentState:{labeled:labeled,error:error,focused:focused,placeholder:placeholder,value:value,labelLayout:labelLayout,leftLayout:leftLayout,rightLayout:rightLayout},innerRef:function innerRef(ref){root.current=ref;},onFocus:handleFocus,forceFocus:forceFocus,onBlur:handleBlur,onChangeText:handleChangeText,onLayoutAnimatedText:handleLayoutAnimatedText,onLeftAffixLayoutChange:onLeftAffixLayoutChange,onRightAffixLayoutChange:onRightAffixLayoutChange,maxFontSizeMultiplier:maxFontSizeMultiplier}));}return React.createElement(TextInputFlat,_extends({dense:dense,disabled:disabled,error:errorProp,multiline:multiline,editable:editable,render:render},rest,{value:value,parentState:{labeled:labeled,error:error,focused:focused,placeholder:placeholder,value:value,labelLayout:labelLayout,leftLayout:leftLayout,rightLayout:rightLayout},innerRef:function innerRef(ref){root.current=ref;},onFocus:handleFocus,forceFocus:forceFocus,onBlur:handleBlur,onChangeText:handleChangeText,onLayoutAnimatedText:handleLayoutAnimatedText,onLeftAffixLayoutChange:onLeftAffixLayoutChange,onRightAffixLayoutChange:onRightAffixLayoutChange,maxFontSizeMultiplier:maxFontSizeMultiplier}));});TextInput.Icon=TextInputIcon;TextInput.Affix=TextInputAffix;export default withInternalTheme(TextInput);","map":{"version":3,"mappings":"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","names":["React","withInternalTheme","TextInputAffix","TextInputIcon","TextInputFlat","TextInputOutlined","BLUR_ANIMATION_DURATION","FOCUS_ANIMATION_DURATION","TextInput","forwardRef","ref","_ref","mode","dense","disabled","error","errorProp","multiline","editable","render","props","NativeTextInput","rest","isControlled","value","undefined","validInputValue","defaultValue","useRef","Animated","Value","labeled","current","useState","focused","setFocused","placeholder","setPlaceholder","uncontrolledValue","setUncontrolledValue","measured","width","height","labelLayout","setLabelLayout","leftLayout","setLeftLayout","rightLayout","setRightLayout","timer","root","scale","theme","animation","useImperativeHandle","focus","_root$current","clear","_root$current2","setNativeProps","args","_root$current3","isFocused","_root$current4","blur","_root$current5","forceFocus","_root$current6","useEffect","timing","toValue","duration","useNativeDriver","start","label","setTimeout","clearTimeout","onLeftAffixLayoutChange","event","nativeEvent","layout","onRightAffixLayoutChange","handleFocus","onFocus","_rest$onFocus","handleBlur","onBlur","_rest$onBlur","handleChangeText","onChangeText","_rest$onChangeText","handleLayoutAnimatedText","e","_root$current7","maxFontSizeMultiplier","parentState","innerRef","onLayoutAnimatedText","Icon","Affix"],"sources":["TextInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleProp,\n  TextInput as NativeTextInput,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport TextInputAffix, {\n  Props as TextInputAffixProps,\n} from './Adornment/TextInputAffix';\nimport TextInputIcon, {\n  Props as TextInputIconProps,\n} from './Adornment/TextInputIcon';\nimport TextInputFlat from './TextInputFlat';\nimport TextInputOutlined from './TextInputOutlined';\nimport type { RenderProps, TextInputLabelProp } from './types';\n\nconst BLUR_ANIMATION_DURATION = 180;\nconst FOCUS_ANIMATION_DURATION = 150;\n\nexport type Props = React.ComponentPropsWithRef<typeof NativeTextInput> & {\n  /**\n   * Mode of the TextInput.\n   * - `flat` - flat input with an underline.\n   * - `outlined` - input with an outline.\n   *\n   * In `outlined` mode, the background color of the label is derived from `colors?.background` in theme or the `backgroundColor` style.\n   * This component render TextInputOutlined or TextInputFlat based on that props\n   */\n  mode?: 'flat' | 'outlined';\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  /**\n   * If true, user won't be able to interact with the component.\n   */\n  disabled?: boolean;\n  /**\n   * The text or component to use for the floating label.\n   */\n  label?: TextInputLabelProp;\n  /**\n   * Placeholder for the input.\n   */\n  placeholder?: string;\n  /**\n   * Whether to style the TextInput with error style.\n   */\n  error?: boolean;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: Function;\n  /**\n   * Selection color of the input.\n   */\n  selectionColor?: string;\n  /**\n   * Inactive underline color of the input.\n   */\n  underlineColor?: string;\n  /**\n   * Active underline color of the input.\n   */\n  activeUnderlineColor?: string;\n  /**\n   * Inactive outline color of the input.\n   */\n  outlineColor?: string;\n  /**\n   * Active outline color of the input.\n   */\n  activeOutlineColor?: string;\n  /**\n   * Color of the text in the input.\n   */\n  textColor?: string;\n  /**\n   * Sets min height with densed layout. For `TextInput` in `flat` mode\n   * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\n   * For `TextInput` in `outlined` mode\n   * height is `56dp` or in dense layout - `40dp` regardless of label.\n   * When you apply `height` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\n   */\n  dense?: boolean;\n  /**\n   * Whether the input can have multiple lines.\n   */\n  multiline?: boolean;\n  /**\n   * The number of lines to show in the input (Android only).\n   */\n  numberOfLines?: number;\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: (args: any) => void;\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: (args: any) => void;\n  /**\n   *\n   * Callback to render a custom input component such as `react-native-text-input-mask`\n   * instead of the default `TextInput` component from `react-native`.\n   *\n   * Example:\n   * ```js\n   * <TextInput\n   *   label=\"Phone number\"\n   *   render={props =>\n   *     <TextInputMask\n   *       {...props}\n   *       mask=\"+[00] [000] [000] [000]\"\n   *     />\n   *   }\n   * />\n   * ```\n   */\n  render?: (props: RenderProps) => React.ReactNode;\n  /**\n   * Value of the text input.\n   */\n  value?: string;\n  /**\n   * Pass `fontSize` prop to modify the font size inside `TextInput`.\n   * Pass `height` prop to set `TextInput` height. When `height` is passed,\n   * `dense` prop will affect only input's `paddingVertical`.\n   * Pass `paddingHorizontal` to modify horizontal padding.\n   * This can be used to get MD Guidelines v1 TextInput look.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Pass style to override the default style of outlined wrapper.\n   * Overrides style when mode is set to `outlined`\n   * Example: `borderRadius`, `borderColor`\n   */\n  outlineStyle?: StyleProp<ViewStyle>;\n  /**\n   * Pass style to override the default style of underlined wrapper.\n   * Overrides style when mode is set to `flat`\n   * Example: `borderRadius`, `borderColor`\n   */\n  underlineStyle?: StyleProp<ViewStyle>;\n};\n\ninterface CompoundedComponent\n  extends React.ForwardRefExoticComponent<\n    Props & React.RefAttributes<TextInputHandles>\n  > {\n  Icon: React.FunctionComponent<TextInputIconProps>;\n  Affix: React.FunctionComponent<Partial<TextInputAffixProps>>;\n}\n\ntype TextInputHandles = Pick<\n  NativeTextInput,\n  'focus' | 'clear' | 'blur' | 'isFocused' | 'setNativeProps'\n>;\n\n/**\n * A component to allow users to input text.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/textinput-flat.focused.png\" />\n *     <figcaption>Flat (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/textinput-flat.disabled.png\" />\n *     <figcaption>Flat (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/textinput-outlined.focused.png\" />\n *     <figcaption>Outlined (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/textinput-outlined.disabled.png\" />\n *     <figcaption>Outlined (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState(\"\");\n *\n *   return (\n *     <TextInput\n *       label=\"Email\"\n *       value={text}\n *       onChangeText={text => setText(text)}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\n */\n\nconst TextInput = React.forwardRef<TextInputHandles, Props>(\n  (\n    {\n      mode = 'flat',\n      dense = false,\n      disabled = false,\n      error: errorProp = false,\n      multiline = false,\n      editable = true,\n      render = (props: RenderProps) => <NativeTextInput {...props} />,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const isControlled = rest.value !== undefined;\n    const validInputValue = isControlled ? rest.value : rest.defaultValue;\n\n    const { current: labeled } = React.useRef<Animated.Value>(\n      new Animated.Value(validInputValue ? 0 : 1)\n    );\n    const { current: error } = React.useRef<Animated.Value>(\n      new Animated.Value(errorProp ? 1 : 0)\n    );\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [placeholder, setPlaceholder] = React.useState<string | undefined>(\n      ' '\n    );\n    const [uncontrolledValue, setUncontrolledValue] = React.useState<\n      string | undefined\n    >(validInputValue);\n    // Use value from props instead of local state when input is controlled\n    const value = isControlled ? rest.value : uncontrolledValue;\n\n    const [labelLayout, setLabelLayout] = React.useState<{\n      measured: boolean;\n      width: number;\n      height: number;\n    }>({\n      measured: false,\n      width: 0,\n      height: 0,\n    });\n    const [leftLayout, setLeftLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n    const [rightLayout, setRightLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n\n    const timer = React.useRef<NodeJS.Timeout | undefined>();\n\n    const root = React.useRef<NativeTextInput | undefined | null>();\n\n    const { scale } = rest.theme.animation;\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => root.current?.focus(),\n      clear: () => root.current?.clear(),\n      setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n      isFocused: () => root.current?.isFocused() || false,\n      blur: () => root.current?.blur(),\n      forceFocus: () => root.current?.focus(),\n    }));\n\n    React.useEffect(() => {\n      // When the input has an error, we wiggle the label and apply error styles\n      if (errorProp) {\n        // show error\n        Animated.timing(error, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // hide error\n        {\n          Animated.timing(error, {\n            toValue: 0,\n            duration: BLUR_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [errorProp, scale, error]);\n\n    React.useEffect(() => {\n      // Show placeholder text only if the input is focused, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (focused || !rest.label) {\n        // If the user wants to use the contextMenu, when changing the placeholder, the contextMenu is closed\n        // This is a workaround to mitigate this behavior in scenarios where the placeholder is not specified.\n        if (rest.placeholder) {\n          // Set the placeholder in a delay to offset the label animation\n          // If we show it immediately, they'll overlap and look ugly\n          timer.current = setTimeout(\n            () => setPlaceholder(rest.placeholder),\n            50\n          ) as unknown as NodeJS.Timeout;\n        }\n      } else {\n        // hidePlaceholder\n\n        // Issue: https://github.com/callstack/react-native-paper/issues/3138\n        // Description:   Changing the placeholder text value dynamically,\n        //                within multiline input on iOS, doesn't work properly –\n        //                the placeholder is not displayed initially.\n        // Root cause:    Placeholder initial value, which has length 0.\n        // More context:  The issue was also reproduced in react-native, using its own TextInput.\n        // Workaround:    Set an empty space character in the default value.\n        setPlaceholder(' ');\n      }\n\n      return () => {\n        if (timer.current) {\n          clearTimeout(timer.current);\n        }\n      };\n    }, [focused, rest.label, rest.placeholder]);\n\n    React.useEffect(() => {\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      // workaround for animated regression for react native > 0.61\n      // https://github.com/callstack/react-native-paper/pull/1440\n      if (value || focused) {\n        // minimize label\n        Animated.timing(labeled, {\n          toValue: 0,\n          duration: BLUR_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // restore label\n        {\n          Animated.timing(labeled, {\n            toValue: 1,\n            duration: FOCUS_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [focused, value, labeled, scale]);\n\n    const onLeftAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setLeftLayout({\n        height: event.nativeEvent.layout.height,\n        width: event.nativeEvent.layout.width,\n      });\n    };\n\n    const onRightAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setRightLayout({\n        width: event.nativeEvent.layout.width,\n        height: event.nativeEvent.layout.height,\n      });\n    };\n\n    const handleFocus = (args: any) => {\n      if (disabled || !editable) {\n        return;\n      }\n\n      setFocused(true);\n\n      rest.onFocus?.(args);\n    };\n\n    const handleBlur = (args: Object) => {\n      if (!editable) {\n        return;\n      }\n\n      setFocused(false);\n      rest.onBlur?.(args);\n    };\n\n    const handleChangeText = (value: string) => {\n      if (!editable || disabled) {\n        return;\n      }\n\n      if (!isControlled) {\n        // Keep track of value in local state when input is not controlled\n        setUncontrolledValue(value);\n      }\n      rest.onChangeText?.(value);\n    };\n\n    const handleLayoutAnimatedText = (e: LayoutChangeEvent) => {\n      setLabelLayout({\n        width: e.nativeEvent.layout.width,\n        height: e.nativeEvent.layout.height,\n        measured: true,\n      });\n    };\n    const forceFocus = () => root.current?.focus();\n\n    const { maxFontSizeMultiplier = 1.5 } = rest;\n\n    if (mode === 'outlined') {\n      return (\n        <TextInputOutlined\n          dense={dense}\n          disabled={disabled}\n          error={errorProp}\n          multiline={multiline}\n          editable={editable}\n          render={render}\n          {...rest}\n          value={value}\n          parentState={{\n            labeled,\n            error,\n            focused,\n            placeholder,\n            value,\n            labelLayout,\n            leftLayout,\n            rightLayout,\n          }}\n          innerRef={(ref) => {\n            root.current = ref;\n          }}\n          onFocus={handleFocus}\n          forceFocus={forceFocus}\n          onBlur={handleBlur}\n          onChangeText={handleChangeText}\n          onLayoutAnimatedText={handleLayoutAnimatedText}\n          onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n          onRightAffixLayoutChange={onRightAffixLayoutChange}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        />\n      );\n    }\n\n    return (\n      <TextInputFlat\n        dense={dense}\n        disabled={disabled}\n        error={errorProp}\n        multiline={multiline}\n        editable={editable}\n        render={render}\n        {...rest}\n        value={value}\n        parentState={{\n          labeled,\n          error,\n          focused,\n          placeholder,\n          value,\n          labelLayout,\n          leftLayout,\n          rightLayout,\n        }}\n        innerRef={(ref) => {\n          root.current = ref;\n        }}\n        onFocus={handleFocus}\n        forceFocus={forceFocus}\n        onBlur={handleBlur}\n        onChangeText={handleChangeText}\n        onLayoutAnimatedText={handleLayoutAnimatedText}\n        onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={onRightAffixLayoutChange}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      />\n    );\n  }\n) as CompoundedComponent;\n// @component ./Adornment/TextInputIcon.tsx\nTextInput.Icon = TextInputIcon;\n\n// @component ./Adornment/TextInputAffix.tsx\n// @ts-ignore Types of property 'theme' are incompatible.\nTextInput.Affix = TextInputAffix;\n\nexport default withInternalTheme(TextInput);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"clearAccessibilityLabel\",\"clearIcon\",\"icon\",\"iconColor\",\"inputStyle\",\"onIconPress\",\"placeholder\",\"searchAccessibilityLabel\",\"elevation\",\"style\",\"theme\",\"value\",\"loading\",\"testID\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TextInput from\"react-native-web/dist/exports/TextInput\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{withInternalTheme}from\"../core/theming\";import ActivityIndicator from\"./ActivityIndicator\";import IconButton from\"./IconButton/IconButton\";import MaterialCommunityIcon from\"./MaterialCommunityIcon\";import Surface from\"./Surface\";var Searchbar=React.forwardRef(function(_ref,ref){var _theme$colors;var _ref$clearAccessibili=_ref.clearAccessibilityLabel,clearAccessibilityLabel=_ref$clearAccessibili===void 0?'clear':_ref$clearAccessibili,clearIcon=_ref.clearIcon,icon=_ref.icon,customIconColor=_ref.iconColor,inputStyle=_ref.inputStyle,onIconPress=_ref.onIconPress,placeholder=_ref.placeholder,_ref$searchAccessibil=_ref.searchAccessibilityLabel,searchAccessibilityLabel=_ref$searchAccessibil===void 0?'search':_ref$searchAccessibil,_ref$elevation=_ref.elevation,elevation=_ref$elevation===void 0?1:_ref$elevation,style=_ref.style,theme=_ref.theme,value=_ref.value,_ref$loading=_ref.loading,loading=_ref$loading===void 0?false:_ref$loading,_ref$testID=_ref.testID,testID=_ref$testID===void 0?'search-bar':_ref$testID,rest=_objectWithoutProperties(_ref,_excluded);var root=React.useRef(null);React.useImperativeHandle(ref,function(){var input=root.current;if(input){return{focus:function focus(){return input.focus();},clear:function clear(){return input.clear();},setNativeProps:function setNativeProps(args){return input.setNativeProps(args);},isFocused:function isFocused(){return input.isFocused();},blur:function blur(){return input.blur();}};}var noop=function noop(){throw new Error('TextInput is not available');};return{focus:noop,clear:noop,setNativeProps:noop,isFocused:noop,blur:noop};});var handleClearPress=function handleClearPress(){var _root$current,_rest$onChangeText;(_root$current=root.current)===null||_root$current===void 0?void 0:_root$current.clear();(_rest$onChangeText=rest.onChangeText)===null||_rest$onChangeText===void 0?void 0:_rest$onChangeText.call(rest,'');};var colors=theme.colors,roundness=theme.roundness,dark=theme.dark,isV3=theme.isV3;var textColor=isV3?theme.colors.onSurface:theme.colors.text;var iconColor=customIconColor||(dark?textColor:color(textColor).alpha(0.54).rgb().string());var rippleColor=color(textColor).alpha(0.32).rgb().string();return React.createElement(Surface,_extends({style:[{borderRadius:roundness},!isV3&&styles.elevation,styles.container,style]},theme.isV3&&{elevation:elevation}),React.createElement(IconButton,{accessibilityRole:\"button\",borderless:true,rippleColor:rippleColor,onPress:onIconPress,iconColor:iconColor,icon:icon||function(_ref2){var size=_ref2.size,color=_ref2.color;return React.createElement(MaterialCommunityIcon,{name:\"magnify\",color:color,size:size,direction:I18nManager.getConstants().isRTL?'rtl':'ltr'});},accessibilityLabel:searchAccessibilityLabel}),React.createElement(TextInput,_extends({style:[styles.input,_objectSpread(_objectSpread({color:textColor},theme.isV3?theme.fonts.default:theme.fonts.regular),Platform.select({web:{outline:'none'}})),inputStyle],placeholder:placeholder||'',placeholderTextColor:theme.isV3?theme.colors.onSurface:(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.placeholder,selectionColor:colors===null||colors===void 0?void 0:colors.primary,underlineColorAndroid:\"transparent\",returnKeyType:\"search\",keyboardAppearance:dark?'dark':'light',accessibilityRole:\"search\",ref:root,value:value,testID:testID},rest)),loading?React.createElement(ActivityIndicator,{testID:\"activity-indicator\",style:styles.loader}):React.createElement(View,{pointerEvents:value?'auto':'none',testID:testID+\"-icon-wrapper\"},React.createElement(IconButton,{borderless:true,accessibilityLabel:clearAccessibilityLabel,iconColor:value?iconColor:'rgba(255, 255, 255, 0)',rippleColor:rippleColor,onPress:handleClearPress,icon:clearIcon||function(_ref3){var size=_ref3.size,color=_ref3.color;return React.createElement(MaterialCommunityIcon,{name:\"close\",color:color,size:size,direction:I18nManager.getConstants().isRTL?'rtl':'ltr'});},accessibilityRole:\"button\"})));});var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center'},input:{flex:1,fontSize:18,paddingLeft:8,alignSelf:'stretch',textAlign:I18nManager.getConstants().isRTL?'right':'left',minWidth:0},elevation:{elevation:4},loader:{margin:10}});export default withInternalTheme(Searchbar);","map":{"version":3,"sources":["Searchbar.tsx"],"names":["React","color","withInternalTheme","ActivityIndicator","IconButton","MaterialCommunityIcon","Surface","Searchbar","forwardRef","clearAccessibilityLabel","clearIcon","icon","iconColor","customIconColor","inputStyle","onIconPress","placeholder","searchAccessibilityLabel","elevation","style","theme","value","loading","testID","rest","ref","root","useRef","useImperativeHandle","input","current","focus","clear","setNativeProps","args","isFocused","blur","noop","Error","handleClearPress","onChangeText","colors","roundness","dark","isV3","textColor","onSurface","text","alpha","rgb","string","rippleColor","borderRadius","styles","container","size","I18nManager","getConstants","isRTL","fonts","default","regular","Platform","select","web","outline","primary","loader","StyleSheet","create","flexDirection","alignItems","flex","fontSize","paddingLeft","alignSelf","textAlign","minWidth","margin"],"mappings":"44CAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,qTAe9B,MAAOC,MAAK,KAAM,OAAO,CAEzB,OAASC,iBAAiB,uBAE1B,MAAOC,kBAAiB,2BAExB,MAAOC,WAAU,+BACjB,MAAOC,sBAAqB,+BAC5B,MAAOC,QAAO,iBAkGd,GAAMC,UAAS,CAAGP,KAAK,CAACQ,UAAU,CAChC,SAAA,IAAA,CAkBEiB,GAAG,CACA,CAAA,GAAA,cAAA,CAlBH,0BAgBQ,IAAA,CAfNhB,uBAAuB,CAAvBA,uBAAuB,gCAAG,OAAO,uBACjCC,SAAS,CAcH,IAAA,CAdNA,SAAS,CACTC,IAAI,CAaE,IAAA,CAbNA,IAAI,CACOE,eAAe,CAYpB,IAAA,CAZND,SAAS,CACTE,UAAU,CAWJ,IAAA,CAXNA,UAAU,CACVC,WAAW,CAUL,IAAA,CAVNA,WAAW,CACXC,WAAW,CASL,IAAA,CATNA,WAAW,uBASL,IAAA,CARNC,wBAAwB,CAAxBA,wBAAwB,gCAAG,QAAQ,sCAQ7B,IAAA,CAPNC,SAAS,CAATA,SAAS,yBAAG,CAAC,gBACbC,KAAK,CAMC,IAAA,CANNA,KAAK,CACLC,KAAK,CAKC,IAAA,CALNA,KAAK,CACLC,KAAK,CAIC,IAAA,CAJNA,KAAK,cAIC,IAAA,CAHNC,OAAO,CAAPA,OAAO,uBAAG,KAAK,0BAGT,IAAA,CAFNC,MAAM,CAANA,MAAM,sBAAG,YAAY,aAClBC,IAAAA,0BACG,IAAA,YAGR,GAAME,KAAI,CAAG1B,KAAK,CAAC2B,MAAM,CAAY,IAAI,CAAC,CAE1C3B,KAAK,CAAC4B,mBAAmB,CAACH,GAAG,CAAE,UAAM,CACnC,GAAMI,MAAK,CAAGH,IAAI,CAACI,OAAO,CAE1B,GAAID,KAAK,CAAE,CACT,MAAO,CACLE,KAAK,CAAE,uBAAMF,MAAK,CAACE,KAAK,EAAE,GAC1BC,KAAK,CAAE,uBAAMH,MAAK,CAACG,KAAK,EAAE,GAC1BC,cAAc,CAAGC,wBAAAA,IAAoB,QAAKL,MAAK,CAACI,cAAc,CAACC,IAAI,CAAC,GACpEC,SAAS,CAAE,2BAAMN,MAAK,CAACM,SAAS,EAAE,GAClCC,IAAI,CAAE,sBAAMP,MAAK,CAACO,IAAI,EAAA,EACxB,CAAC,CACH,CAEA,GAAMC,KAAI,CAAG,QAAPA,KAAI,EAAS,CACjB,KAAM,IAAIC,MAAK,CAAC,4BAA4B,CAAC,CAC/C,CAAC,CAED,MAAO,CACLP,KAAK,CAAEM,IAAI,CACXL,KAAK,CAAEK,IAAI,CACXJ,cAAc,CAAEI,IAAI,CACpBF,SAAS,CAAEE,IAAI,CACfD,IAAI,CAAEC,IACR,CAAC,CACH,CAAC,CAAC,CAEF,GAAME,iBAAgB,CAAG,QAAnBA,iBAAgB,EAAS,CAAA,GAAA,cAAA,CAAA,kBAAA,CAC7B,CAAA,aAAA,CAAA,IAAI,CAACT,OAAO,IAAA,IAAA,EAAA,aAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAZ,aAAA,CAAcE,KAAK,EAAE,CACrB,CAAA,kBAAA,CAAA,IAAI,CAACQ,YAAY,IAAA,IAAA,EAAA,kBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAjB,kBAAA,CAAA,IAAA,CAAA,IAAI,CAAgB,EAAE,CAAC,CACzB,CAAC,CAED,GAAQC,OAAM,CAA4BrB,KAAK,CAAvCqB,MAAM,CAAEC,SAAS,CAAiBtB,KAAK,CAA/BsB,SAAS,CAAEC,IAAI,CAAWvB,KAAK,CAApBuB,IAAI,CAAEC,IAAAA,CAASxB,KAAK,CAAdwB,IAAAA,CACjC,GAAMC,UAAS,CAAGD,IAAI,CAAGxB,KAAK,CAACqB,MAAM,CAACK,SAAS,CAAG1B,KAAK,CAACqB,MAAM,CAACM,IAAI,CACnE,GAAMnC,UAAS,CACbC,eAAe,GACd8B,IAAI,CAAGE,SAAS,CAAG5C,KAAK,CAAC4C,SAAS,CAAC,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE,CAAC,CAClE,GAAMC,YAAW,CAAGlD,KAAK,CAAC4C,SAAS,CAAC,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE,CAE/D,MACE,MAAA,CAAA,aAAA,CAAC,OAAO,CAAA,QAAA,CAAA,CACN,KAAK,CAAE,CACL,CAAEE,YAAY,CAAEV,SAAU,CAAC,CAC3B,CAACE,IAAI,EAAIS,MAAM,CAACnC,SAAS,CACzBmC,MAAM,CAACC,SAAS,CAChBnC,KAAK,CACL,CAAA,CACGC,KAAK,CAACwB,IAAI,EAAI,CAAE1B,SAAAA,CAAAA,SAAU,CAAC,CAAA,CAEhC,KAAA,CAAA,aAAA,CAAC,UAAU,CAAA,CACT,iBAAiB,CAAC,QAAQ,CAC1B,UAAU,CAAA,IAAA,CACV,WAAW,CAAEiC,WAAY,CACzB,OAAO,CAAEpC,WAAY,CACrB,SAAS,CAAEH,SAAU,CACrB,IAAI,CACFD,IAAI,EACH,SAAA,KAAA,CAAA,CAAA,GAAG4C,KAAI,CAAS,KAAA,CAAbA,IAAI,CAAEtD,KAAAA,CAAO,KAAA,CAAPA,KAAAA,CAAO,MACf,MAAA,CAAA,aAAA,CAAC,qBAAqB,CAAA,CACpB,IAAI,CAAC,SAAS,CACd,KAAK,CAAEA,KAAM,CACb,IAAI,CAAEsD,IAAK,CACX,SAAS,CAAEC,WAAW,CAACC,YAAY,EAAE,CAACC,KAAK,CAAG,KAAK,CAAG,KAAM,CAAA,CAC5D,CAAA,CAEL,CACD,kBAAkB,CAAEzC,wBAAyB,CAAA,CAC7C,CACF,KAAA,CAAA,aAAA,CAAC,SAAS,CAAA,QAAA,CAAA,CACR,KAAK,CAAE,CACLoC,MAAM,CAACxB,KAAK,8BAEV5B,KAAK,CAAE4C,SAAS,EACZzB,KAAK,CAACwB,IAAI,CAAGxB,KAAK,CAACuC,KAAK,CAACC,OAAO,CAAGxC,KAAK,CAACuC,KAAK,CAACE,OAAO,EACvDC,QAAQ,CAACC,MAAM,CAAC,CAAEC,GAAG,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAC,CAAA,EAEjDnD,UAAU,CACV,CACF,WAAW,CAAEE,WAAW,EAAI,EAAG,CAC/B,oBAAoB,CAClBI,KAAK,CAACwB,IAAI,CAAGxB,KAAK,CAACqB,MAAM,CAACK,SAAS,CAAA,CAAA,aAAA,CAAG1B,KAAK,CAACqB,MAAM,IAAA,IAAA,EAAA,aAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAZrB,aAAAA,CAAcJ,WACrD,CACD,cAAc,CAAEyB,MAAM,GAAA,IAAA,EAANA,MAAM,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAANA,MAAM,CAAEyB,OAAQ,CAChC,qBAAqB,CAAC,aAAa,CACnC,aAAa,CAAC,QAAQ,CACtB,kBAAkB,CAAEvB,IAAI,CAAG,MAAM,CAAG,OAAQ,CAC5C,iBAAiB,CAAC,QAAQ,CAC1B,GAAG,CAAEjB,IAAK,CACV,KAAK,CAAEL,KAAM,CACb,MAAM,CAAEE,MAAO,CAAA,CACXC,IAAI,CAAA,CACR,CACDF,OAAO,CACN,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAA,CAChB,MAAM,CAAC,oBAAoB,CAC3B,KAAK,CAAE+B,MAAM,CAACc,MAAO,CAAA,CACrB,CAMF,KAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CACH,aAAa,CAAE9C,KAAK,CAAG,MAAM,CAAG,MAAO,CACvC,MAAM,CAAKE,MAAO,gBAAe,CAAA,CAEjC,KAAA,CAAA,aAAA,CAAC,UAAU,CAAA,CACT,UAAU,CAAA,IAAA,CACV,kBAAkB,CAAEd,uBAAwB,CAC5C,SAAS,CAAEY,KAAK,CAAGT,SAAS,CAAG,wBAAyB,CACxD,WAAW,CAAEuC,WAAY,CACzB,OAAO,CAAEZ,gBAAiB,CAC1B,IAAI,CACF7B,SAAS,EACR,SAAA,KAAA,CAAA,CAAA,GAAG6C,KAAI,CAAS,KAAA,CAAbA,IAAI,CAAEtD,KAAAA,CAAO,KAAA,CAAPA,KAAAA,CAAO,MACf,MAAA,CAAA,aAAA,CAAC,qBAAqB,CAAA,CACpB,IAAI,CAAC,OAAO,CACZ,KAAK,CAAEA,KAAM,CACb,IAAI,CAAEsD,IAAK,CACX,SAAS,CAAEC,WAAW,CAACC,YAAY,EAAE,CAACC,KAAK,CAAG,KAAK,CAAG,KAAM,CAAA,CAC5D,CAAA,CAEL,CACD,iBAAiB,CAAC,QAAQ,CAAA,CAC1B,CAEL,CACO,CAEd,CAAC,CACF,CAED,GAAML,OAAM,CAAGe,UAAU,CAACC,MAAM,CAAC,CAC/Bf,SAAS,CAAE,CACTgB,aAAa,CAAE,KAAK,CACpBC,UAAU,CAAE,QACd,CAAC,CACD1C,KAAK,CAAE,CACL2C,IAAI,CAAE,CAAC,CACPC,QAAQ,CAAE,EAAE,CACZC,WAAW,CAAE,CAAC,CACdC,SAAS,CAAE,SAAS,CACpBC,SAAS,CAAEpB,WAAW,CAACC,YAAY,EAAE,CAACC,KAAK,CAAG,OAAO,CAAG,MAAM,CAC9DmB,QAAQ,CAAE,CACZ,CAAC,CACD3D,SAAS,CAAE,CACTA,SAAS,CAAE,CACb,CAAC,CACDiD,MAAM,CAAE,CACNW,MAAM,CAAE,EACV,CACF,CAAC,CAAC,CAEF,cAAe5E,kBAAiB,CAACK,SAAS,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  I18nManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextInput,\n  TextInputProps,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\nimport ActivityIndicator from './ActivityIndicator';\nimport type { IconSource } from './Icon';\nimport IconButton from './IconButton/IconButton';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport Surface from './Surface';\n\nexport type Props = React.ComponentPropsWithRef<typeof TextInput> & {\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  clearAccessibilityLabel?: string;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  searchAccessibilityLabel?: string;\n  /**\n   * Hint text shown when the input is empty.\n   */\n  placeholder?: string;\n  /**\n   * The value of the text input.\n   */\n  value: string;\n  /**\n   * Icon name for the left icon button (see `onIconPress`).\n   */\n  icon?: IconSource;\n  /**\n   * Callback that is called when the text input's text changes.\n   */\n  onChangeText?: (query: string) => void;\n  /**\n   * Callback to execute if we want the left icon to act as button.\n   */\n  onIconPress?: (e: GestureResponderEvent) => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Searchbar shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  /**\n   * Set style of the TextInput component inside the searchbar\n   */\n  inputStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Custom color for icon, default will be derived from theme\n   */\n  iconColor?: string;\n  /**\n   * Custom icon for clear button, default will be icon close\n   */\n  clearIcon?: IconSource;\n  /**\n   * Custom flag for replacing clear button with activity indicator.\n   */\n  loading?: Boolean;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\ntype TextInputHandles = Pick<\n  TextInput,\n  'setNativeProps' | 'isFocused' | 'clear' | 'blur' | 'focus'\n>;\n\n/**\n * Searchbar is a simple input box where users can type search queries.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/searchbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Searchbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [searchQuery, setSearchQuery] = React.useState('');\n *\n *   const onChangeSearch = query => setSearchQuery(query);\n *\n *   return (\n *     <Searchbar\n *       placeholder=\"Search\"\n *       onChangeText={onChangeSearch}\n *       value={searchQuery}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n\n * ```\n */\nconst Searchbar = React.forwardRef<TextInputHandles, Props>(\n  (\n    {\n      clearAccessibilityLabel = 'clear',\n      clearIcon,\n      icon,\n      iconColor: customIconColor,\n      inputStyle,\n      onIconPress,\n      placeholder,\n      searchAccessibilityLabel = 'search',\n      elevation = 1,\n      style,\n      theme,\n      value,\n      loading = false,\n      testID = 'search-bar',\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const root = React.useRef<TextInput>(null);\n\n    React.useImperativeHandle(ref, () => {\n      const input = root.current;\n\n      if (input) {\n        return {\n          focus: () => input.focus(),\n          clear: () => input.clear(),\n          setNativeProps: (args: TextInputProps) => input.setNativeProps(args),\n          isFocused: () => input.isFocused(),\n          blur: () => input.blur(),\n        };\n      }\n\n      const noop = () => {\n        throw new Error('TextInput is not available');\n      };\n\n      return {\n        focus: noop,\n        clear: noop,\n        setNativeProps: noop,\n        isFocused: noop,\n        blur: noop,\n      };\n    });\n\n    const handleClearPress = () => {\n      root.current?.clear();\n      rest.onChangeText?.('');\n    };\n\n    const { colors, roundness, dark, isV3 } = theme;\n    const textColor = isV3 ? theme.colors.onSurface : theme.colors.text;\n    const iconColor =\n      customIconColor ||\n      (dark ? textColor : color(textColor).alpha(0.54).rgb().string());\n    const rippleColor = color(textColor).alpha(0.32).rgb().string();\n\n    return (\n      <Surface\n        style={[\n          { borderRadius: roundness },\n          !isV3 && styles.elevation,\n          styles.container,\n          style,\n        ]}\n        {...(theme.isV3 && { elevation })}\n      >\n        <IconButton\n          accessibilityRole=\"button\"\n          borderless\n          rippleColor={rippleColor}\n          onPress={onIconPress}\n          iconColor={iconColor}\n          icon={\n            icon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"magnify\"\n                color={color}\n                size={size}\n                direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n          accessibilityLabel={searchAccessibilityLabel}\n        />\n        <TextInput\n          style={[\n            styles.input,\n            {\n              color: textColor,\n              ...(theme.isV3 ? theme.fonts.default : theme.fonts.regular),\n              ...Platform.select({ web: { outline: 'none' } }),\n            },\n            inputStyle,\n          ]}\n          placeholder={placeholder || ''}\n          placeholderTextColor={\n            theme.isV3 ? theme.colors.onSurface : theme.colors?.placeholder\n          }\n          selectionColor={colors?.primary}\n          underlineColorAndroid=\"transparent\"\n          returnKeyType=\"search\"\n          keyboardAppearance={dark ? 'dark' : 'light'}\n          accessibilityRole=\"search\"\n          ref={root}\n          value={value}\n          testID={testID}\n          {...rest}\n        />\n        {loading ? (\n          <ActivityIndicator\n            testID=\"activity-indicator\"\n            style={styles.loader}\n          />\n        ) : (\n          // Clear icon should be always rendered within Searchbar – it's transparent,\n          // without touch events, when there is no value. It's done to avoid issues\n          // with the abruptly stopping ripple effect and changing bar width on web,\n          // when clearing the value.\n          <View\n            pointerEvents={value ? 'auto' : 'none'}\n            testID={`${testID}-icon-wrapper`}\n          >\n            <IconButton\n              borderless\n              accessibilityLabel={clearAccessibilityLabel}\n              iconColor={value ? iconColor : 'rgba(255, 255, 255, 0)'}\n              rippleColor={rippleColor}\n              onPress={handleClearPress}\n              icon={\n                clearIcon ||\n                (({ size, color }) => (\n                  <MaterialCommunityIcon\n                    name=\"close\"\n                    color={color}\n                    size={size}\n                    direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n                  />\n                ))\n              }\n              accessibilityRole=\"button\"\n            />\n          </View>\n        )}\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.getConstants().isRTL ? 'right' : 'left',\n    minWidth: 0,\n  },\n  elevation: {\n    elevation: 4,\n  },\n  loader: {\n    margin: 10,\n  },\n});\n\nexport default withInternalTheme(Searchbar);\n"]},"metadata":{},"sourceType":"module"}
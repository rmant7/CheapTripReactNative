{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"component\"];import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{withInternalTheme}from\"../../core/theming\";import Text from\"../Typography/Text\";import Caption from\"../Typography/v2/Caption\";import Title from\"../Typography/v2/Title\";var LEFT_SIZE=40;var CardTitle=function CardTitle(_ref){var title=_ref.title,titleStyle=_ref.titleStyle,_ref$titleNumberOfLin=_ref.titleNumberOfLines,titleNumberOfLines=_ref$titleNumberOfLin===void 0?1:_ref$titleNumberOfLin,_ref$titleVariant=_ref.titleVariant,titleVariant=_ref$titleVariant===void 0?'bodyLarge':_ref$titleVariant,subtitle=_ref.subtitle,subtitleStyle=_ref.subtitleStyle,_ref$subtitleNumberOf=_ref.subtitleNumberOfLines,subtitleNumberOfLines=_ref$subtitleNumberOf===void 0?1:_ref$subtitleNumberOf,_ref$subtitleVariant=_ref.subtitleVariant,subtitleVariant=_ref$subtitleVariant===void 0?'bodyMedium':_ref$subtitleVariant,left=_ref.left,leftStyle=_ref.leftStyle,right=_ref.right,rightStyle=_ref.rightStyle,style=_ref.style,theme=_ref.theme;var titleComponent=function titleComponent(props){return theme.isV3?React.createElement(Text,props):React.createElement(Title,props);};var subtitleComponent=function subtitleComponent(props){return theme.isV3?React.createElement(Text,props):React.createElement(Caption,props);};var TextComponent=React.memo(function(_ref2){var component=_ref2.component,rest=_objectWithoutProperties(_ref2,_excluded);return React.createElement(component,rest);});return React.createElement(View,{style:[styles.container,{minHeight:subtitle||left||right?72:50},style]},left?React.createElement(View,{style:[styles.left,leftStyle]},left({size:LEFT_SIZE})):null,React.createElement(View,{style:[styles.titles]},title&&React.createElement(TextComponent,{component:titleComponent,style:[styles.title,{marginBottom:subtitle?0:2},titleStyle],numberOfLines:titleNumberOfLines,variant:titleVariant},title),subtitle&&React.createElement(TextComponent,{component:subtitleComponent,style:[styles.subtitle,subtitleStyle],numberOfLines:subtitleNumberOfLines,variant:subtitleVariant},subtitle)),React.createElement(View,{style:rightStyle},right?right({size:24}):null));};CardTitle.displayName='Card.Title';var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingLeft:16},left:{justifyContent:'center',marginRight:16,height:LEFT_SIZE,width:LEFT_SIZE},titles:{flex:1,flexDirection:'column',justifyContent:'center'},title:{minHeight:30,paddingRight:16},subtitle:{minHeight:20,marginVertical:0,paddingRight:16}});export default withInternalTheme(CardTitle);export{CardTitle};","map":{"version":3,"mappings":"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","names":["React","withInternalTheme","Text","Caption","Title","LEFT_SIZE","CardTitle","_ref","title","titleStyle","titleNumberOfLines","titleVariant","subtitle","subtitleStyle","subtitleNumberOfLines","subtitleVariant","left","leftStyle","right","rightStyle","style","theme","titleComponent","props","isV3","subtitleComponent","TextComponent","memo","component","_ref2","rest","createElement","View","styles","container","minHeight","size","titles","marginBottom","numberOfLines","variant","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingLeft","marginRight","height","width","flex","paddingRight","marginVertical"],"sources":["CardTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme, MD3TypescaleKey } from '../../types';\nimport Text from '../Typography/Text';\nimport Caption from '../Typography/v2/Caption';\nimport Title from '../Typography/v2/Title';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Text for the title. Note that this will only accept a string or `<Text>`-based node.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Number of lines for the title.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Title text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  titleVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * Text for the subtitle. Note that this will only accept a string or `<Text>`-based node.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Number of lines for the subtitle.\n   */\n  subtitleNumberOfLines?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Subtitle text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  subtitleVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the left element wrapper.\n   */\n  leftStyle?: StyleProp<ViewStyle>;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the right element wrapper.\n   */\n  rightStyle?: StyleProp<ViewStyle>;\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst LEFT_SIZE = 40;\n\n/**\n * A component to show a title, subtitle and an avatar inside a Card.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/card-title-1.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Card, IconButton } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card.Title\n *     title=\"Card Title\"\n *     subtitle=\"Card Subtitle\"\n *     left={(props) => <Avatar.Icon {...props} icon=\"folder\" />}\n *     right={(props) => <IconButton {...props} icon=\"more-vert\" onPress={() => {}} />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst CardTitle = ({\n  title,\n  titleStyle,\n  titleNumberOfLines = 1,\n  titleVariant = 'bodyLarge',\n  subtitle,\n  subtitleStyle,\n  subtitleNumberOfLines = 1,\n  subtitleVariant = 'bodyMedium',\n  left,\n  leftStyle,\n  right,\n  rightStyle,\n  style,\n  theme,\n}: Props) => {\n  const titleComponent = (props: any) =>\n    theme.isV3 ? <Text {...props} /> : <Title {...props} />;\n\n  const subtitleComponent = (props: any) =>\n    theme.isV3 ? <Text {...props} /> : <Caption {...props} />;\n\n  const TextComponent = React.memo(({ component, ...rest }: any) =>\n    React.createElement(component, rest)\n  );\n  return (\n    <View\n      style={[\n        styles.container,\n        { minHeight: subtitle || left || right ? 72 : 50 },\n        style,\n      ]}\n    >\n      {left ? (\n        <View style={[styles.left, leftStyle]}>\n          {left({\n            size: LEFT_SIZE,\n          })}\n        </View>\n      ) : null}\n\n      <View style={[styles.titles]}>\n        {title && (\n          <TextComponent\n            component={titleComponent}\n            style={[\n              styles.title,\n              { marginBottom: subtitle ? 0 : 2 },\n              titleStyle,\n            ]}\n            numberOfLines={titleNumberOfLines}\n            variant={titleVariant}\n          >\n            {title}\n          </TextComponent>\n        )}\n        {subtitle && (\n          <TextComponent\n            component={subtitleComponent}\n            style={[styles.subtitle, subtitleStyle]}\n            numberOfLines={subtitleNumberOfLines}\n            variant={subtitleVariant}\n          >\n            {subtitle}\n          </TextComponent>\n        )}\n      </View>\n      <View style={rightStyle}>{right ? right({ size: 24 }) : null}</View>\n    </View>\n  );\n};\n\nCardTitle.displayName = 'Card.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 16,\n  },\n\n  left: {\n    justifyContent: 'center',\n    marginRight: 16,\n    height: LEFT_SIZE,\n    width: LEFT_SIZE,\n  },\n\n  titles: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n\n  title: {\n    minHeight: 30,\n    paddingRight: 16,\n  },\n\n  subtitle: {\n    minHeight: 20,\n    marginVertical: 0,\n    paddingRight: 16,\n  },\n});\n\nexport default withInternalTheme(CardTitle);\n\n// @component-docs ignore-next-line\nexport { CardTitle };\n"]},"metadata":{},"sourceType":"module"}
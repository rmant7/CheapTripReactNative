{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{withInternalTheme}from\"../../core/theming\";import Icon from\"../Icon\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import{getContentMaxWidth,getMenuItemColor,MAX_WIDTH,MIN_WIDTH}from\"./utils\";var MenuItem=function MenuItem(_ref){var leadingIcon=_ref.leadingIcon,trailingIcon=_ref.trailingIcon,dense=_ref.dense,title=_ref.title,disabled=_ref.disabled,onPress=_ref.onPress,style=_ref.style,contentStyle=_ref.contentStyle,testID=_ref.testID,titleStyle=_ref.titleStyle,accessibilityLabel=_ref.accessibilityLabel,theme=_ref.theme;var _getMenuItemColor=getMenuItemColor({theme:theme,disabled:disabled}),titleColor=_getMenuItemColor.titleColor,iconColor=_getMenuItemColor.iconColor,underlayColor=_getMenuItemColor.underlayColor;var isV3=theme.isV3;var containerPadding=isV3?12:8;var iconWidth=isV3?24:40;var minWidth=MIN_WIDTH-(isV3?12:16);var maxWidth=getContentMaxWidth({isV3:isV3,iconWidth:iconWidth,leadingIcon:leadingIcon,trailingIcon:trailingIcon});var titleTextStyle=_objectSpread({color:titleColor},isV3?theme.fonts.bodyLarge:{});return React.createElement(TouchableRipple,{style:[styles.container,{paddingHorizontal:containerPadding},dense&&styles.md3DenseContainer,style],onPress:onPress,disabled:disabled,testID:testID,accessibilityLabel:accessibilityLabel,accessibilityRole:\"menuitem\",accessibilityState:{disabled:disabled},underlayColor:underlayColor},React.createElement(View,{style:styles.row},leadingIcon?React.createElement(View,{style:[!isV3&&styles.item,{width:iconWidth}],pointerEvents:\"box-none\"},React.createElement(Icon,{source:leadingIcon,size:24,color:iconColor})):null,React.createElement(View,{style:[!isV3&&styles.item,styles.content,{minWidth:minWidth,maxWidth:maxWidth},isV3&&(leadingIcon?styles.md3LeadingIcon:styles.md3WithoutLeadingIcon),contentStyle],pointerEvents:\"none\"},React.createElement(Text,{variant:\"bodyLarge\",selectable:false,numberOfLines:1,style:[!isV3&&styles.title,titleTextStyle,titleStyle]},title)),isV3&&trailingIcon?React.createElement(View,{style:[!isV3&&styles.item,{width:iconWidth}],pointerEvents:\"box-none\"},React.createElement(Icon,{source:trailingIcon,size:24,color:iconColor})):null));};MenuItem.displayName='Menu.Item';var styles=StyleSheet.create({container:{minWidth:MIN_WIDTH,maxWidth:MAX_WIDTH,height:48,justifyContent:'center'},md3DenseContainer:{height:32},row:{flexDirection:'row'},title:{fontSize:16},item:{marginHorizontal:8},content:{justifyContent:'center'},md3LeadingIcon:{marginLeft:12},md3WithoutLeadingIcon:{marginLeft:4}});export default withInternalTheme(MenuItem);","map":{"version":3,"mappings":"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","names":["React","withInternalTheme","Icon","TouchableRipple","Text","getContentMaxWidth","getMenuItemColor","MAX_WIDTH","MIN_WIDTH","MenuItem","_ref","leadingIcon","trailingIcon","dense","title","disabled","onPress","style","contentStyle","testID","titleStyle","accessibilityLabel","theme","titleColor","iconColor","underlayColor","isV3","containerPadding","iconWidth","minWidth","maxWidth","titleTextStyle","color","fonts","bodyLarge","styles","container","paddingHorizontal","md3DenseContainer","accessibilityRole","accessibilityState","View","row","item","width","pointerEvents","source","size","content","md3LeadingIcon","md3WithoutLeadingIcon","variant","selectable","numberOfLines","displayName","StyleSheet","create","height","justifyContent","flexDirection","fontSize","marginHorizontal","marginLeft"],"sources":["MenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport {\n  getContentMaxWidth,\n  getMenuItemColor,\n  MAX_WIDTH,\n  MIN_WIDTH,\n} from './utils';\n\nexport type Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: React.ReactNode;\n  /**\n   * @renamed Renamed from 'icon' to 'leadingIcon' in v5.x\n   *\n   * Leading icon to display for the `MenuItem`.\n   */\n  leadingIcon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Trailing icon to display for the `MenuItem`.\n   */\n  trailingIcon?: IconSource;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Sets min height with densed layout.\n   */\n  dense?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * @optional\n   */\n  style?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityLabel?: string;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/menu-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item leadingIcon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item leadingIcon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item leadingIcon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item leadingIcon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item leadingIcon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst MenuItem = ({\n  leadingIcon,\n  trailingIcon,\n  dense,\n  title,\n  disabled,\n  onPress,\n  style,\n  contentStyle,\n  testID,\n  titleStyle,\n  accessibilityLabel,\n  theme,\n}: Props) => {\n  const { titleColor, iconColor, underlayColor } = getMenuItemColor({\n    theme,\n    disabled,\n  });\n  const { isV3 } = theme;\n\n  const containerPadding = isV3 ? 12 : 8;\n\n  const iconWidth = isV3 ? 24 : 40;\n\n  const minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n\n  const maxWidth = getContentMaxWidth({\n    isV3,\n    iconWidth,\n    leadingIcon,\n    trailingIcon,\n  });\n\n  const titleTextStyle = {\n    color: titleColor,\n    ...(isV3 ? theme.fonts.bodyLarge : {}),\n  };\n\n  return (\n    <TouchableRipple\n      style={[\n        styles.container,\n        { paddingHorizontal: containerPadding },\n        dense && styles.md3DenseContainer,\n        style,\n      ]}\n      onPress={onPress}\n      disabled={disabled}\n      testID={testID}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"menuitem\"\n      accessibilityState={{ disabled }}\n      underlayColor={underlayColor}\n    >\n      <View style={styles.row}>\n        {leadingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={leadingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n        <View\n          style={[\n            !isV3 && styles.item,\n            styles.content,\n            { minWidth, maxWidth },\n            isV3 &&\n              (leadingIcon\n                ? styles.md3LeadingIcon\n                : styles.md3WithoutLeadingIcon),\n            contentStyle,\n          ]}\n          pointerEvents=\"none\"\n        >\n          <Text\n            variant=\"bodyLarge\"\n            selectable={false}\n            numberOfLines={1}\n            style={[!isV3 && styles.title, titleTextStyle, titleStyle]}\n          >\n            {title}\n          </Text>\n        </View>\n        {isV3 && trailingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={trailingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nMenuItem.displayName = 'Menu.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center',\n  },\n  md3DenseContainer: {\n    height: 32,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n  },\n  md3LeadingIcon: {\n    marginLeft: 12,\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4,\n  },\n});\n\nexport default withInternalTheme(MenuItem);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"rippleColor\"],_excluded2=[\"children\",\"style\"],_excluded3=[\"children\",\"style\"];function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import processColor from\"react-native-web/dist/exports/processColor\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import createNativeWrapper from\"../handlers/createNativeWrapper\";import GestureHandlerButton from\"./GestureHandlerButton\";import{State}from\"../State\";export var RawButton=createNativeWrapper(GestureHandlerButton,{shouldCancelWhenOutside:false,shouldActivateOnStart:false});export var BaseButton=function(_React$Component){_inherits(BaseButton,_React$Component);var _super=_createSuper(BaseButton);function BaseButton(props){var _this;_classCallCheck(this,BaseButton);_this=_super.call(this,props);_defineProperty(_assertThisInitialized(_this),\"lastActive\",void 0);_defineProperty(_assertThisInitialized(_this),\"longPressTimeout\",void 0);_defineProperty(_assertThisInitialized(_this),\"longPressDetected\",void 0);_defineProperty(_assertThisInitialized(_this),\"handleEvent\",function(_ref){var nativeEvent=_ref.nativeEvent;var state=nativeEvent.state,oldState=nativeEvent.oldState,pointerInside=nativeEvent.pointerInside;var active=pointerInside&&state===State.ACTIVE;if(active!==_this.lastActive&&_this.props.onActiveStateChange){_this.props.onActiveStateChange(active);}if(!_this.longPressDetected&&oldState===State.ACTIVE&&state!==State.CANCELLED&&_this.lastActive&&_this.props.onPress){_this.props.onPress(active);}if(!_this.lastActive&&state===(Platform.OS!=='android'?State.ACTIVE:State.BEGAN)&&pointerInside){_this.longPressDetected=false;if(_this.props.onLongPress){_this.longPressTimeout=setTimeout(_this.onLongPress,_this.props.delayLongPress);}}else if(state===State.ACTIVE&&!pointerInside&&_this.longPressTimeout!==undefined){clearTimeout(_this.longPressTimeout);_this.longPressTimeout=undefined;}else if(_this.longPressTimeout!==undefined&&(state===State.END||state===State.CANCELLED||state===State.FAILED)){clearTimeout(_this.longPressTimeout);_this.longPressTimeout=undefined;}_this.lastActive=active;});_defineProperty(_assertThisInitialized(_this),\"onLongPress\",function(){var _this$props$onLongPre,_this$props;_this.longPressDetected=true;(_this$props$onLongPre=(_this$props=_this.props).onLongPress)===null||_this$props$onLongPre===void 0?void 0:_this$props$onLongPre.call(_this$props);});_defineProperty(_assertThisInitialized(_this),\"onHandlerStateChange\",function(e){var _this$props$onHandler,_this$props2;(_this$props$onHandler=(_this$props2=_this.props).onHandlerStateChange)===null||_this$props$onHandler===void 0?void 0:_this$props$onHandler.call(_this$props2,e);_this.handleEvent(e);});_defineProperty(_assertThisInitialized(_this),\"onGestureEvent\",function(e){var _this$props$onGesture,_this$props3;(_this$props$onGesture=(_this$props3=_this.props).onGestureEvent)===null||_this$props$onGesture===void 0?void 0:_this$props$onGesture.call(_this$props3,e);_this.handleEvent(e);});_this.lastActive=false;_this.longPressDetected=false;return _this;}_createClass(BaseButton,[{key:\"render\",value:function render(){var _this$props6=this.props,rippleColor=_this$props6.rippleColor,rest=_objectWithoutProperties(_this$props6,_excluded);return React.createElement(RawButton,_extends({rippleColor:processColor(rippleColor)},rest,{onGestureEvent:this.onGestureEvent,onHandlerStateChange:this.onHandlerStateChange}));}}]);return BaseButton;}(React.Component);_defineProperty(BaseButton,\"defaultProps\",{delayLongPress:600});var AnimatedBaseButton=Animated.createAnimatedComponent(BaseButton);var btnStyles=StyleSheet.create({underlay:{position:'absolute',left:0,right:0,bottom:0,top:0}});export var RectButton=function(_React$Component2){_inherits(RectButton,_React$Component2);var _super2=_createSuper(RectButton);function RectButton(props){var _this2;_classCallCheck(this,RectButton);_this2=_super2.call(this,props);_defineProperty(_assertThisInitialized(_this2),\"opacity\",void 0);_defineProperty(_assertThisInitialized(_this2),\"onActiveStateChange\",function(active){var _this$props$onActiveS,_this$props4;if(Platform.OS!=='android'){_this2.opacity.setValue(active?_this2.props.activeOpacity:0);}(_this$props$onActiveS=(_this$props4=_this2.props).onActiveStateChange)===null||_this$props$onActiveS===void 0?void 0:_this$props$onActiveS.call(_this$props4,active);});_this2.opacity=new Animated.Value(0);return _this2;}_createClass(RectButton,[{key:\"render\",value:function render(){var _this$props7=this.props,children=_this$props7.children,style=_this$props7.style,rest=_objectWithoutProperties(_this$props7,_excluded2);var resolvedStyle=StyleSheet.flatten(style!==null&&style!==void 0?style:{});return React.createElement(BaseButton,_extends({},rest,{style:resolvedStyle,onActiveStateChange:this.onActiveStateChange}),React.createElement(Animated.View,{style:[btnStyles.underlay,{opacity:this.opacity,backgroundColor:this.props.underlayColor,borderRadius:resolvedStyle.borderRadius,borderTopLeftRadius:resolvedStyle.borderTopLeftRadius,borderTopRightRadius:resolvedStyle.borderTopRightRadius,borderBottomLeftRadius:resolvedStyle.borderBottomLeftRadius,borderBottomRightRadius:resolvedStyle.borderBottomRightRadius}]}),children);}}]);return RectButton;}(React.Component);_defineProperty(RectButton,\"defaultProps\",{activeOpacity:0.105,underlayColor:'black'});export var BorderlessButton=function(_React$Component3){_inherits(BorderlessButton,_React$Component3);var _super3=_createSuper(BorderlessButton);function BorderlessButton(props){var _this3;_classCallCheck(this,BorderlessButton);_this3=_super3.call(this,props);_defineProperty(_assertThisInitialized(_this3),\"opacity\",void 0);_defineProperty(_assertThisInitialized(_this3),\"onActiveStateChange\",function(active){var _this$props$onActiveS2,_this$props5;if(Platform.OS!=='android'){_this3.opacity.setValue(active?_this3.props.activeOpacity:1);}(_this$props$onActiveS2=(_this$props5=_this3.props).onActiveStateChange)===null||_this$props$onActiveS2===void 0?void 0:_this$props$onActiveS2.call(_this$props5,active);});_this3.opacity=new Animated.Value(1);return _this3;}_createClass(BorderlessButton,[{key:\"render\",value:function render(){var _this$props8=this.props,children=_this$props8.children,style=_this$props8.style,rest=_objectWithoutProperties(_this$props8,_excluded3);return React.createElement(AnimatedBaseButton,_extends({},rest,{onActiveStateChange:this.onActiveStateChange,style:[style,Platform.OS==='ios'&&{opacity:this.opacity}]}),children);}}]);return BorderlessButton;}(React.Component);_defineProperty(BorderlessButton,\"defaultProps\",{activeOpacity:0.3,borderless:true});export{default as PureNativeButton}from\"./GestureHandlerButton\";","map":{"version":3,"mappings":"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","names":["React","createNativeWrapper","GestureHandlerButton","State","RawButton","shouldCancelWhenOutside","shouldActivateOnStart","BaseButton","constructor","props","_defineProperty","nativeEvent","state","oldState","pointerInside","active","ACTIVE","lastActive","onActiveStateChange","longPressDetected","CANCELLED","onPress","Platform","OS","BEGAN","onLongPress","longPressTimeout","setTimeout","delayLongPress","undefined","clearTimeout","END","FAILED","e","onHandlerStateChange","handleEvent","onGestureEvent","render","rippleColor","rest","processColor","Component","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","left","right","bottom","top","RectButton","opacity","setValue","activeOpacity","Value","children","style","resolvedStyle","flatten","View","backgroundColor","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BorderlessButton","borderless","default","PureNativeButton"],"sources":["GestureButtons.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  processColor,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport { State } from '../State';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport {\n  NativeViewGestureHandlerPayload,\n  NativeViewGestureHandlerProps,\n} from '../handlers/NativeViewGestureHandler';\n\nexport interface RawButtonProps extends NativeViewGestureHandlerProps {\n  /**\n   * Defines if more than one button could be pressed simultaneously. By default\n   * set true.\n   */\n  exclusive?: boolean;\n  // TODO: we should transform props in `createNativeWrapper`\n\n  /**\n   * Android only.\n   *\n   * Defines color of native ripple animation used since API level 21.\n   */\n  rippleColor?: any; // it was present in BaseButtonProps before but is used here in code\n\n  /**\n   * Android only.\n   *\n   * Defines radius of native ripple animation used since API level 21.\n   */\n  rippleRadius?: number | null;\n\n  /**\n   * Android only.\n   *\n   * Set this to true if you want the ripple animation to render outside the view bounds.\n   */\n  borderless?: boolean;\n\n  /**\n   * Android only.\n   *\n   * Defines whether the ripple animation should be drawn on the foreground of the view.\n   */\n  foreground?: boolean;\n\n  /**\n   * Android only.\n   *\n   * Set this to true if you don't want the system to play sound when the button is pressed.\n   */\n  touchSoundDisabled?: boolean;\n}\n\nexport interface BaseButtonProps extends RawButtonProps {\n  /**\n   * Called when the button gets pressed (analogous to `onPress` in\n   * `TouchableHighlight` from RN core).\n   */\n  onPress?: (pointerInside: boolean) => void;\n\n  /**\n   * Called when the button gets pressed and is held for `delayLongPress`\n   * milliseconds.\n   */\n  onLongPress?: () => void;\n\n  /**\n   * Called when button changes from inactive to active and vice versa. It\n   * passes active state as a boolean variable as a first parameter for that\n   * method.\n   */\n  onActiveStateChange?: (active: boolean) => void;\n  style?: StyleProp<ViewStyle>;\n  testID?: string;\n\n  /**\n   * Delay, in milliseconds, after which the `onLongPress` callback gets called.\n   * Defaults to 600.\n   */\n  delayLongPress?: number;\n}\n\nexport interface RectButtonProps extends BaseButtonProps {\n  /**\n   * Background color that will be dimmed when button is in active state.\n   */\n  underlayColor?: string;\n\n  /**\n   * iOS only.\n   *\n   * Opacity applied to the underlay when button is in active state.\n   */\n  activeOpacity?: number;\n}\n\nexport interface BorderlessButtonProps extends BaseButtonProps {\n  /**\n   * iOS only.\n   *\n   * Opacity applied to the button when it is in an active state.\n   */\n  activeOpacity?: number;\n}\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\nexport class BaseButton extends React.Component<BaseButtonProps> {\n  static defaultProps = {\n    delayLongPress: 600,\n  };\n\n  private lastActive: boolean;\n  private longPressTimeout: ReturnType<typeof setTimeout> | undefined;\n  private longPressDetected: boolean;\n\n  constructor(props: BaseButtonProps) {\n    super(props);\n    this.lastActive = false;\n    this.longPressDetected = false;\n  }\n\n  private handleEvent = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this.lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      !this.longPressDetected &&\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this.lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    if (\n      !this.lastActive &&\n      // NativeViewGestureHandler sends different events based on platform\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      pointerInside\n    ) {\n      this.longPressDetected = false;\n      if (this.props.onLongPress) {\n        this.longPressTimeout = setTimeout(\n          this.onLongPress,\n          this.props.delayLongPress\n        );\n      }\n    } else if (\n      // cancel longpress timeout if it's set and the finger moved out of the view\n      state === State.ACTIVE &&\n      !pointerInside &&\n      this.longPressTimeout !== undefined\n    ) {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = undefined;\n    } else if (\n      // cancel longpress timeout if it's set and the gesture has finished\n      this.longPressTimeout !== undefined &&\n      (state === State.END ||\n        state === State.CANCELLED ||\n        state === State.FAILED)\n    ) {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = undefined;\n    }\n\n    this.lastActive = active;\n  };\n\n  private onLongPress = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress?.();\n  };\n\n  // Normally, the parent would execute it's handler first, then forward the\n  // event to listeners. However, here our handler is virtually only forwarding\n  // events to listeners, so we reverse the order to keep the proper order of\n  // the callbacks (from \"raw\" ones to \"processed\").\n  private onHandlerStateChange = (\n    e: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onHandlerStateChange?.(e);\n    this.handleEvent(e);\n  };\n\n  private onGestureEvent = (\n    e: GestureEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onGestureEvent?.(e);\n    this.handleEvent(\n      e as HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n    ); // TODO: maybe it is not correct\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component<RectButtonProps> {\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: RectButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(0);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 0);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this.onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this.opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component<BorderlessButtonProps> {\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: BorderlessButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(1);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 1);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this.onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this.opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n"]},"metadata":{},"sourceType":"module"}
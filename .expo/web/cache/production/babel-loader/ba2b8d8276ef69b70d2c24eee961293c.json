{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"style\",\"index\",\"children\",\"visibility\"];function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import View from\"react-native-web/dist/exports/View\";var BottomNavigationRouteScreen=function(_React$Component){_inherits(BottomNavigationRouteScreen,_React$Component);var _super=_createSuper(BottomNavigationRouteScreen);function BottomNavigationRouteScreen(){_classCallCheck(this,BottomNavigationRouteScreen);return _super.apply(this,arguments);}_createClass(BottomNavigationRouteScreen,[{key:\"render\",value:function render(){var _this$props=this.props,style=_this$props.style,index=_this$props.index,children=_this$props.children,visibility=_this$props.visibility,rest=_objectWithoutProperties(_this$props,_excluded);var display=Platform.OS==='web'?visibility===0?'none':'flex':undefined;return React.createElement(View,_extends({testID:\"RouteScreen: \"+index,style:[style,{display:display}]},rest),children);}}]);return BottomNavigationRouteScreen;}(React.Component);export default Animated.createAnimatedComponent(BottomNavigationRouteScreen);","map":{"version":3,"mappings":"67CAAA,MAAOA,MAAK,KAAM,OAAO,mLAQnBC,4BAA2B,qUAC/BC,iBAAsB,CACpB,gBAAwD,IAAI,CAACC,KAAK,CAA1DC,KAAK,aAALA,KAAK,CAAEC,KAAK,aAALA,KAAK,CAAEC,QAAQ,aAARA,QAAQ,CAAEC,UAAU,aAAVA,UAAU,CAAKC,qDAK/C,GAAMC,QAAO,CACXC,QAAQ,CAACC,EAAE,GAAK,KAAK,CAAIJ,UAAU,GAAK,CAAC,CAAG,MAAM,CAAG,MAAM,CAAIK,SAAS,CAE1E,MACEZ,qBAACa,IAAI,WACHC,MAAM,iBAAkBT,KAAQ,CAChCD,KAAK,CAAE,CAACA,KAAK,CAAE,CAAEK,eAAQ,CAAC,CAAE,EACxBD,IAAI,EAEPF,QAAQ,CACJ,CAEX,0CAnBwCN,KAAK,CAACe,SAAS,EAsBzD,cAAeC,SAAQ,CAACC,uBAAuB,CAAChB,2BAA2B,CAAC","names":["React","BottomNavigationRouteScreen","render","props","style","index","children","visibility","rest","display","Platform","OS","undefined","View","testID","Component","Animated","createAnimatedComponent"],"sources":["BottomNavigationRouteScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, Platform, View, ViewProps } from 'react-native';\n\ninterface Props extends ViewProps {\n  visibility?: 0 | 1 | Animated.AnimatedInterpolation<number>;\n  index: number;\n}\n\nclass BottomNavigationRouteScreen extends React.Component<Props> {\n  render(): JSX.Element {\n    const { style, index, children, visibility, ...rest } = this.props;\n\n    // On Web, the unfocused tab screens can still be clicked since they are transparent, but still there\n    // Hiding them with `display: none` makes sure that they won't receive clicks\n    // We only set it on Web since on native, react-native-pager-view's breaks due to layout changing\n    const display =\n      Platform.OS === 'web' ? (visibility === 0 ? 'none' : 'flex') : undefined;\n\n    return (\n      <View\n        testID={`RouteScreen: ${index}`}\n        style={[style, { display }]}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n}\n\nexport default Animated.createAnimatedComponent(BottomNavigationRouteScreen);\n"]},"metadata":{},"sourceType":"module"}
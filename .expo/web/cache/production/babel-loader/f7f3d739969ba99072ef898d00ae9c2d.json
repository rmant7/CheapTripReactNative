{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"variant\",\"theme\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import NativeText from\"react-native-web/dist/exports/Text\";import{useInternalTheme}from\"../../core/theming\";import{MD3TypescaleKey}from\"../../types\";var Text=function Text(_ref,ref){var style=_ref.style,variant=_ref.variant,initialTheme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var root=React.useRef(null);var theme=useInternalTheme(initialTheme);var writingDirection=I18nManager.getConstants().isRTL?'rtl':'ltr';React.useImperativeHandle(ref,function(){return{setNativeProps:function setNativeProps(args){var _root$current;return(_root$current=root.current)===null||_root$current===void 0?void 0:_root$current.setNativeProps(args);}};});if(theme.isV3&&variant){var stylesByVariant=Object.keys(MD3TypescaleKey).reduce(function(acc,key){var _theme$fonts$key=theme.fonts[key],fontSize=_theme$fonts$key.fontSize,fontWeight=_theme$fonts$key.fontWeight,lineHeight=_theme$fonts$key.lineHeight,letterSpacing=_theme$fonts$key.letterSpacing,fontFamily=_theme$fonts$key.fontFamily;return _objectSpread(_objectSpread({},acc),{},_defineProperty({},key,{fontFamily:fontFamily,fontSize:fontSize,fontWeight:fontWeight,lineHeight:lineHeight,letterSpacing:letterSpacing,color:theme.colors.onSurface}));},{});var styleForVariant=stylesByVariant[variant];return React.createElement(NativeText,_extends({ref:root,style:[styleForVariant,styles.text,{writingDirection:writingDirection},style]},rest));}else{var _theme$fonts,_theme$colors;var font=theme.isV3?theme.fonts.default:(_theme$fonts=theme.fonts)===null||_theme$fonts===void 0?void 0:_theme$fonts.regular;var textStyle=_objectSpread(_objectSpread({},font),{},{color:theme.isV3?(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.onSurface:theme.colors.text});return React.createElement(NativeText,_extends({},rest,{ref:root,style:[styles.text,textStyle,{writingDirection:writingDirection},style]}));}};var styles=StyleSheet.create({text:{textAlign:'left'}});export default React.forwardRef(Text);","map":{"version":3,"mappings":"kvCAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,gMAS9B,OAASC,gBAAgB,0BACzB,OAAeC,eAAe,mBAqE9B,GAAMC,KAA+C,CAAG,QAAlDA,KAA+C,CAAGC,KAEtDC,GAAG,CACA,IAFDC,MAAK,CAAgDF,KAArDE,KAAK,CAAEC,OAAO,CAAuCH,KAA9CG,OAAO,CAASC,YAAY,CAAkBJ,KAArCK,KAAK,CAAmBC,8BAAaN,gBAGvD,GAAMO,KAAI,CAAGX,KAAK,CAACY,MAAM,CAAoB,IAAI,CAAC,CAElD,GAAMH,MAAK,CAAGR,gBAAgB,CAACO,YAAY,CAAC,CAC5C,GAAMK,iBAAgB,CAAGC,WAAW,CAACC,YAAY,EAAE,CAACC,KAAK,CAAG,KAAK,CAAG,KAAK,CAEzEhB,KAAK,CAACiB,mBAAmB,CAACZ,GAAG,CAAE,iBAAO,CACpCa,cAAc,CAAGC,4BAAY,yCAAKR,IAAI,CAACS,OAAO,wCAAZC,cAAcH,cAAc,CAACC,IAAI,CAAC,EACtE,CAAC,EAAC,CAAC,CAEH,GAAIV,KAAK,CAACa,IAAI,EAAIf,OAAO,CAAE,CACzB,GAAMgB,gBAAe,CAAGC,MAAM,CAACC,IAAI,CAACvB,eAAe,CAAC,CAACwB,MAAM,CACzD,SAACC,GAAG,CAAEC,GAAG,CAAK,CACZ,qBACEnB,KAAK,CAACoB,KAAK,CAACD,GAAG,CAAiC,CAD1CE,QAAQ,kBAARA,QAAQ,CAAEC,UAAU,kBAAVA,UAAU,CAAEC,UAAU,kBAAVA,UAAU,CAAEC,aAAa,kBAAbA,aAAa,CAAEC,uCAGzD,sCACKP,GAAG,wBACLC,GAAG,CAAG,CACLM,UAAU,CAAVA,UAAU,CACVJ,QAAQ,CAARA,QAAQ,CACRC,UAAU,CAAVA,UAAU,CACVC,UAAU,CAAVA,UAAU,CACVC,aAAa,CAAbA,aAAa,CACbE,KAAK,CAAE1B,KAAK,CAAC2B,MAAM,CAACC,SACtB,IAEJ,CAAC,CACD,CAAC,CAAC,CAQH,CAED,GAAMC,gBAAe,CAAGf,eAAe,CAAChB,OAAO,CAAC,CAEhD,MACEP,qBAACuC,UAAU,WACTlC,GAAG,CAAEM,IAAK,CACVL,KAAK,CAAE,CAACgC,eAAe,CAAEE,MAAM,CAACC,IAAI,CAAE,CAAE5B,iCAAiB,CAAC,CAAEP,KAAK,CAAE,EAC/DI,IAAI,EACR,CAEN,CAAC,IAAM,gCACL,GAAMgC,KAAI,CAAGjC,KAAK,CAACa,IAAI,CAAGb,KAAK,CAACoB,KAAK,CAACc,OAAO,eAAGlC,KAAK,CAACoB,KAAK,uCAAXe,aAAaC,OAAO,CACpE,GAAMC,UAAS,gCACVJ,IAAI,MACPP,KAAK,CAAE1B,KAAK,CAACa,IAAI,gBAAGb,KAAK,CAAC2B,MAAM,wCAAZW,cAAcV,SAAS,CAAG5B,KAAK,CAAC2B,MAAM,CAACK,MAC5D,CACD,MACEzC,qBAACuC,UAAU,aACL7B,IAAI,EACRL,GAAG,CAAEM,IAAK,CACVL,KAAK,CAAE,CAACkC,MAAM,CAACC,IAAI,CAAEK,SAAS,CAAE,CAAEjC,iCAAiB,CAAC,CAAEP,KAAK,CAAE,GAC7D,CAEN,CACF,CAAC,CAED,GAAMkC,OAAM,CAAGQ,UAAU,CAACC,MAAM,CAAC,CAC/BR,IAAI,CAAE,CACJS,SAAS,CAAE,MACb,CACF,CAAC,CAAC,CAEF,cAAelD,MAAK,CAACmD,UAAU,CAAChD,IAAI,CAAC","names":["React","useInternalTheme","MD3TypescaleKey","Text","_ref","ref","style","variant","initialTheme","theme","rest","root","useRef","writingDirection","I18nManager","getConstants","isRTL","useImperativeHandle","setNativeProps","args","current","_root$current","isV3","stylesByVariant","Object","keys","reduce","acc","key","fonts","fontSize","fontWeight","lineHeight","letterSpacing","fontFamily","color","colors","onSurface","styleForVariant","NativeText","styles","text","font","default","_theme$fonts","regular","textStyle","_theme$colors","StyleSheet","create","textAlign","forwardRef"],"sources":["Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  Text as NativeText,\n  TextStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { Font, MD3TypescaleKey, ThemeProp } from '../../types';\n\nexport type Props = React.ComponentProps<typeof NativeText> & {\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  variant?: keyof typeof MD3TypescaleKey;\n  children: React.ReactNode;\n  theme?: ThemeProp;\n  style?: StyleProp<TextStyle>;\n};\n\n// @component-group Typography\n\n/**\n * Typography component showing styles complied with passed `variant` prop and supported by the type system.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/typography.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <>\n *     <Text variant=\"displayLarge\">Display Large</Text>\n *     <Text variant=\"displayMedium\">Display Medium</Text>\n *     <Text variant=\"displaySmall\">Display small</Text>\n *\n *     <Text variant=\"headlineLarge\">Headline Large</Text>\n *     <Text variant=\"headlineMedium\">Headline Medium</Text>\n *     <Text variant=\"headlineSmall\">Headline Small</Text>\n *\n *     <Text variant=\"titleLarge\">Title Large</Text>\n *     <Text variant=\"titleMedium\">Title Medium</Text>\n *     <Text variant=\"titleSmall\">Title Small</Text>\n *\n *     <Text variant=\"bodyLarge\">Body Large</Text>\n *     <Text variant=\"bodyMedium\">Body Medium</Text>\n *     <Text variant=\"bodySmall\">Body Small</Text>\n *\n *     <Text variant=\"labelLarge\">Label Large</Text>\n *     <Text variant=\"labelMedium\">Label Medium</Text>\n *     <Text variant=\"labelSmall\">Label Small</Text>\n *  </>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\n\nconst Text: React.ForwardRefRenderFunction<{}, Props> = (\n  { style, variant, theme: initialTheme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n  // FIXME: destructure it in TS 4.6+\n  const theme = useInternalTheme(initialTheme);\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  if (theme.isV3 && variant) {\n    const stylesByVariant = Object.keys(MD3TypescaleKey).reduce(\n      (acc, key) => {\n        const { fontSize, fontWeight, lineHeight, letterSpacing, fontFamily } =\n          theme.fonts[key as keyof typeof MD3TypescaleKey];\n\n        return {\n          ...acc,\n          [key]: {\n            fontFamily,\n            fontSize,\n            fontWeight,\n            lineHeight,\n            letterSpacing,\n            color: theme.colors.onSurface,\n          },\n        };\n      },\n      {} as {\n        [key in MD3TypescaleKey]: {\n          fontSize: number;\n          fontWeight: Font['fontWeight'];\n          lineHeight: number;\n          letterSpacing: number;\n        };\n      }\n    );\n\n    const styleForVariant = stylesByVariant[variant];\n\n    return (\n      <NativeText\n        ref={root}\n        style={[styleForVariant, styles.text, { writingDirection }, style]}\n        {...rest}\n      />\n    );\n  } else {\n    const font = theme.isV3 ? theme.fonts.default : theme.fonts?.regular;\n    const textStyle = {\n      ...font,\n      color: theme.isV3 ? theme.colors?.onSurface : theme.colors.text,\n    };\n    return (\n      <NativeText\n        {...rest}\n        ref={root}\n        style={[styles.text, textStyle, { writingDirection }, style]}\n      />\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default React.forwardRef(Text);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import*as React from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{initialWindowMetrics,SafeAreaInsetsContext,SafeAreaProvider}from'react-native-safe-area-context';var _Dimensions$get=Dimensions.get('window'),_Dimensions$get$width=_Dimensions$get.width,width=_Dimensions$get$width===void 0?0:_Dimensions$get$width,_Dimensions$get$heigh=_Dimensions$get.height,height=_Dimensions$get$heigh===void 0?0:_Dimensions$get$heigh;var initialMetrics=Platform.OS==='web'||initialWindowMetrics==null?{frame:{x:0,y:0,width:width,height:height},insets:{top:0,left:0,right:0,bottom:0}}:initialWindowMetrics;export default function SafeAreaProviderCompat(_ref){var children=_ref.children,style=_ref.style;return React.createElement(SafeAreaInsetsContext.Consumer,null,function(insets){if(insets){return React.createElement(View,{style:[styles.container,style]},children);}return React.createElement(SafeAreaProvider,{initialMetrics:initialMetrics,style:style},children);});}SafeAreaProviderCompat.initialMetrics=initialMetrics;var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["SafeAreaProviderCompat.tsx"],"names":["React","initialWindowMetrics","SafeAreaInsetsContext","SafeAreaProvider","width","height","Dimensions","get","initialMetrics","Platform","OS","frame","x","y","insets","top","left","right","bottom","SafeAreaProviderCompat","children","style","styles","container","StyleSheet","create","flex"],"mappings":"AAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,oPAS9B,OACEC,oBAAoB,CACpBC,qBAAqB,CACrBC,gBAAgB,KACX,gCAAgC,CAOvC,oBAAkCG,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,uCAAlDH,KAAK,CAALA,KAAK,gCAAG,CAAC,6DAAEC,MAAM,CAANA,MAAM,gCAAG,CAAA,uBAK5B,GAAMG,eAAc,CAClBC,QAAQ,CAACC,EAAE,GAAK,KAAK,EAAIT,oBAAoB,EAAI,IAAI,CACjD,CACEU,KAAK,CAAE,CAAEC,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,CAAET,KAAK,CAALA,KAAK,CAAEC,MAAAA,CAAAA,MAAO,CAAC,CACpCS,MAAM,CAAE,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CACjD,CAAC,CACDjB,oBAAoB,CAE1B,cAAe,SAASkB,uBAAsB,CAAA,IAAA,CAA6B,CAA5B,GAAEC,SAAQ,CAAgB,IAAA,CAAxBA,QAAQ,CAAEC,KAAAA,CAAc,IAAA,CAAdA,KAAAA,CACzD,MACE,MAAA,CAAA,aAAA,CAAC,qBAAqB,CAAC,QAAQ,CAAA,IAAA,CAC3BP,SAAAA,MAAM,CAAK,CACX,GAAIA,MAAM,CAAE,CAIV,MAAO,MAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CAAC,KAAK,CAAE,CAACQ,MAAM,CAACC,SAAS,CAAEF,KAAK,CAAE,CAAA,CAAED,QAAQ,CAAQ,CAClE,CAEA,MACE,MAAA,CAAA,aAAA,CAAC,gBAAgB,CAAA,CAAC,cAAc,CAAEZ,cAAe,CAAC,KAAK,CAAEa,KAAM,CAAA,CAC5DD,QAAQ,CACQ,CAEvB,CAAC,CAC8B,CAErC,CAEAD,sBAAsB,CAACX,cAAc,CAAGA,cAAc,CAEtD,GAAMc,OAAM,CAAGE,UAAU,CAACC,MAAM,CAAC,CAC/BF,SAAS,CAAE,CACTG,IAAI,CAAE,CACR,CACF,CAAC,CAAC","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { Dimensions, Platform, StyleSheet, View } from 'react-native';\nimport { initialWindowMetrics, SafeAreaInsetsContext, SafeAreaProvider } from 'react-native-safe-area-context';\nconst {\n  width = 0,\n  height = 0\n} = Dimensions.get('window');\n\n// To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\nconst initialMetrics = Platform.OS === 'web' || initialWindowMetrics == null ? {\n  frame: {\n    x: 0,\n    y: 0,\n    width,\n    height\n  },\n  insets: {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n} : initialWindowMetrics;\nexport default function SafeAreaProviderCompat(_ref) {\n  let {\n    children,\n    style\n  } = _ref;\n  return /*#__PURE__*/React.createElement(SafeAreaInsetsContext.Consumer, null, insets => {\n    if (insets) {\n      // If we already have insets, don't wrap the stack in another safe area provider\n      // This avoids an issue with updates at the cost of potentially incorrect values\n      // https://github.com/react-navigation/react-navigation/issues/174\n      return /*#__PURE__*/React.createElement(View, {\n        style: [styles.container, style]\n      }, children);\n    }\n    return /*#__PURE__*/React.createElement(SafeAreaProvider, {\n      initialMetrics: initialMetrics,\n      style: style\n    }, children);\n  });\n}\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n//# sourceMappingURL=SafeAreaProviderCompat.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"dark\",\"style\",\"theme\",\"mode\",\"elevated\",\"safeAreaInsets\"],_excluded2=[\"backgroundColor\",\"elevation\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{withInternalTheme}from\"../../core/theming\";import Surface from\"../Surface\";import AppbarAction from\"./AppbarAction\";import AppbarBackAction from\"./AppbarBackAction\";import AppbarContent from\"./AppbarContent\";import AppbarHeader from\"./AppbarHeader\";import{DEFAULT_APPBAR_HEIGHT,getAppbarColor,modeAppbarHeight,renderAppbarContent}from\"./utils\";var Appbar=function Appbar(_ref){var children=_ref.children,dark=_ref.dark,style=_ref.style,theme=_ref.theme,_ref$mode=_ref.mode,mode=_ref$mode===void 0?'small':_ref$mode,elevated=_ref.elevated,safeAreaInsets=_ref.safeAreaInsets,rest=_objectWithoutProperties(_ref,_excluded);var isV3=theme.isV3;var _ref2=StyleSheet.flatten(style)||{},customBackground=_ref2.backgroundColor,_ref2$elevation=_ref2.elevation,elevation=_ref2$elevation===void 0?isV3?elevated?2:0:4:_ref2$elevation,restStyle=_objectWithoutProperties(_ref2,_excluded2);var isDark;var backgroundColor=getAppbarColor(theme,elevation,customBackground,elevated);var isMode=function isMode(modeToCompare){return isV3&&mode===modeToCompare;};if(typeof dark==='boolean'){isDark=dark;}else{isDark=backgroundColor==='transparent'?false:typeof backgroundColor==='string'?!color(backgroundColor).isLight():true;}var isV3CenterAlignedMode=isV3&&isMode('center-aligned');var shouldCenterContent=false;var shouldAddLeftSpacing=false;var shouldAddRightSpacing=false;if(!isV3&&Platform.OS==='ios'||isV3CenterAlignedMode){var hasAppbarContent=false;var leftItemsCount=0;var rightItemsCount=0;React.Children.forEach(children,function(child){if(React.isValidElement(child)){if(child.type===AppbarContent){hasAppbarContent=true;}else if(hasAppbarContent){rightItemsCount++;}else{leftItemsCount++;}}});shouldCenterContent=hasAppbarContent&&leftItemsCount<2&&rightItemsCount<(isV3?3:2);shouldAddLeftSpacing=shouldCenterContent&&leftItemsCount===0;shouldAddRightSpacing=shouldCenterContent&&rightItemsCount===0;}var filterAppbarActions=React.useCallback(function(){var isLeading=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return React.Children.toArray(children).filter(function(child){return isLeading?child.props.isLeading:!child.props.isLeading;});},[children]);var spacingStyle=isV3?styles.v3Spacing:styles.spacing;var insets={paddingBottom:safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.bottom,paddingTop:safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.top,paddingLeft:safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.left,paddingRight:safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.right};return React.createElement(Surface,_extends({style:[{backgroundColor:backgroundColor},styles.appbar,{height:isV3?modeAppbarHeight[mode]:DEFAULT_APPBAR_HEIGHT},insets,restStyle,!theme.isV3&&{elevation:elevation}],elevation:elevation},rest),shouldAddLeftSpacing?React.createElement(View,{style:spacingStyle}):null,(!isV3||isMode('small')||isMode('center-aligned'))&&renderAppbarContent({children:children,isDark:isDark,isV3:isV3,shouldCenterContent:isV3CenterAlignedMode||shouldCenterContent}),(isMode('medium')||isMode('large'))&&React.createElement(View,{style:[styles.columnContainer,isMode('center-aligned')&&styles.centerAlignedContainer]},React.createElement(View,{style:styles.controlsRow},renderAppbarContent({children:children,isDark:isDark,isV3:isV3,renderOnly:[AppbarBackAction],mode:mode}),renderAppbarContent({children:filterAppbarActions(true),isDark:isDark,isV3:isV3,renderOnly:[AppbarAction],mode:mode}),React.createElement(View,{style:styles.rightActionControls},renderAppbarContent({children:filterAppbarActions(false),isDark:isDark,isV3:isV3,renderExcept:[Appbar,AppbarBackAction,AppbarContent,AppbarHeader],mode:mode}))),renderAppbarContent({children:children,isDark:isDark,isV3:isV3,renderOnly:[AppbarContent],mode:mode})),shouldAddRightSpacing?React.createElement(View,{style:spacingStyle}):null);};var styles=StyleSheet.create({appbar:{flexDirection:'row',alignItems:'center',paddingHorizontal:4},spacing:{width:48},v3Spacing:{width:52},controlsRow:{flex:1,flexDirection:'row',alignItems:'center',justifyContent:'space-between'},rightActionControls:{flexDirection:'row',flex:1,justifyContent:'flex-end'},columnContainer:{flexDirection:'column',flex:1,paddingTop:8},centerAlignedContainer:{paddingTop:0}});export default withInternalTheme(Appbar);var AppbarWithTheme=withInternalTheme(Appbar);export{AppbarWithTheme as Appbar};","map":{"version":3,"mappings":"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","names":["React","color","withInternalTheme","Surface","AppbarAction","AppbarBackAction","AppbarContent","AppbarHeader","DEFAULT_APPBAR_HEIGHT","getAppbarColor","modeAppbarHeight","renderAppbarContent","Appbar","_ref","children","dark","style","theme","mode","elevated","safeAreaInsets","rest","isV3","StyleSheet","flatten","customBackground","backgroundColor","elevation","restStyle","isDark","isMode","modeToCompare","isLight","isV3CenterAlignedMode","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","Platform","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","filterAppbarActions","useCallback","isLeading","toArray","filter","props","spacingStyle","styles","v3Spacing","spacing","insets","paddingBottom","bottom","paddingTop","top","paddingLeft","left","paddingRight","right","appbar","height","View","columnContainer","centerAlignedContainer","controlsRow","renderOnly","rightActionControls","renderExcept","create","flexDirection","alignItems","paddingHorizontal","width","flex","justifyContent","AppbarWithTheme"],"sources":["Appbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme, MD3Elevation } from '../../types';\nimport Surface from '../Surface';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\nimport AppbarContent from './AppbarContent';\nimport AppbarHeader from './AppbarHeader';\nimport {\n  AppbarModes,\n  DEFAULT_APPBAR_HEIGHT,\n  getAppbarColor,\n  modeAppbarHeight,\n  renderAppbarContent,\n} from './utils';\n\nexport type Props = Partial<React.ComponentPropsWithRef<typeof View>> & {\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.ReactNode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the Appbar.\n   * - `small` - Appbar with default height (64).\n   * - `medium` - Appbar with medium height (112).\n   * - `large` - Appbar with large height (152).\n   * - `center-aligned` - Appbar with default height and center-aligned title.\n   */\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether Appbar background should have the elevation along with primary color pigment.\n   */\n  elevated?: boolean;\n  /**\n   * Safe area insets for the Appbar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   */\n  safeAreaInsets?: {\n    bottom?: number;\n    top?: number;\n    left?: number;\n    right?: number;\n  };\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/appbar.png\" />\n * </div>\n *\n * ## Usage\n * ### Top bar\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Appbar.Header>\n *     <Appbar.BackAction onPress={() => {}} />\n *     <Appbar.Content title=\"Title\" />\n *     <Appbar.Action icon=\"calendar\" onPress={() => {}} />\n *     <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *   </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * ### Bottom bar\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Appbar, FAB, useTheme } from 'react-native-paper';\n * import { useSafeAreaInsets } from 'react-native-safe-area-context';\n *\n * const BOTTOM_APPBAR_HEIGHT = 80;\n * const MEDIUM_FAB_HEIGHT = 56;\n *\n * const MyComponent = () => {\n *   const { bottom } = useSafeAreaInsets();\n *   const theme = useTheme();\n *\n *   return (\n *     <Appbar\n *       style={[\n *         styles.bottom,\n *         {\n *           height: BOTTOM_APPBAR_HEIGHT + bottom,\n *           backgroundColor: theme.colors.elevation.level2,\n *         },\n *       ]}\n *       safeAreaInsets={{ bottom }}\n *     >\n *       <Appbar.Action icon=\"archive\" onPress={() => {}} />\n *       <Appbar.Action icon=\"email\" onPress={() => {}} />\n *       <Appbar.Action icon=\"label\" onPress={() => {}} />\n *       <Appbar.Action icon=\"delete\" onPress={() => {}} />\n *       <FAB\n *         mode=\"flat\"\n *         size=\"medium\"\n *         icon=\"plus\"\n *         onPress={() => {}}\n *         style={[\n *           styles.fab,\n *           { top: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2 },\n *         ]}\n *       />\n *     </Appbar>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     backgroundColor: 'aquamarine',\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n *   fab: {\n *     position: 'absolute',\n *     right: 16,\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Appbar = ({\n  children,\n  dark,\n  style,\n  theme,\n  mode = 'small',\n  elevated,\n  safeAreaInsets,\n  ...rest\n}: Props) => {\n  const { isV3 } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = isV3 ? (elevated ? 2 : 0) : 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = getAppbarColor(\n    theme,\n    elevation,\n    customBackground,\n    elevated\n  );\n\n  const isMode = (modeToCompare: AppbarModes) => {\n    return isV3 && mode === modeToCompare;\n  };\n\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : typeof backgroundColor === 'string'\n        ? !color(backgroundColor).isLight()\n        : true;\n  }\n\n  const isV3CenterAlignedMode = isV3 && isMode('center-aligned');\n\n  let shouldCenterContent = false;\n  let shouldAddLeftSpacing = false;\n  let shouldAddRightSpacing = false;\n  if ((!isV3 && Platform.OS === 'ios') || isV3CenterAlignedMode) {\n    let hasAppbarContent = false;\n    let leftItemsCount = 0;\n    let rightItemsCount = 0;\n\n    React.Children.forEach(children, (child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n\n    shouldCenterContent =\n      hasAppbarContent &&\n      leftItemsCount < 2 &&\n      rightItemsCount < (isV3 ? 3 : 2);\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n\n  const filterAppbarActions = React.useCallback(\n    (isLeading = false) =>\n      React.Children.toArray(children).filter((child) =>\n        // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n        isLeading ? child.props.isLeading : !child.props.isLeading\n      ),\n    [children]\n  );\n\n  const spacingStyle = isV3 ? styles.v3Spacing : styles.spacing;\n\n  const insets = {\n    paddingBottom: safeAreaInsets?.bottom,\n    paddingTop: safeAreaInsets?.top,\n    paddingLeft: safeAreaInsets?.left,\n    paddingRight: safeAreaInsets?.right,\n  };\n\n  return (\n    <Surface\n      style={[\n        { backgroundColor },\n        styles.appbar,\n        {\n          height: isV3 ? modeAppbarHeight[mode] : DEFAULT_APPBAR_HEIGHT,\n        },\n        insets,\n        restStyle,\n        !theme.isV3 && { elevation },\n      ]}\n      elevation={elevation as MD3Elevation}\n      {...rest}\n    >\n      {shouldAddLeftSpacing ? <View style={spacingStyle} /> : null}\n      {(!isV3 || isMode('small') || isMode('center-aligned')) &&\n        renderAppbarContent({\n          children,\n          isDark,\n          isV3,\n          shouldCenterContent: isV3CenterAlignedMode || shouldCenterContent,\n        })}\n      {(isMode('medium') || isMode('large')) && (\n        <View\n          style={[\n            styles.columnContainer,\n            isMode('center-aligned') && styles.centerAlignedContainer,\n          ]}\n        >\n          {/* Appbar top row with controls */}\n          <View style={styles.controlsRow}>\n            {/* Left side of row container, can contain AppbarBackAction or AppbarAction if it's leading icon  */}\n            {renderAppbarContent({\n              children,\n              isDark,\n              isV3,\n              renderOnly: [AppbarBackAction],\n              mode,\n            })}\n            {renderAppbarContent({\n              children: filterAppbarActions(true),\n              isDark,\n              isV3,\n              renderOnly: [AppbarAction],\n              mode,\n            })}\n            {/* Right side of row container, can contain other AppbarAction if they are not leading icons */}\n            <View style={styles.rightActionControls}>\n              {renderAppbarContent({\n                children: filterAppbarActions(false),\n                isDark,\n                isV3,\n                renderExcept: [\n                  Appbar,\n                  AppbarBackAction,\n                  AppbarContent,\n                  AppbarHeader,\n                ],\n                mode,\n              })}\n            </View>\n          </View>\n          {/* Middle of the row, can contain only AppbarContent */}\n          {renderAppbarContent({\n            children,\n            isDark,\n            isV3,\n            renderOnly: [AppbarContent],\n            mode,\n          })}\n        </View>\n      )}\n      {shouldAddRightSpacing ? <View style={spacingStyle} /> : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  appbar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n  v3Spacing: {\n    width: 52,\n  },\n  controlsRow: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  rightActionControls: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n  columnContainer: {\n    flexDirection: 'column',\n    flex: 1,\n    paddingTop: 8,\n  },\n  centerAlignedContainer: {\n    paddingTop: 0,\n  },\n});\n\nexport default withInternalTheme(Appbar);\n\n// @component-docs ignore-next-line\nconst AppbarWithTheme = withInternalTheme(Appbar);\n// @component-docs ignore-next-line\nexport { AppbarWithTheme as Appbar };\n"]},"metadata":{},"sourceType":"module"}
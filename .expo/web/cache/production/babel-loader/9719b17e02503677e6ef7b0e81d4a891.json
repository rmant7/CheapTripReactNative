{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"route\",\"style\",\"children\",\"borderless\",\"centered\",\"rippleColor\"],_excluded2=[\"component\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{useSafeAreaInsets}from'react-native-safe-area-context';import{withInternalTheme}from\"../../core/theming\";import overlay from\"../../styles/overlay\";import{black,white}from\"../../styles/themes/v2/colors\";import useAnimatedValue from\"../../utils/useAnimatedValue\";import useAnimatedValueArray from\"../../utils/useAnimatedValueArray\";import useIsKeyboardShown from\"../../utils/useIsKeyboardShown\";import useLayout from\"../../utils/useLayout\";import Badge from\"../Badge\";import Icon from\"../Icon\";import Surface from\"../Surface\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import BottomNavigationRouteScreen from\"./BottomNavigationRouteScreen\";var MIN_RIPPLE_SCALE=0.001;var MIN_TAB_WIDTH=96;var MAX_TAB_WIDTH=168;var BAR_HEIGHT=56;var FAR_FAR_AWAY=Platform.OS==='web'?0:9999;var OUTLINE_WIDTH=64;var Touchable=function Touchable(_ref){var _0=_ref.route,style=_ref.style,children=_ref.children,borderless=_ref.borderless,centered=_ref.centered,rippleColor=_ref.rippleColor,rest=_objectWithoutProperties(_ref,_excluded);return TouchableRipple.supported?React.createElement(TouchableRipple,_extends({},rest,{disabled:rest.disabled||undefined,borderless:borderless,centered:centered,rippleColor:rippleColor,style:style}),children):React.createElement(TouchableWithoutFeedback,rest,React.createElement(View,{style:style},children));};var SceneComponent=React.memo(function(_ref2){var component=_ref2.component,rest=_objectWithoutProperties(_ref2,_excluded2);return React.createElement(component,rest);});var BottomNavigation=function BottomNavigation(_ref3){var _safeAreaInsets$left,_safeAreaInsets$right,_safeAreaInsets$botto;var navigationState=_ref3.navigationState,renderScene=_ref3.renderScene,renderIcon=_ref3.renderIcon,renderLabel=_ref3.renderLabel,_ref3$renderTouchable=_ref3.renderTouchable,renderTouchable=_ref3$renderTouchable===void 0?function(props){return React.createElement(Touchable,props);}:_ref3$renderTouchable,_ref3$getLabelText=_ref3.getLabelText,getLabelText=_ref3$getLabelText===void 0?function(_ref4){var route=_ref4.route;return route.title;}:_ref3$getLabelText,_ref3$getBadge=_ref3.getBadge,getBadge=_ref3$getBadge===void 0?function(_ref5){var route=_ref5.route;return route.badge;}:_ref3$getBadge,_ref3$getColor=_ref3.getColor,getColor=_ref3$getColor===void 0?function(_ref6){var route=_ref6.route;return route.color;}:_ref3$getColor,_ref3$getAccessibilit=_ref3.getAccessibilityLabel,getAccessibilityLabel=_ref3$getAccessibilit===void 0?function(_ref7){var route=_ref7.route;return route.accessibilityLabel;}:_ref3$getAccessibilit,_ref3$getTestID=_ref3.getTestID,getTestID=_ref3$getTestID===void 0?function(_ref8){var route=_ref8.route;return route.testID;}:_ref3$getTestID,activeColor=_ref3.activeColor,inactiveColor=_ref3.inactiveColor,_ref3$keyboardHidesNa=_ref3.keyboardHidesNavigationBar,keyboardHidesNavigationBar=_ref3$keyboardHidesNa===void 0?Platform.OS==='android':_ref3$keyboardHidesNa,barStyle=_ref3.barStyle,_ref3$labeled=_ref3.labeled,labeled=_ref3$labeled===void 0?true:_ref3$labeled,style=_ref3.style,theme=_ref3.theme,_ref3$sceneAnimationE=_ref3.sceneAnimationEnabled,sceneAnimationEnabled=_ref3$sceneAnimationE===void 0?false:_ref3$sceneAnimationE,_ref3$sceneAnimationT=_ref3.sceneAnimationType,sceneAnimationType=_ref3$sceneAnimationT===void 0?'opacity':_ref3$sceneAnimationT,sceneAnimationEasing=_ref3.sceneAnimationEasing,onTabPress=_ref3.onTabPress,onIndexChange=_ref3.onIndexChange,_ref3$shifting=_ref3.shifting,shifting=_ref3$shifting===void 0?theme.isV3?false:navigationState.routes.length>3:_ref3$shifting,safeAreaInsets=_ref3.safeAreaInsets,_ref3$labelMaxFontSiz=_ref3.labelMaxFontSizeMultiplier,labelMaxFontSizeMultiplier=_ref3$labelMaxFontSiz===void 0?1:_ref3$labelMaxFontSiz,_ref3$compact=_ref3.compact,compact=_ref3$compact===void 0?!theme.isV3:_ref3$compact,_ref3$testID=_ref3.testID,testID=_ref3$testID===void 0?'bottom-navigation':_ref3$testID,_ref3$getLazy=_ref3.getLazy,getLazy=_ref3$getLazy===void 0?function(_ref9){var route=_ref9.route;return route.lazy;}:_ref3$getLazy;var _useSafeAreaInsets=useSafeAreaInsets(),bottom=_useSafeAreaInsets.bottom,left=_useSafeAreaInsets.left,right=_useSafeAreaInsets.right;var scale=theme.animation.scale;if(shifting&&navigationState.routes.length<2){shifting=false;console.warn('BottomNavigation needs at least 2 tabs to run shifting animation');}var focusedKey=navigationState.routes[navigationState.index].key;var visibleAnim=useAnimatedValue(1);var tabsAnims=useAnimatedValueArray(navigationState.routes.map(function(_,i){return i===navigationState.index?1:0;}));var tabsPositionAnims=useAnimatedValueArray(navigationState.routes.map(function(_,i){return i===navigationState.index?0:i>=navigationState.index?1:-1;}));var offsetsAnims=useAnimatedValueArray(navigationState.routes.map(function(_,i){return i===navigationState.index?0:1;}));var indexAnim=useAnimatedValue(navigationState.index);var rippleAnim=useAnimatedValue(MIN_RIPPLE_SCALE);var _useLayout=useLayout(),_useLayout2=_slicedToArray(_useLayout,2),layout=_useLayout2[0],onLayout=_useLayout2[1];var _React$useState=React.useState([focusedKey]),_React$useState2=_slicedToArray(_React$useState,2),loaded=_React$useState2[0],setLoaded=_React$useState2[1];if(!loaded.includes(focusedKey)){setLoaded(function(loaded){return[].concat(_toConsumableArray(loaded),[focusedKey]);});}var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),keyboardVisible=_React$useState4[0],setKeyboardVisible=_React$useState4[1];var handleKeyboardShow=React.useCallback(function(){setKeyboardVisible(true);Animated.timing(visibleAnim,{toValue:0,duration:150*scale,useNativeDriver:true}).start();},[scale,visibleAnim]);var handleKeyboardHide=React.useCallback(function(){Animated.timing(visibleAnim,{toValue:1,duration:100*scale,useNativeDriver:true}).start(function(){setKeyboardVisible(false);});},[scale,visibleAnim]);var animateToIndex=React.useCallback(function(index){rippleAnim.setValue(MIN_RIPPLE_SCALE);Animated.parallel([Animated.timing(rippleAnim,{toValue:1,duration:theme.isV3||shifting?400*scale:0,useNativeDriver:true})].concat(_toConsumableArray(navigationState.routes.map(function(_,i){return Animated.timing(tabsAnims[i],{toValue:i===index?1:0,duration:theme.isV3||shifting?150*scale:0,useNativeDriver:true,easing:sceneAnimationEasing});})),_toConsumableArray(navigationState.routes.map(function(_,i){return Animated.timing(tabsPositionAnims[i],{toValue:i===index?0:i>=index?1:-1,duration:theme.isV3||shifting?150*scale:0,useNativeDriver:true,easing:sceneAnimationEasing});})))).start(function(_ref10){var finished=_ref10.finished;tabsAnims.map(function(tab,i){return tab.setValue(i===index?1:0);});indexAnim.setValue(index);rippleAnim.setValue(MIN_RIPPLE_SCALE);if(finished){offsetsAnims.forEach(function(offset,i){if(i===index){offset.setValue(0);}else{offset.setValue(1);}});}});},[indexAnim,shifting,navigationState.routes,offsetsAnims,rippleAnim,scale,tabsAnims,tabsPositionAnims,sceneAnimationEasing,theme]);React.useEffect(function(){animateToIndex(navigationState.index);},[]);useIsKeyboardShown({onShow:handleKeyboardShow,onHide:handleKeyboardHide});var prevNavigationState=React.useRef();React.useEffect(function(){offsetsAnims.forEach(function(offset,i){var _prevNavigationState$;if(i===navigationState.index||i===((_prevNavigationState$=prevNavigationState.current)===null||_prevNavigationState$===void 0?void 0:_prevNavigationState$.index)){offset.setValue(0);}});animateToIndex(navigationState.index);},[navigationState.index,animateToIndex,offsetsAnims]);var handleTabPress=function handleTabPress(index){var event={route:navigationState.routes[index],defaultPrevented:false,preventDefault:function preventDefault(){event.defaultPrevented=true;}};onTabPress===null||onTabPress===void 0?void 0:onTabPress(event);if(event.defaultPrevented){return;}if(index!==navigationState.index){onIndexChange(index);}};var jumpTo=React.useCallback(function(key){var index=navigationState.routes.findIndex(function(route){return route.key===key;});onIndexChange(index);},[navigationState.routes,onIndexChange]);var routes=navigationState.routes;var colors=theme.colors,isDarkTheme=theme.dark,mode=theme.mode,isV3=theme.isV3;var _ref12=StyleSheet.flatten(barStyle)||{},customBackground=_ref12.backgroundColor,_ref12$elevation=_ref12.elevation,elevation=_ref12$elevation===void 0?4:_ref12$elevation;var approxBackgroundColor=customBackground?customBackground:isDarkTheme&&mode==='adaptive'?overlay(elevation,colors===null||colors===void 0?void 0:colors.surface):colors===null||colors===void 0?void 0:colors.primary;var v2BackgroundColorInterpolation=shifting?indexAnim.interpolate({inputRange:routes.map(function(_,i){return i;}),outputRange:routes.map(function(route){return getColor({route:route})||approxBackgroundColor;})}):approxBackgroundColor;var backgroundColor=isV3?customBackground||theme.colors.elevation.level2:shifting?v2BackgroundColorInterpolation:approxBackgroundColor;var isDark=typeof approxBackgroundColor==='string'?!color(approxBackgroundColor).isLight():true;var textColor=isDark?white:black;var activeTintColor=typeof activeColor!=='undefined'?activeColor:isV3?theme.colors.onSecondaryContainer:textColor;var inactiveTintColor=typeof inactiveColor!=='undefined'?inactiveColor:isV3?theme.colors.onSurfaceVariant:color(textColor).alpha(0.5).rgb().string();var touchColor=color(activeColor||activeTintColor).alpha(0.12).rgb().string();var maxTabWidth=routes.length>3?MIN_TAB_WIDTH:MAX_TAB_WIDTH;var maxTabBarWidth=maxTabWidth*routes.length;var tabBarWidth=Math.min(layout.width,maxTabBarWidth);var tabWidth=tabBarWidth/routes.length;var rippleSize=layout.width/4;var insets={left:(_safeAreaInsets$left=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.left)!==null&&_safeAreaInsets$left!==void 0?_safeAreaInsets$left:left,right:(_safeAreaInsets$right=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.right)!==null&&_safeAreaInsets$right!==void 0?_safeAreaInsets$right:right,bottom:(_safeAreaInsets$botto=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.bottom)!==null&&_safeAreaInsets$botto!==void 0?_safeAreaInsets$botto:bottom};return React.createElement(View,{style:[styles.container,style],testID:testID},React.createElement(View,{style:[styles.content,{backgroundColor:colors===null||colors===void 0?void 0:colors.background}]},routes.map(function(route,index){if(getLazy({route:route})!==false&&!loaded.includes(route.key)){return null;}var focused=navigationState.index===index;var opacity=sceneAnimationEnabled?tabsPositionAnims[index].interpolate({inputRange:[-1,0,1],outputRange:[0,1,0]}):focused?1:0;var top=sceneAnimationEnabled?offsetsAnims[index].interpolate({inputRange:[0,1],outputRange:[0,FAR_FAR_AWAY]}):focused?0:FAR_FAR_AWAY;var left=sceneAnimationType==='shifting'?tabsPositionAnims[index].interpolate({inputRange:[-1,0,1],outputRange:[-50,0,50]}):0;var zIndex=focused?1:0;return React.createElement(BottomNavigationRouteScreen,{key:route.key,pointerEvents:focused?'auto':'none',accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',index:index,visibility:opacity,style:[StyleSheet.absoluteFill,{zIndex:zIndex}],collapsable:false,removeClippedSubviews:Platform.OS==='ios'?navigationState.index!==index:true},React.createElement(Animated.View,_extends({},Platform.OS==='android'&&{needsOffscreenAlphaCompositing:sceneAnimationEnabled},{renderToHardwareTextureAndroid:sceneAnimationEnabled,style:[styles.content,{opacity:opacity,transform:[{translateX:left},{translateY:top}]}]}),renderScene({route:route,jumpTo:jumpTo})));})),React.createElement(Surface,_extends({},theme.isV3&&{elevation:0},{style:[!theme.isV3&&{elevation:4},styles.bar,keyboardHidesNavigationBar?{transform:[{translateY:visibleAnim.interpolate({inputRange:[0,1],outputRange:[layout.height,0]})}],position:keyboardVisible?'absolute':null}:null,barStyle],pointerEvents:layout.measured?keyboardHidesNavigationBar&&keyboardVisible?'none':'auto':'none',onLayout:onLayout}),React.createElement(Animated.View,{style:[styles.barContent,{backgroundColor:backgroundColor}],testID:testID+\"-bar-content\"},React.createElement(View,{style:[styles.items,{marginBottom:insets.bottom,marginHorizontal:Math.max(insets.left,insets.right)},compact&&{maxWidth:maxTabBarWidth}],accessibilityRole:'tablist'},shifting?React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.ripple,{top:(BAR_HEIGHT-rippleSize)/2,left:tabWidth*(navigationState.index+0.5)-rippleSize/2,height:rippleSize,width:rippleSize,borderRadius:rippleSize/2,backgroundColor:getColor({route:routes[navigationState.index]}),transform:[{scale:rippleAnim.interpolate({inputRange:[0,1],outputRange:[0,8]})}],opacity:rippleAnim.interpolate({inputRange:[0,MIN_RIPPLE_SCALE,0.3,1],outputRange:[0,0,1,1]})}]}):null,routes.map(function(route,index){var focused=navigationState.index===index;var active=tabsAnims[index];var scale=labeled&&shifting?active.interpolate({inputRange:[0,1],outputRange:[0.5,1]}):1;var translateY=labeled?shifting?active.interpolate({inputRange:[0,1],outputRange:[7,0]}):0:7;var activeOpacity=active;var inactiveOpacity=active.interpolate({inputRange:[0,1],outputRange:[1,0]});var v3ActiveOpacity=focused?1:0;var v3InactiveOpacity=shifting?inactiveOpacity:focused?0:1;var outlineScale=focused?active.interpolate({inputRange:[0,1],outputRange:[0.5,1]}):0;var badge=getBadge({route:route});var activeLabelColor=!isV3?activeTintColor:focused?theme.colors.onSurface:theme.colors.onSurfaceVariant;var inactiveLabelColor=!isV3?inactiveTintColor:focused?theme.colors.onSurface:theme.colors.onSurfaceVariant;var badgeStyle={top:!isV3?-2:typeof badge==='boolean'?4:2,right:(badge!=null&&typeof badge!=='boolean'?String(badge).length*-2:0)-(!isV3?2:0)};var isV3Shifting=isV3&&shifting&&labeled;var font=isV3?theme.fonts.labelMedium:{};return renderTouchable({key:route.key,route:route,borderless:true,centered:true,rippleColor:isV3?'transparent':touchColor,onPress:function onPress(){return handleTabPress(index);},testID:getTestID({route:route}),accessibilityLabel:getAccessibilityLabel({route:route}),accessibilityRole:Platform.OS==='ios'?'button':'tab',accessibilityState:{selected:focused},style:[styles.item,isV3&&styles.v3Item],children:React.createElement(View,{pointerEvents:\"none\",style:isV3&&(labeled?styles.v3TouchableContainer:styles.v3NoLabelContainer)},React.createElement(Animated.View,{style:[styles.iconContainer,isV3&&styles.v3IconContainer,(!isV3||isV3Shifting)&&{transform:[{translateY:translateY}]}]},isV3&&focused&&React.createElement(Animated.View,{style:[styles.outline,{transform:[{scaleX:outlineScale}],backgroundColor:theme.colors.secondaryContainer}]}),React.createElement(Animated.View,{style:[styles.iconWrapper,isV3&&styles.v3IconWrapper,{opacity:isV3?v3ActiveOpacity:activeOpacity}]},renderIcon?renderIcon({route:route,focused:true,color:activeTintColor}):React.createElement(Icon,{source:route.focusedIcon,color:activeTintColor,size:24})),React.createElement(Animated.View,{style:[styles.iconWrapper,isV3&&styles.v3IconWrapper,{opacity:isV3?v3InactiveOpacity:inactiveOpacity}]},renderIcon?renderIcon({route:route,focused:false,color:inactiveTintColor}):React.createElement(Icon,{source:theme.isV3&&route.unfocusedIcon!==undefined?route.unfocusedIcon:route.focusedIcon,color:inactiveTintColor,size:24})),React.createElement(View,{style:[styles.badgeContainer,badgeStyle]},typeof badge==='boolean'?React.createElement(Badge,{visible:badge,size:isV3?6:8}):React.createElement(Badge,{visible:badge!=null,size:16},badge))),labeled?React.createElement(Animated.View,{style:[styles.labelContainer,!isV3&&{transform:[{scale:scale}]}]},React.createElement(Animated.View,{style:[styles.labelWrapper,(!isV3||isV3Shifting)&&{opacity:activeOpacity}]},renderLabel?renderLabel({route:route,focused:true,color:activeLabelColor}):React.createElement(Text,{maxFontSizeMultiplier:labelMaxFontSizeMultiplier,variant:\"labelMedium\",style:[styles.label,_objectSpread({color:activeLabelColor},font)]},getLabelText({route:route}))),shifting?null:React.createElement(Animated.View,{style:[styles.labelWrapper,{opacity:inactiveOpacity}]},renderLabel?renderLabel({route:route,focused:false,color:inactiveLabelColor}):React.createElement(Text,{maxFontSizeMultiplier:labelMaxFontSizeMultiplier,variant:\"labelMedium\",selectable:false,style:[styles.label,_objectSpread({color:inactiveLabelColor},font)]},getLabelText({route:route})))):!isV3&&React.createElement(View,{style:styles.labelContainer}))});})))));};BottomNavigation.SceneMap=function(scenes){return function(_ref11){var route=_ref11.route,jumpTo=_ref11.jumpTo;return React.createElement(SceneComponent,{key:route.key,component:scenes[route.key?route.key:''],route:route,jumpTo:jumpTo});};};export default withInternalTheme(BottomNavigation);var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},content:{flex:1},bar:{left:0,right:0,bottom:0},barContent:{alignItems:'center',overflow:'hidden'},items:_objectSpread({flexDirection:'row'},Platform.OS==='web'?{width:'100%'}:null),item:{flex:1,paddingVertical:6},v3Item:{paddingVertical:0},ripple:{position:'absolute'},iconContainer:{height:24,width:24,marginTop:2,marginHorizontal:12,alignSelf:'center'},v3IconContainer:{height:32,width:32,marginBottom:4,marginTop:0,justifyContent:'center'},iconWrapper:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{alignItems:'center'}),v3IconWrapper:{top:4},labelContainer:{height:16,paddingBottom:2},labelWrapper:_objectSpread({},StyleSheet.absoluteFillObject),label:_objectSpread({fontSize:12,height:BAR_HEIGHT,textAlign:'center',backgroundColor:'transparent'},Platform.OS==='web'?{whiteSpace:'nowrap',alignSelf:'center'}:null),badgeContainer:{position:'absolute',left:0},v3TouchableContainer:{paddingTop:12,paddingBottom:16},v3NoLabelContainer:{height:80,justifyContent:'center',alignItems:'center'},outline:{width:OUTLINE_WIDTH,height:OUTLINE_WIDTH/2,borderRadius:OUTLINE_WIDTH/4,alignSelf:'center'}});","map":{"version":3,"sources":["BottomNavigation.tsx"],"names":["React","color","useSafeAreaInsets","withInternalTheme","overlay","black","white","useAnimatedValue","useAnimatedValueArray","useIsKeyboardShown","useLayout","Badge","Icon","Surface","TouchableRipple","Text","BottomNavigationRouteScreen","MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","FAR_FAR_AWAY","Platform","OS","OUTLINE_WIDTH","Touchable","route","_0","style","children","borderless","centered","rippleColor","rest","supported","disabled","undefined","SceneComponent","memo","component","createElement","BottomNavigation","navigationState","renderScene","renderIcon","renderLabel","renderTouchable","props","getLabelText","title","getBadge","badge","getColor","getAccessibilityLabel","accessibilityLabel","getTestID","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","barStyle","labeled","theme","sceneAnimationEnabled","sceneAnimationType","sceneAnimationEasing","onTabPress","onIndexChange","shifting","isV3","routes","length","safeAreaInsets","labelMaxFontSizeMultiplier","compact","getLazy","lazy","bottom","left","right","scale","animation","console","warn","focusedKey","index","key","visibleAnim","tabsAnims","map","_","i","tabsPositionAnims","offsetsAnims","indexAnim","rippleAnim","layout","onLayout","loaded","setLoaded","useState","includes","keyboardVisible","setKeyboardVisible","handleKeyboardShow","useCallback","Animated","timing","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToIndex","setValue","parallel","easing","finished","tab","forEach","offset","useEffect","onShow","onHide","prevNavigationState","useRef","current","handleTabPress","event","defaultPrevented","preventDefault","jumpTo","findIndex","colors","dark","isDarkTheme","mode","backgroundColor","customBackground","elevation","StyleSheet","flatten","approxBackgroundColor","surface","primary","v2BackgroundColorInterpolation","interpolate","inputRange","outputRange","level2","isDark","isLight","textColor","activeTintColor","onSecondaryContainer","inactiveTintColor","onSurfaceVariant","alpha","rgb","string","touchColor","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","min","width","tabWidth","rippleSize","insets","styles","container","content","background","focused","opacity","top","zIndex","absoluteFill","needsOffscreenAlphaCompositing","transform","translateX","translateY","bar","height","position","measured","barContent","items","marginBottom","marginHorizontal","max","maxWidth","ripple","borderRadius","active","activeOpacity","inactiveOpacity","v3ActiveOpacity","v3InactiveOpacity","outlineScale","activeLabelColor","onSurface","inactiveLabelColor","badgeStyle","String","isV3Shifting","font","fonts","labelMedium","onPress","accessibilityRole","accessibilityState","selected","item","v3Item","v3TouchableContainer","v3NoLabelContainer","iconContainer","v3IconContainer","outline","scaleX","secondaryContainer","iconWrapper","v3IconWrapper","focusedIcon","unfocusedIcon","badgeContainer","labelContainer","labelWrapper","label","SceneMap","scenes","create","flex","overflow","alignItems","flexDirection","paddingVertical","marginTop","alignSelf","justifyContent","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace","paddingTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  EasingFunction,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { withInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\nimport useAnimatedValue from '../../utils/useAnimatedValue';\nimport useAnimatedValueArray from '../../utils/useAnimatedValueArray';\nimport useIsKeyboardShown from '../../utils/useIsKeyboardShown';\nimport useLayout from '../../utils/useLayout';\nimport Badge from '../Badge';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport BottomNavigationRouteScreen from './BottomNavigationRouteScreen';\n\ntype Route = {\n  key: string;\n  title?: string;\n  focusedIcon?: IconSource;\n  unfocusedIcon?: IconSource;\n  badge?: string | number | boolean;\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n  lazy?: boolean;\n};\n\ntype NavigationState = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps = TouchableWithoutFeedbackProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: string;\n};\n\nexport type Props = {\n  /**\n   * Whether the shifting style is used, the active tab icon shifts up to show the label and the inactive tabs won't have a label.\n   *\n   * By default, this is `false` with theme version 3 and `true` when you have more than 3 tabs.\n   * Pass `shifting={false}` to explicitly disable this animation, or `shifting={true}` to always use this animation.\n   * Note that you need at least 2 tabs be able to run this animation.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * Whether tabs should be spread across the entire width.\n   */\n  compact?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number representing the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `focusedIcon`:  icon to use as the focused tab icon, can be a string, an image source or a react component @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * - `unfocusedIcon`:  icon to use as the unfocused tab icon, can be a string, an image source or a react component @supported Available in v5.x with theme version 3\n   * - `color`: color to use as background color for shifting bottom navigation @deprecated Deprecated in v5.x\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n   *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n   *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n   *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState;\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => void;\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => React.ReactNode | null;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `TouchableWithoutFeedback` with `View` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps) => React.ReactNode;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get lazy for the current screen. Uses true by default.\n   */\n  getLazy?: (props: { route: Route }) => boolean | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * Whether animation is enabled for scenes transitions in `shifting` mode.\n   * By default, the scenes cross-fade during tab change when `shifting` is enabled.\n   * Specify `sceneAnimationEnabled` as `false` to disable the animation.\n   */\n  sceneAnimationEnabled?: boolean;\n  /**\n   * The scene animation effect. Specify `'shifting'` for a different effect.\n   * By default, 'opacity' will be used.\n   */\n  sceneAnimationType?: 'opacity' | 'shifting';\n  /**\n   * The scene animation Easing.\n   */\n  sceneAnimationEasing?: EasingFunction | undefined;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Safe area insets for the tab bar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   * The bottom insets for iOS is added by default. You can override the behavior with this option.\n   */\n  safeAreaInsets?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  };\n  /**\n   * Style for the bottom navigation bar.  You can pass a custom background color here:\n   *\n   * ```js\n   * barStyle={{ backgroundColor: '#694fad' }}\n   * ```\n   */\n  barStyle?: StyleProp<ViewStyle>;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\nconst OUTLINE_WIDTH = 64;\n\nconst Touchable = ({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}: TouchableProps) =>\n  TouchableRipple.supported ? (\n    <TouchableRipple\n      {...rest}\n      disabled={rest.disabled || undefined}\n      borderless={borderless}\n      centered={centered}\n      rippleColor={rippleColor}\n      style={style}\n    >\n      {children}\n    </TouchableRipple>\n  ) : (\n    <TouchableWithoutFeedback {...rest}>\n      <View style={style}>{children}</View>\n    </TouchableWithoutFeedback>\n  );\n\nconst SceneComponent = React.memo(({ component, ...rest }: any) =>\n  React.createElement(component, rest)\n);\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tabs](https://github.com/react-navigation/react-navigation/tree/main/packages/material-bottom-tabs) and consult [createMaterialBottomTabNavigator](https://reactnavigation.org/docs/material-bottom-tab-navigator/) documentation.\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark InternalTheme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * const NotificationsRoute = () => <Text>Notifications</Text>;\n *\n * const MyComponent = () => {\n *   const [index, setIndex] = React.useState(0);\n *   const [routes] = React.useState([\n *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n *   ]);\n *\n *   const renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *     notifications: NotificationsRoute,\n *   });\n *\n *   return (\n *     <BottomNavigation\n *       navigationState={{ index, routes }}\n *       onIndexChange={setIndex}\n *       renderScene={renderScene}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst BottomNavigation = ({\n  navigationState,\n  renderScene,\n  renderIcon,\n  renderLabel,\n  renderTouchable = (props: TouchableProps) => <Touchable {...props} />,\n  getLabelText = ({ route }: { route: Route }) => route.title,\n  getBadge = ({ route }: { route: Route }) => route.badge,\n  getColor = ({ route }: { route: Route }) => route.color,\n  getAccessibilityLabel = ({ route }: { route: Route }) =>\n    route.accessibilityLabel,\n  getTestID = ({ route }: { route: Route }) => route.testID,\n  activeColor,\n  inactiveColor,\n  keyboardHidesNavigationBar = Platform.OS === 'android',\n  barStyle,\n  labeled = true,\n  style,\n  theme,\n  sceneAnimationEnabled = false,\n  sceneAnimationType = 'opacity',\n  sceneAnimationEasing,\n  onTabPress,\n  onIndexChange,\n  shifting = theme.isV3 ? false : navigationState.routes.length > 3,\n  safeAreaInsets,\n  labelMaxFontSizeMultiplier = 1,\n  compact = !theme.isV3,\n  testID = 'bottom-navigation',\n  getLazy = ({ route }: { route: Route }) => route.lazy,\n}: Props) => {\n  const { bottom, left, right } = useSafeAreaInsets();\n  const { scale } = theme.animation;\n\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n\n    console.warn(\n      'BottomNavigation needs at least 2 tabs to run shifting animation'\n    );\n  }\n\n  const focusedKey = navigationState.routes[navigationState.index].key;\n\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  const visibleAnim = useAnimatedValue(1);\n\n  /**\n   * Active state of individual tab items, active state is 1 and inactive state is 0.\n   */\n  const tabsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // focused === 1, unfocused === 0\n      (_, i) => (i === navigationState.index ? 1 : 0)\n    )\n  );\n\n  /**\n   * Active state of individual tab item positions:\n   * -1 if they're before the active tab, 0 if they're active, 1 if they're after the active tab\n   */\n  const tabsPositionAnims = useAnimatedValueArray(\n    navigationState.routes.map((_, i) =>\n      i === navigationState.index ? 0 : i >= navigationState.index ? 1 : -1\n    )\n  );\n\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecessary re-renders.\n   */\n  const offsetsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // offscreen === 1, normal === 0\n      (_, i) => (i === navigationState.index ? 0 : 1)\n    )\n  );\n\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * We don't use the color as an animated value directly, because `setValue` seems to be buggy with colors?.\n   */\n  const indexAnim = useAnimatedValue(navigationState.index);\n\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  const rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  const [layout, onLayout] = useLayout();\n\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  const [loaded, setLoaded] = React.useState<string[]>([focusedKey]);\n\n  if (!loaded.includes(focusedKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded((loaded) => [...loaded, focusedKey]);\n  }\n\n  /**\n   * Track whether the keyboard is visible to show and hide the navigation bar.\n   */\n  const [keyboardVisible, setKeyboardVisible] = React.useState(false);\n\n  const handleKeyboardShow = React.useCallback(() => {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [scale, visibleAnim]);\n\n  const handleKeyboardHide = React.useCallback(() => {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(() => {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n\n  const animateToIndex = React.useCallback(\n    (index: number) => {\n      // Reset the ripple to avoid glitch if it's currently animating\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      Animated.parallel([\n        Animated.timing(rippleAnim, {\n          toValue: 1,\n          duration: theme.isV3 || shifting ? 400 * scale : 0,\n          useNativeDriver: true,\n        }),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsAnims[i], {\n            toValue: i === index ? 1 : 0,\n            duration: theme.isV3 || shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n            easing: sceneAnimationEasing,\n          })\n        ),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsPositionAnims[i], {\n            toValue: i === index ? 0 : i >= index ? 1 : -1,\n            duration: theme.isV3 || shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n            easing: sceneAnimationEasing,\n          })\n        ),\n      ]).start(({ finished }) => {\n        // Workaround a bug in native animations where this is reset after first animation\n        tabsAnims.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n        // Update the index to change bar's background color and then hide the ripple\n        indexAnim.setValue(index);\n        rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n        if (finished) {\n          // Position all inactive screens offscreen to save memory usage\n          // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n          offsetsAnims.forEach((offset, i) => {\n            if (i === index) {\n              offset.setValue(0);\n            } else {\n              offset.setValue(1);\n            }\n          });\n        }\n      });\n    },\n    [\n      indexAnim,\n      shifting,\n      navigationState.routes,\n      offsetsAnims,\n      rippleAnim,\n      scale,\n      tabsAnims,\n      tabsPositionAnims,\n      sceneAnimationEasing,\n      theme,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide,\n  });\n\n  const prevNavigationState = React.useRef<NavigationState>();\n\n  React.useEffect(() => {\n    // Reset offsets of previous and current tabs before animation\n    offsetsAnims.forEach((offset, i) => {\n      if (\n        i === navigationState.index ||\n        i === prevNavigationState.current?.index\n      ) {\n        offset.setValue(0);\n      }\n    });\n\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n\n  const handleTabPress = (index: number) => {\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n    };\n\n    onTabPress?.(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationState.routes.findIndex(\n        (route) => route.key === key\n      );\n\n      onIndexChange(index);\n    },\n    [navigationState.routes, onIndexChange]\n  );\n\n  const { routes } = navigationState;\n  const { colors, dark: isDarkTheme, mode, isV3 } = theme;\n\n  const { backgroundColor: customBackground, elevation = 4 }: ViewStyle =\n    StyleSheet.flatten(barStyle) || {};\n\n  const approxBackgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors?.surface)\n    : colors?.primary;\n\n  const v2BackgroundColorInterpolation = shifting\n    ? indexAnim.interpolate({\n        inputRange: routes.map((_, i) => i),\n        // FIXME: does outputRange support ColorValue or just strings?\n        // @ts-expect-error\n        outputRange: routes.map(\n          (route) => getColor({ route }) || approxBackgroundColor\n        ),\n      })\n    : approxBackgroundColor;\n\n  const backgroundColor = isV3\n    ? customBackground || theme.colors.elevation.level2\n    : shifting\n    ? v2BackgroundColorInterpolation\n    : approxBackgroundColor;\n\n  const isDark =\n    typeof approxBackgroundColor === 'string'\n      ? !color(approxBackgroundColor).isLight()\n      : true;\n\n  const textColor = isDark ? white : black;\n\n  const activeTintColor =\n    typeof activeColor !== 'undefined'\n      ? activeColor\n      : isV3\n      ? theme.colors.onSecondaryContainer\n      : textColor;\n\n  const inactiveTintColor =\n    typeof inactiveColor !== 'undefined'\n      ? inactiveColor\n      : isV3\n      ? theme.colors.onSurfaceVariant\n      : color(textColor).alpha(0.5).rgb().string();\n\n  const touchColor = color(activeColor || activeTintColor)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  const maxTabBarWidth = maxTabWidth * routes.length;\n\n  const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n  const tabWidth = tabBarWidth / routes.length;\n\n  const rippleSize = layout.width / 4;\n\n  const insets = {\n    left: safeAreaInsets?.left ?? left,\n    right: safeAreaInsets?.right ?? right,\n    bottom: safeAreaInsets?.bottom ?? bottom,\n  };\n\n  return (\n    <View style={[styles.container, style]} testID={testID}>\n      <View style={[styles.content, { backgroundColor: colors?.background }]}>\n        {routes.map((route, index) => {\n          if (getLazy({ route }) !== false && !loaded.includes(route.key)) {\n            // Don't render a screen if we've never navigated to it\n            return null;\n          }\n\n          const focused = navigationState.index === index;\n\n          const opacity = sceneAnimationEnabled\n            ? tabsPositionAnims[index].interpolate({\n                inputRange: [-1, 0, 1],\n                outputRange: [0, 1, 0],\n              })\n            : focused\n            ? 1\n            : 0;\n\n          const top = sceneAnimationEnabled\n            ? offsetsAnims[index].interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, FAR_FAR_AWAY],\n              })\n            : focused\n            ? 0\n            : FAR_FAR_AWAY;\n\n          const left =\n            sceneAnimationType === 'shifting'\n              ? tabsPositionAnims[index].interpolate({\n                  inputRange: [-1, 0, 1],\n                  outputRange: [-50, 0, 50],\n                })\n              : 0;\n\n          const zIndex = focused ? 1 : 0;\n\n          return (\n            <BottomNavigationRouteScreen\n              key={route.key}\n              pointerEvents={focused ? 'auto' : 'none'}\n              accessibilityElementsHidden={!focused}\n              importantForAccessibility={\n                focused ? 'auto' : 'no-hide-descendants'\n              }\n              index={index}\n              visibility={opacity}\n              style={[StyleSheet.absoluteFill, { zIndex }]}\n              collapsable={false}\n              removeClippedSubviews={\n                // On iOS, set removeClippedSubviews to true only when not focused\n                // This is an workaround for a bug where the clipped view never re-appears\n                Platform.OS === 'ios' ? navigationState.index !== index : true\n              }\n            >\n              <Animated.View\n                {...(Platform.OS === 'android' && {\n                  needsOffscreenAlphaCompositing: sceneAnimationEnabled,\n                })}\n                renderToHardwareTextureAndroid={sceneAnimationEnabled}\n                style={[\n                  styles.content,\n                  {\n                    opacity: opacity,\n                    transform: [{ translateX: left }, { translateY: top }],\n                  },\n                ]}\n              >\n                {renderScene({ route, jumpTo })}\n              </Animated.View>\n            </BottomNavigationRouteScreen>\n          );\n        })}\n      </View>\n      <Surface\n        {...(theme.isV3 && { elevation: 0 })}\n        style={\n          [\n            !theme.isV3 && { elevation: 4 },\n            styles.bar,\n            keyboardHidesNavigationBar\n              ? {\n                  // When the keyboard is shown, slide down the navigation bar\n                  transform: [\n                    {\n                      translateY: visibleAnim.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layout.height, 0],\n                      }),\n                    },\n                  ],\n                  // Absolutely position the navigation bar so that the content is below it\n                  // This is needed to avoid gap at bottom when the navigation bar is hidden\n                  position: keyboardVisible ? 'absolute' : null,\n                }\n              : null,\n            barStyle,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={\n          layout.measured\n            ? keyboardHidesNavigationBar && keyboardVisible\n              ? 'none'\n              : 'auto'\n            : 'none'\n        }\n        onLayout={onLayout}\n      >\n        <Animated.View\n          style={[styles.barContent, { backgroundColor }]}\n          testID={`${testID}-bar-content`}\n        >\n          <View\n            style={[\n              styles.items,\n              {\n                marginBottom: insets.bottom,\n                marginHorizontal: Math.max(insets.left, insets.right),\n              },\n              compact && {\n                maxWidth: maxTabBarWidth,\n              },\n            ]}\n            accessibilityRole={'tablist'}\n          >\n            {shifting ? (\n              <Animated.View\n                pointerEvents=\"none\"\n                style={[\n                  styles.ripple,\n                  {\n                    // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                    // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                    top: (BAR_HEIGHT - rippleSize) / 2,\n                    left:\n                      tabWidth * (navigationState.index + 0.5) - rippleSize / 2,\n                    height: rippleSize,\n                    width: rippleSize,\n                    borderRadius: rippleSize / 2,\n                    backgroundColor: getColor({\n                      route: routes[navigationState.index],\n                    }),\n                    transform: [\n                      {\n                        // Scale to twice the size  to ensure it covers the whole navigation bar\n                        scale: rippleAnim.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [0, 8],\n                        }),\n                      },\n                    ],\n                    opacity: rippleAnim.interpolate({\n                      inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                      outputRange: [0, 0, 1, 1],\n                    }),\n                  },\n                ]}\n              />\n            ) : null}\n            {routes.map((route, index) => {\n              const focused = navigationState.index === index;\n              const active = tabsAnims[index];\n\n              // Scale the label up\n              const scale =\n                labeled && shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [0.5, 1],\n                    })\n                  : 1;\n\n              // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n              const translateY = labeled\n                ? shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [7, 0],\n                    })\n                  : 0\n                : 7;\n\n              // We render the active icon and label on top of inactive ones and cross-fade them on change.\n              // This trick gives the illusion that we are animating between active and inactive colors.\n              // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n              const activeOpacity = active;\n              const inactiveOpacity = active.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              });\n\n              const v3ActiveOpacity = focused ? 1 : 0;\n              const v3InactiveOpacity = shifting\n                ? inactiveOpacity\n                : focused\n                ? 0\n                : 1;\n\n              // Scale horizontally the outline pill\n              const outlineScale = focused\n                ? active.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.5, 1],\n                  })\n                : 0;\n\n              const badge = getBadge({ route });\n\n              const activeLabelColor = !isV3\n                ? activeTintColor\n                : focused\n                ? theme.colors.onSurface\n                : theme.colors.onSurfaceVariant;\n\n              const inactiveLabelColor = !isV3\n                ? inactiveTintColor\n                : focused\n                ? theme.colors.onSurface\n                : theme.colors.onSurfaceVariant;\n\n              const badgeStyle = {\n                top: !isV3 ? -2 : typeof badge === 'boolean' ? 4 : 2,\n                right:\n                  (badge != null && typeof badge !== 'boolean'\n                    ? String(badge).length * -2\n                    : 0) - (!isV3 ? 2 : 0),\n              };\n\n              const isV3Shifting = isV3 && shifting && labeled;\n\n              const font = isV3 ? theme.fonts.labelMedium : {};\n\n              return renderTouchable({\n                key: route.key,\n                route,\n                borderless: true,\n                centered: true,\n                rippleColor: isV3 ? 'transparent' : touchColor,\n                onPress: () => handleTabPress(index),\n                testID: getTestID({ route }),\n                accessibilityLabel: getAccessibilityLabel({ route }),\n                accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n                accessibilityState: { selected: focused },\n                style: [styles.item, isV3 && styles.v3Item],\n                children: (\n                  <View\n                    pointerEvents=\"none\"\n                    style={\n                      isV3 &&\n                      (labeled\n                        ? styles.v3TouchableContainer\n                        : styles.v3NoLabelContainer)\n                    }\n                  >\n                    <Animated.View\n                      style={[\n                        styles.iconContainer,\n                        isV3 && styles.v3IconContainer,\n                        (!isV3 || isV3Shifting) && {\n                          transform: [{ translateY }],\n                        },\n                      ]}\n                    >\n                      {isV3 && focused && (\n                        <Animated.View\n                          style={[\n                            styles.outline,\n                            {\n                              transform: [\n                                {\n                                  scaleX: outlineScale,\n                                },\n                              ],\n                              backgroundColor: theme.colors.secondaryContainer,\n                            },\n                          ]}\n                        />\n                      )}\n                      <Animated.View\n                        style={[\n                          styles.iconWrapper,\n                          isV3 && styles.v3IconWrapper,\n                          { opacity: isV3 ? v3ActiveOpacity : activeOpacity },\n                        ]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: true,\n                            color: activeTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={route.focusedIcon as IconSource}\n                            color={activeTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <Animated.View\n                        style={[\n                          styles.iconWrapper,\n                          isV3 && styles.v3IconWrapper,\n                          {\n                            opacity: isV3 ? v3InactiveOpacity : inactiveOpacity,\n                          },\n                        ]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: false,\n                            color: inactiveTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={\n                              theme.isV3 && route.unfocusedIcon !== undefined\n                                ? route.unfocusedIcon\n                                : (route.focusedIcon as IconSource)\n                            }\n                            color={inactiveTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <View style={[styles.badgeContainer, badgeStyle]}>\n                        {typeof badge === 'boolean' ? (\n                          <Badge visible={badge} size={isV3 ? 6 : 8} />\n                        ) : (\n                          <Badge visible={badge != null} size={16}>\n                            {badge}\n                          </Badge>\n                        )}\n                      </View>\n                    </Animated.View>\n                    {labeled ? (\n                      <Animated.View\n                        style={[\n                          styles.labelContainer,\n                          !isV3 && { transform: [{ scale }] },\n                        ]}\n                      >\n                        <Animated.View\n                          style={[\n                            styles.labelWrapper,\n                            (!isV3 || isV3Shifting) && {\n                              opacity: activeOpacity,\n                            },\n                          ]}\n                        >\n                          {renderLabel ? (\n                            renderLabel({\n                              route,\n                              focused: true,\n                              color: activeLabelColor,\n                            })\n                          ) : (\n                            <Text\n                              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n                              variant=\"labelMedium\"\n                              style={[\n                                styles.label,\n                                {\n                                  color: activeLabelColor,\n                                  ...font,\n                                },\n                              ]}\n                            >\n                              {getLabelText({ route })}\n                            </Text>\n                          )}\n                        </Animated.View>\n                        {shifting ? null : (\n                          <Animated.View\n                            style={[\n                              styles.labelWrapper,\n                              { opacity: inactiveOpacity },\n                            ]}\n                          >\n                            {renderLabel ? (\n                              renderLabel({\n                                route,\n                                focused: false,\n                                color: inactiveLabelColor,\n                              })\n                            ) : (\n                              <Text\n                                maxFontSizeMultiplier={\n                                  labelMaxFontSizeMultiplier\n                                }\n                                variant=\"labelMedium\"\n                                selectable={false}\n                                style={[\n                                  styles.label,\n                                  {\n                                    color: inactiveLabelColor,\n                                    ...font,\n                                  },\n                                ]}\n                              >\n                                {getLabelText({ route })}\n                              </Text>\n                            )}\n                          </Animated.View>\n                        )}\n                      </Animated.View>\n                    ) : (\n                      !isV3 && <View style={styles.labelContainer} />\n                    )}\n                  </View>\n                ),\n              });\n            })}\n          </View>\n        </Animated.View>\n      </Surface>\n    </View>\n  );\n};\n\n/**\n * Function which takes a map of route keys to components.\n * Pure components are used to minimize re-rendering of the pages.\n * This drastically improves the animation performance.\n */\nBottomNavigation.SceneMap = (scenes: {\n  [key: string]: React.ComponentType<{\n    route: Route;\n    jumpTo: (key: string) => void;\n  }>;\n}) => {\n  return ({\n    route,\n    jumpTo,\n  }: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => (\n    <SceneComponent\n      key={route.key}\n      component={scenes[route.key ? route.key : '']}\n      route={route}\n      jumpTo={jumpTo}\n    />\n  );\n};\n\nexport default withInternalTheme(BottomNavigation);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    ...(Platform.OS === 'web'\n      ? {\n          width: '100%',\n        }\n      : null),\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  v3Item: {\n    paddingVertical: 0,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  v3IconContainer: {\n    height: 32,\n    width: 32,\n    marginBottom: 4,\n    marginTop: 0,\n    justifyContent: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  v3IconWrapper: {\n    top: 4,\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  label: {\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n          alignSelf: 'center',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  v3TouchableContainer: {\n    paddingTop: 12,\n    paddingBottom: 16,\n  },\n  v3NoLabelContainer: {\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  outline: {\n    width: OUTLINE_WIDTH,\n    height: OUTLINE_WIDTH / 2,\n    borderRadius: OUTLINE_WIDTH / 4,\n    alignSelf: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
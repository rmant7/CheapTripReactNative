{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{nanoid}from'nanoid/non-secure';import*as React from'react';import{SingleNavigatorContext}from\"./EnsureSingleNavigator\";export default function useRegisterNavigator(){var _React$useState=React.useState(function(){return nanoid();}),_React$useState2=_slicedToArray(_React$useState,1),key=_React$useState2[0];var container=React.useContext(SingleNavigatorContext);if(container===undefined){throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\\n\\nThis can also happen if there are multiple copies of '@react-navigation' packages installed.\");}React.useEffect(function(){var register=container.register,unregister=container.unregister;register(key);return function(){return unregister(key);};},[container,key]);return key;}","map":{"version":3,"sources":["useRegisterNavigator.tsx"],"names":["nanoid","React","SingleNavigatorContext","useRegisterNavigator","key","useState","container","useContext","undefined","Error","useEffect","register","unregister"],"mappings":"iEAAA,OAASA,MAAM,KAAQ,mBAAmB,CAC1C,MAAO,GAAKC,MAAK,KAAM,OAAO,CAE9B,OAASC,sBAAsB,+BAM/B,cAAe,SAASC,qBAAoB,EAAG,CAC7C,oBAAcF,KAAK,CAACI,QAAQ,CAAC,iBAAML,OAAM,EAAE,GAAC,oDAArCI,GAAG,qBACV,GAAME,UAAS,CAAGL,KAAK,CAACM,UAAU,CAACL,sBAAsB,CAAC,CAE1D,GAAII,SAAS,GAAKE,SAAS,CAAE,CAC3B,KAAM,IAAIC,MAAK,CACb,wLAAwL,CACzL,CACH,CAEAR,KAAK,CAACS,SAAS,CAAC,UAAM,CACpB,GAAQC,SAAQ,CAAiBL,SAAS,CAAlCK,QAAQ,CAAEC,UAAAA,CAAeN,SAAS,CAAxBM,UAAAA,CAElBD,QAAQ,CAACP,GAAG,CAAC,CAEb,MAAO,kBAAMQ,WAAU,CAACR,GAAG,CAAC,GAC9B,CAAC,CAAE,CAACE,SAAS,CAAEF,GAAG,CAAC,CAAC,CAEpB,MAAOA,IAAG,CACZ","sourceRoot":"../../src","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n  if (container === undefined) {\n    throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\\n\\nThis can also happen if there are multiple copies of '@react-navigation' packages installed.\");\n  }\n  React.useEffect(() => {\n    const {\n      register,\n      unregister\n    } = container;\n    register(key);\n    return () => unregister(key);\n  }, [container, key]);\n  return key;\n}\n//# sourceMappingURL=useRegisterNavigator.js.map"]},"metadata":{},"sourceType":"module"}
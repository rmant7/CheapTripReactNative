{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _createClass from\"@babel/runtime/helpers/createClass\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{getNextHandlerTag}from\"../handlersRegistry\";import{isRemoteDebuggingEnabled}from\"../../utils\";export var CALLBACK_TYPE={UNDEFINED:0,BEGAN:1,START:2,UPDATE:3,CHANGE:4,END:5,FINALIZE:6,TOUCHES_DOWN:7,TOUCHES_MOVE:8,TOUCHES_UP:9,TOUCHES_CANCELLED:10};export var Gesture=_createClass(function Gesture(){_classCallCheck(this,Gesture);});var nextGestureId=0;export var BaseGesture=function(_Gesture){_inherits(BaseGesture,_Gesture);var _super=_createSuper(BaseGesture);function BaseGesture(){var _this;_classCallCheck(this,BaseGesture);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),\"gestureId\",-1);_defineProperty(_assertThisInitialized(_this),\"handlerTag\",-1);_defineProperty(_assertThisInitialized(_this),\"handlerName\",'');_defineProperty(_assertThisInitialized(_this),\"config\",{});_defineProperty(_assertThisInitialized(_this),\"handlers\",{gestureId:-1,handlerTag:-1,isWorklet:[]});_this.gestureId=nextGestureId++;_this.handlers.gestureId=_this.gestureId;return _this;}_createClass(BaseGesture,[{key:\"addDependency\",value:function addDependency(key,gesture){var value=this.config[key];this.config[key]=value?Array().concat(value,gesture):[gesture];}},{key:\"withRef\",value:function withRef(ref){this.config.ref=ref;return this;}},{key:\"isWorklet\",value:function isWorklet(callback){return callback.__workletHash!==undefined;}},{key:\"onBegin\",value:function onBegin(callback){this.handlers.onBegin=callback;this.handlers.isWorklet[CALLBACK_TYPE.BEGAN]=this.isWorklet(callback);return this;}},{key:\"onStart\",value:function onStart(callback){this.handlers.onStart=callback;this.handlers.isWorklet[CALLBACK_TYPE.START]=this.isWorklet(callback);return this;}},{key:\"onEnd\",value:function onEnd(callback){this.handlers.onEnd=callback;this.handlers.isWorklet[CALLBACK_TYPE.END]=this.isWorklet(callback);return this;}},{key:\"onFinalize\",value:function onFinalize(callback){this.handlers.onFinalize=callback;this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE]=this.isWorklet(callback);return this;}},{key:\"onTouchesDown\",value:function onTouchesDown(callback){this.config.needsPointerData=true;this.handlers.onTouchesDown=callback;this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN]=this.isWorklet(callback);return this;}},{key:\"onTouchesMove\",value:function onTouchesMove(callback){this.config.needsPointerData=true;this.handlers.onTouchesMove=callback;this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE]=this.isWorklet(callback);return this;}},{key:\"onTouchesUp\",value:function onTouchesUp(callback){this.config.needsPointerData=true;this.handlers.onTouchesUp=callback;this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP]=this.isWorklet(callback);return this;}},{key:\"onTouchesCancelled\",value:function onTouchesCancelled(callback){this.config.needsPointerData=true;this.handlers.onTouchesCancelled=callback;this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED]=this.isWorklet(callback);return this;}},{key:\"enabled\",value:function enabled(_enabled){this.config.enabled=_enabled;return this;}},{key:\"shouldCancelWhenOutside\",value:function shouldCancelWhenOutside(value){this.config.shouldCancelWhenOutside=value;return this;}},{key:\"hitSlop\",value:function hitSlop(_hitSlop){this.config.hitSlop=_hitSlop;return this;}},{key:\"runOnJS\",value:function runOnJS(_runOnJS){this.config.runOnJS=_runOnJS;return this;}},{key:\"simultaneousWithExternalGesture\",value:function simultaneousWithExternalGesture(){for(var _len=arguments.length,gestures=new Array(_len),_key=0;_key<_len;_key++){gestures[_key]=arguments[_key];}for(var gesture of gestures){this.addDependency('simultaneousWith',gesture);}return this;}},{key:\"requireExternalGestureToFail\",value:function requireExternalGestureToFail(){for(var _len2=arguments.length,gestures=new Array(_len2),_key2=0;_key2<_len2;_key2++){gestures[_key2]=arguments[_key2];}for(var gesture of gestures){this.addDependency('requireToFail',gesture);}return this;}},{key:\"withTestId\",value:function withTestId(id){this.config.testId=id;return this;}},{key:\"cancelsTouchesInView\",value:function cancelsTouchesInView(value){this.config.cancelsTouchesInView=value;return this;}},{key:\"initialize\",value:function initialize(){this.handlerTag=getNextHandlerTag();this.handlers=_objectSpread(_objectSpread({},this.handlers),{},{handlerTag:this.handlerTag});if(this.config.ref){this.config.ref.current=this;}}},{key:\"toGestureArray\",value:function toGestureArray(){return[this];}},{key:\"prepare\",value:function prepare(){}},{key:\"shouldUseReanimated\",get:function get(){return this.config.runOnJS!==true&&!this.handlers.isWorklet.includes(false)&&!isRemoteDebuggingEnabled();}}]);return BaseGesture;}(Gesture);export var ContinousBaseGesture=function(_BaseGesture){_inherits(ContinousBaseGesture,_BaseGesture);var _super2=_createSuper(ContinousBaseGesture);function ContinousBaseGesture(){_classCallCheck(this,ContinousBaseGesture);return _super2.apply(this,arguments);}_createClass(ContinousBaseGesture,[{key:\"onUpdate\",value:function onUpdate(callback){this.handlers.onUpdate=callback;this.handlers.isWorklet[CALLBACK_TYPE.UPDATE]=this.isWorklet(callback);return this;}},{key:\"onChange\",value:function onChange(callback){this.handlers.onChange=callback;this.handlers.isWorklet[CALLBACK_TYPE.CHANGE]=this.isWorklet(callback);return this;}},{key:\"manualActivation\",value:function manualActivation(_manualActivation){this.config.manualActivation=_manualActivation;return this;}}]);return ContinousBaseGesture;}(BaseGesture);","map":{"version":3,"mappings":"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","names":["getNextHandlerTag","isRemoteDebuggingEnabled","CALLBACK_TYPE","UNDEFINED","BEGAN","START","UPDATE","CHANGE","END","FINALIZE","TOUCHES_DOWN","TOUCHES_MOVE","TOUCHES_UP","TOUCHES_CANCELLED","Gesture","nextGestureId","BaseGesture","constructor","_defineProperty","gestureId","handlerTag","isWorklet","handlers","addDependency","key","gesture","value","config","Array","concat","withRef","ref","callback","__workletHash","undefined","onBegin","onStart","onEnd","onFinalize","onTouchesDown","needsPointerData","onTouchesMove","onTouchesUp","onTouchesCancelled","enabled","shouldCancelWhenOutside","hitSlop","runOnJS","simultaneousWithExternalGesture","gestures","requireExternalGestureToFail","withTestId","id","testId","cancelsTouchesInView","initialize","current","toGestureArray","prepare","includes","ContinousBaseGesture","onUpdate","onChange","manualActivation"],"sources":["gesture.ts"],"sourcesContent":["import { FlingGestureHandlerEventPayload } from '../FlingGestureHandler';\nimport { ForceTouchGestureHandlerEventPayload } from '../ForceTouchGestureHandler';\nimport {\n  HitSlop,\n  CommonGestureConfig,\n  GestureTouchEvent,\n  GestureStateChangeEvent,\n  GestureUpdateEvent,\n} from '../gestureHandlerCommon';\nimport { getNextHandlerTag } from '../handlersRegistry';\nimport { GestureStateManagerType } from './gestureStateManager';\nimport { LongPressGestureHandlerEventPayload } from '../LongPressGestureHandler';\nimport { PanGestureHandlerEventPayload } from '../PanGestureHandler';\nimport { PinchGestureHandlerEventPayload } from '../PinchGestureHandler';\nimport { RotationGestureHandlerEventPayload } from '../RotationGestureHandler';\nimport { TapGestureHandlerEventPayload } from '../TapGestureHandler';\nimport { NativeViewGestureHandlerPayload } from '../NativeViewGestureHandler';\nimport { isRemoteDebuggingEnabled } from '../../utils';\n\nexport type GestureType =\n  | BaseGesture<Record<string, unknown>>\n  | BaseGesture<Record<string, never>>\n  | BaseGesture<TapGestureHandlerEventPayload>\n  | BaseGesture<PanGestureHandlerEventPayload>\n  | BaseGesture<LongPressGestureHandlerEventPayload>\n  | BaseGesture<RotationGestureHandlerEventPayload>\n  | BaseGesture<PinchGestureHandlerEventPayload>\n  | BaseGesture<FlingGestureHandlerEventPayload>\n  | BaseGesture<ForceTouchGestureHandlerEventPayload>\n  | BaseGesture<NativeViewGestureHandlerPayload>;\n\nexport type GestureRef =\n  | number\n  | GestureType\n  | React.RefObject<GestureType | undefined>\n  | React.RefObject<React.ComponentType | undefined>; // allow adding a ref to a gesture handler\nexport interface BaseGestureConfig\n  extends CommonGestureConfig,\n    Record<string, unknown> {\n  ref?: React.MutableRefObject<GestureType | undefined>;\n  requireToFail?: GestureRef[];\n  simultaneousWith?: GestureRef[];\n  needsPointerData?: boolean;\n  manualActivation?: boolean;\n  runOnJS?: boolean;\n  testId?: string;\n  cancelsTouchesInView?: boolean;\n}\n\ntype TouchEventHandlerType = (\n  event: GestureTouchEvent,\n  stateManager: GestureStateManagerType\n) => void;\n\nexport type HandlerCallbacks<EventPayloadT extends Record<string, unknown>> = {\n  gestureId: number;\n  handlerTag: number;\n  onBegin?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onStart?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onEnd?: (\n    event: GestureStateChangeEvent<EventPayloadT>,\n    success: boolean\n  ) => void;\n  onFinalize?: (\n    event: GestureStateChangeEvent<EventPayloadT>,\n    success: boolean\n  ) => void;\n  onUpdate?: (event: GestureUpdateEvent<EventPayloadT>) => void;\n  onChange?: (event: any) => void;\n  onTouchesDown?: TouchEventHandlerType;\n  onTouchesMove?: TouchEventHandlerType;\n  onTouchesUp?: TouchEventHandlerType;\n  onTouchesCancelled?: TouchEventHandlerType;\n  changeEventCalculator?: (\n    current: GestureUpdateEvent<Record<string, unknown>>,\n    previous?: GestureUpdateEvent<Record<string, unknown>>\n  ) => GestureUpdateEvent<Record<string, unknown>>;\n  isWorklet: boolean[];\n};\n\nexport const CALLBACK_TYPE = {\n  UNDEFINED: 0,\n  BEGAN: 1,\n  START: 2,\n  UPDATE: 3,\n  CHANGE: 4,\n  END: 5,\n  FINALIZE: 6,\n  TOUCHES_DOWN: 7,\n  TOUCHES_MOVE: 8,\n  TOUCHES_UP: 9,\n  TOUCHES_CANCELLED: 10,\n} as const;\n\n// Allow using CALLBACK_TYPE as object and type\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type CALLBACK_TYPE = typeof CALLBACK_TYPE[keyof typeof CALLBACK_TYPE];\n\nexport abstract class Gesture {\n  /**\n   * Return array of gestures, providing the same interface for creating and updating\n   * handlers, no matter which object was used to create gesture instance.\n   */\n  abstract toGestureArray(): GestureType[];\n\n  /**\n   * Assign handlerTag to the gesture instance and set ref.current (if a ref is set)\n   */\n  abstract initialize(): void;\n\n  /**\n   * Make sure that values of properties defining relations are arrays. Do any necessary\n   * preprocessing required to configure relations between handlers. Called just before\n   * updating the handler on the native side.\n   */\n  abstract prepare(): void;\n}\n\nlet nextGestureId = 0;\nexport abstract class BaseGesture<\n  EventPayloadT extends Record<string, unknown>\n> extends Gesture {\n  private gestureId = -1;\n  public handlerTag = -1;\n  public handlerName = '';\n  public config: BaseGestureConfig = {};\n  public handlers: HandlerCallbacks<EventPayloadT> = {\n    gestureId: -1,\n    handlerTag: -1,\n    isWorklet: [],\n  };\n\n  constructor() {\n    super();\n\n    // Used to check whether the gesture config has been updated when wrapping it\n    // with `useMemo`. Since every config will have a unique id, when the dependencies\n    // don't change, the config won't be recreated and the id will stay the same.\n    // If the id is different, it means that the config has changed and the gesture\n    // needs to be updated.\n    this.gestureId = nextGestureId++;\n    this.handlers.gestureId = this.gestureId;\n  }\n\n  private addDependency(\n    key: 'simultaneousWith' | 'requireToFail',\n    gesture: Exclude<GestureRef, number>\n  ) {\n    const value = this.config[key];\n    this.config[key] = value\n      ? Array<GestureRef>().concat(value, gesture)\n      : [gesture];\n  }\n\n  withRef(ref: React.MutableRefObject<GestureType | undefined>) {\n    this.config.ref = ref;\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  protected isWorklet(callback: Function) {\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    return callback.__workletHash !== undefined;\n  }\n\n  onBegin(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onBegin = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n    return this;\n  }\n\n  onStart(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onStart = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n    return this;\n  }\n\n  onEnd(\n    callback: (\n      event: GestureStateChangeEvent<EventPayloadT>,\n      success: boolean\n    ) => void\n  ) {\n    this.handlers.onEnd = callback;\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n    return this;\n  }\n\n  onFinalize(\n    callback: (\n      event: GestureStateChangeEvent<EventPayloadT>,\n      success: boolean\n    ) => void\n  ) {\n    this.handlers.onFinalize = callback;\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n    return this;\n  }\n\n  onTouchesDown(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesDown = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesMove(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesMove = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesUp(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesUp = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesCancelled(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesCancelled = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  enabled(enabled: boolean) {\n    this.config.enabled = enabled;\n    return this;\n  }\n\n  shouldCancelWhenOutside(value: boolean) {\n    this.config.shouldCancelWhenOutside = value;\n    return this;\n  }\n\n  hitSlop(hitSlop: HitSlop) {\n    this.config.hitSlop = hitSlop;\n    return this;\n  }\n\n  runOnJS(runOnJS: boolean) {\n    this.config.runOnJS = runOnJS;\n    return this;\n  }\n\n  simultaneousWithExternalGesture(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('simultaneousWith', gesture);\n    }\n    return this;\n  }\n\n  requireExternalGestureToFail(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('requireToFail', gesture);\n    }\n    return this;\n  }\n\n  withTestId(id: string) {\n    this.config.testId = id;\n    return this;\n  }\n\n  cancelsTouchesInView(value: boolean) {\n    this.config.cancelsTouchesInView = value;\n    return this;\n  }\n\n  initialize() {\n    this.handlerTag = getNextHandlerTag();\n\n    this.handlers = { ...this.handlers, handlerTag: this.handlerTag };\n\n    if (this.config.ref) {\n      this.config.ref.current = this as GestureType;\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return [this as GestureType];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  prepare() {}\n\n  get shouldUseReanimated(): boolean {\n    // use Reanimated when runOnJS isn't set explicitly,\n    // and all defined callbacks are worklets,\n    // and remote debugging is disabled\n    return (\n      this.config.runOnJS !== true &&\n      !this.handlers.isWorklet.includes(false) &&\n      !isRemoteDebuggingEnabled()\n    );\n  }\n}\n\nexport abstract class ContinousBaseGesture<\n  EventPayloadT extends Record<string, unknown>,\n  EventChangePayloadT extends Record<string, unknown>\n> extends BaseGesture<EventPayloadT> {\n  onUpdate(callback: (event: GestureUpdateEvent<EventPayloadT>) => void) {\n    this.handlers.onUpdate = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<EventPayloadT & EventChangePayloadT>\n    ) => void\n  ) {\n    this.handlers.onChange = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n    return this;\n  }\n\n  manualActivation(manualActivation: boolean) {\n    this.config.manualActivation = manualActivation;\n    return this;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
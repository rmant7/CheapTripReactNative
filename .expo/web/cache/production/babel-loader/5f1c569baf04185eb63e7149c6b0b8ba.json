{"ast":null,"code":"import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import Icon from\"../Icon\";var DialogIcon=function DialogIcon(_ref){var _ref$size=_ref.size,size=_ref$size===void 0?24:_ref$size,color=_ref.color,icon=_ref.icon;var theme=useInternalTheme();if(!theme.isV3){return null;}var iconColor=color||theme.colors.secondary;return React.createElement(View,{style:styles.wrapper},React.createElement(Icon,{source:icon,color:iconColor,size:size}));};DialogIcon.displayName='Dialog.Icon';var styles=StyleSheet.create({wrapper:{alignItems:'center',justifyContent:'center',paddingTop:24}});export default DialogIcon;export{DialogIcon};","map":{"version":3,"sources":["DialogIcon.tsx"],"names":["React","useInternalTheme","Icon","DialogIcon","size","color","icon","theme","isV3","iconColor","colors","secondary","styles","wrapper","displayName","StyleSheet","create","alignItems","justifyContent","paddingTop"],"mappings":"AAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,sHAG9B,OAASC,gBAAgB,0BACzB,MAAOC,KAAI,eA0DX,GAAMC,WAAU,CAAG,QAAbA,WAAU,CAAG,IAAA,CAAuC,CAAtC,cAAiC,IAAA,CAA/BC,IAAI,CAAJA,IAAI,oBAAG,EAAE,WAAEC,KAAK,CAAe,IAAA,CAApBA,KAAK,CAAEC,IAAAA,CAAa,IAAA,CAAbA,IAAAA,CACtC,GAAMC,MAAK,CAAGN,gBAAgB,EAAE,CAEhC,GAAI,CAACM,KAAK,CAACC,IAAI,CAAE,CACf,MAAO,KAAI,CACb,CAGA,GAAMC,UAAS,CAAGJ,KAAK,EAAIE,KAAK,CAACG,MAAM,CAACC,SAAS,CAEjD,MACE,MAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CAAC,KAAK,CAAEC,MAAM,CAACC,OAAQ,CAAA,CAC1B,KAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CAAC,MAAM,CAAEP,IAAK,CAAC,KAAK,CAAEG,SAAU,CAAC,IAAI,CAAEL,IAAK,CAAA,CAAG,CAC/C,CAEX,CAAC,CAEDD,UAAU,CAACW,WAAW,CAAG,aAAa,CAEtC,GAAMF,OAAM,CAAGG,UAAU,CAACC,MAAM,CAAC,CAC/BH,OAAO,CAAE,CACPI,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,EACd,CACF,CAAC,CAAC,CAEF,cAAehB,WAAU,CAGzB,OAASA,UAAU","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport Icon, { IconSource } from '../Icon';\n\nexport type Props = {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n};\n\n/**\n * @supported Available in v5.x with theme version 3\n * A component to show an icon in a Dialog.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/dialog-icon.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Icon icon=\"alert\" />\n *         <Dialog.Title style={styles.title}>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   title: {\n *     textAlign: 'center',\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst DialogIcon = ({ size = 24, color, icon }: Props) => {\n  const theme = useInternalTheme();\n\n  if (!theme.isV3) {\n    return null;\n  }\n\n  //@ts-ignore\n  const iconColor = color || theme.colors.secondary;\n\n  return (\n    <View style={styles.wrapper}>\n      <Icon source={icon} color={iconColor} size={size} />\n    </View>\n  );\n};\n\nDialogIcon.displayName = 'Dialog.Icon';\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 24,\n  },\n});\n\nexport default DialogIcon;\n\n// @component-docs ignore-next-line\nexport { DialogIcon };\n"]},"metadata":{},"sourceType":"module"}
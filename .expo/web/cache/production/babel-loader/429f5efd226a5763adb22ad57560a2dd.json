{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"enabled\",\"layout\",\"style\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";export default React.forwardRef(function CardSheet(_ref,ref){var enabled=_ref.enabled,layout=_ref.layout,style=_ref.style,rest=_objectWithoutProperties(_ref,_excluded);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),fill=_React$useState2[0],setFill=_React$useState2[1];var _React$useState3=React.useState('auto'),_React$useState4=_slicedToArray(_React$useState3,2),pointerEvents=_React$useState4[0],setPointerEvents=_React$useState4[1];React.useImperativeHandle(ref,function(){return{setPointerEvents:setPointerEvents};});React.useEffect(function(){if(typeof document==='undefined'||!document.body){return;}var width=document.body.clientWidth;var height=document.body.clientHeight;setFill(width===layout.width&&height===layout.height);},[layout.height,layout.width]);return React.createElement(View,_extends({},rest,{pointerEvents:pointerEvents,style:[enabled&&fill?styles.page:styles.card,style]}));});var styles=StyleSheet.create({page:{minHeight:'100%'},card:{flex:1,overflow:'hidden'}});","map":{"version":3,"sources":["CardSheet.tsx"],"names":["React","forwardRef","CardSheet","enabled","layout","style","rest","ref","fill","setFill","useState","pointerEvents","setPointerEvents","useImperativeHandle","useEffect","document","body","width","clientWidth","height","clientHeight","styles","page","card","StyleSheet","create","minHeight","flex","overflow"],"mappings":"4eAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,sHAiB9B,cAAeA,MAAK,CAACC,UAAU,CAAsB,QAASC,UAAS,CAAA,IAAA,CAErEK,GAAG,CACH,CAFA,GAAEJ,QAAO,CAA0B,IAAA,CAAjCA,OAAO,CAAEC,MAAM,CAAkB,IAAA,CAAxBA,MAAM,CAAEC,KAAK,CAAW,IAAA,CAAhBA,KAAK,CAAKC,IAAAA,0BAAM,IAAA,YAGnC,oBAAwBN,KAAK,CAACU,QAAQ,CAAC,KAAK,CAAC,oDAAtCF,IAAI,qBAAEC,OAAO,qBAGpB,qBACET,KAAK,CAACU,QAAQ,CAA6B,MAAM,CAAC,qDAD7CC,aAAa,qBAAEC,gBAAgB,qBAGtCZ,KAAK,CAACa,mBAAmB,CAACN,GAAG,CAAE,UAAM,CACnC,MAAO,CAAEK,gBAAAA,CAAAA,gBAAiB,CAAC,CAC7B,CAAC,CAAC,CAEFZ,KAAK,CAACc,SAAS,CAAC,UAAM,CACpB,GAAI,MAAOC,SAAQ,GAAK,WAAW,EAAI,CAACA,QAAQ,CAACC,IAAI,CAAE,CAErD,OACF,CAEA,GAAMC,MAAK,CAAGF,QAAQ,CAACC,IAAI,CAACE,WAAW,CACvC,GAAMC,OAAM,CAAGJ,QAAQ,CAACC,IAAI,CAACI,YAAY,CAEzCX,OAAO,CAACQ,KAAK,GAAKb,MAAM,CAACa,KAAK,EAAIE,MAAM,GAAKf,MAAM,CAACe,MAAM,CAAC,CAC7D,CAAC,CAAE,CAACf,MAAM,CAACe,MAAM,CAAEf,MAAM,CAACa,KAAK,CAAC,CAAC,CAEjC,MACE,MAAA,CAAA,aAAA,CAAC,IAAI,CAAA,QAAA,CAAA,CAAA,CAAA,CACCX,IAAI,CAAA,CACR,aAAa,CAAEK,aAAc,CAC7B,KAAK,CAAE,CAACR,OAAO,EAAIK,IAAI,CAAGa,MAAM,CAACC,IAAI,CAAGD,MAAM,CAACE,IAAI,CAAElB,KAAK,CAAE,CAAA,CAAA,CAC5D,CAEN,CAAC,CAAC,CAEF,GAAMgB,OAAM,CAAGG,UAAU,CAACC,MAAM,CAAC,CAC/BH,IAAI,CAAE,CACJI,SAAS,CAAE,MACb,CAAC,CACDH,IAAI,CAAE,CACJI,IAAI,CAAE,CAAC,CACPC,QAAQ,CAAE,QACZ,CACF,CAAC,CAAC","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// This component will render a page which overflows the screen\n// if the container fills the body by comparing the size\n// This lets the document.body handle scrolling of the content\n// It's necessary for mobile browsers to be able to hide address bar on scroll\nexport default /*#__PURE__*/React.forwardRef(function CardSheet(_ref, ref) {\n  let {\n    enabled,\n    layout,\n    style,\n    ...rest\n  } = _ref;\n  const [fill, setFill] = React.useState(false);\n  // To avoid triggering a rerender in Card during animation we had to move\n  // the state to CardSheet. The `setPointerEvents` is then hoisted back to the Card.\n  const [pointerEvents, setPointerEvents] = React.useState('auto');\n  React.useImperativeHandle(ref, () => {\n    return {\n      setPointerEvents\n    };\n  });\n  React.useEffect(() => {\n    if (typeof document === 'undefined' || !document.body) {\n      // Only run when DOM is available\n      return;\n    }\n    const width = document.body.clientWidth;\n    const height = document.body.clientHeight;\n    setFill(width === layout.width && height === layout.height);\n  }, [layout.height, layout.width]);\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {\n    pointerEvents: pointerEvents,\n    style: [enabled && fill ? styles.page : styles.card, style]\n  }));\n});\nconst styles = StyleSheet.create({\n  page: {\n    minHeight: '100%'\n  },\n  card: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});\n//# sourceMappingURL=CardSheet.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"onPress\",\"style\",\"theme\",\"children\",\"pointerEvents\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{withInternalTheme}from\"../../core/theming\";import{black,white}from\"../../styles/themes/v2/colors\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";var DataTableRow=function DataTableRow(_ref){var onPress=_ref.onPress,style=_ref.style,theme=_ref.theme,children=_ref.children,pointerEvents=_ref.pointerEvents,rest=_objectWithoutProperties(_ref,_excluded);var borderBottomColor=theme.isV3?theme.colors.surfaceVariant:color(theme.dark?white:black).alpha(0.12).rgb().string();return React.createElement(TouchableRipple,_extends({},rest,{onPress:onPress,style:[styles.container,{borderBottomColor:borderBottomColor},style]}),React.createElement(View,{style:styles.content,pointerEvents:pointerEvents},children));};DataTableRow.displayName='DataTable.Row';var styles=StyleSheet.create({container:{borderStyle:'solid',borderBottomWidth:StyleSheet.hairlineWidth,minHeight:48,paddingHorizontal:16},content:{flex:1,flexDirection:'row'}});export default withInternalTheme(DataTableRow);export{DataTableRow};","map":{"version":3,"mappings":"qcAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,uHAU9B,MAAOC,MAAK,KAAM,OAAO,CAEzB,OAASC,iBAAiB,0BAC1B,OAASC,KAAK,CAAEC,KAAK,qCAErB,MAAOC,gBAAe,0CAkDtB,GAAMC,aAAY,CAAG,QAAfA,aAAY,CAAGC,KAOR,IANXC,QAAO,CAMDD,KANNC,OAAO,CACPC,KAAK,CAKCF,KALNE,KAAK,CACLC,KAAK,CAICH,KAJNG,KAAK,CACLC,QAAQ,CAGFJ,KAHNI,QAAQ,CACRC,aAAa,CAEPL,KAFNK,aAAa,CACVC,8BACGN,gBACN,GAAMO,kBAAiB,CAAGJ,KAAK,CAACK,IAAI,CAChCL,KAAK,CAACM,MAAM,CAACC,cAAc,CAC3BhB,KAAK,CAACS,KAAK,CAACQ,IAAI,CAAGd,KAAK,CAAGD,KAAK,CAAC,CAC9BgB,KAAK,CAAC,IAAI,CAAC,CACXC,GAAG,EAAE,CACLC,MAAM,EAAE,CAEf,MACErB,qBAACK,eAAe,aACVQ,IAAI,EACRL,OAAO,CAAEA,OAAQ,CACjBC,KAAK,CAAE,CAACa,MAAM,CAACC,SAAS,CAAE,CAAET,mCAAkB,CAAC,CAAEL,KAAK,CAAE,GAExDT,oBAACwB,IAAI,EAACf,KAAK,CAAEa,MAAM,CAACG,OAAQ,CAACb,aAAa,CAAEA,aAAc,EACvDD,QAAQ,CACJ,CACS,CAEtB,CAAC,CAEDL,YAAY,CAACoB,WAAW,CAAG,eAAe,CAE1C,GAAMJ,OAAM,CAAGK,UAAU,CAACC,MAAM,CAAC,CAC/BL,SAAS,CAAE,CACTM,WAAW,CAAE,OAAO,CACpBC,iBAAiB,CAAEH,UAAU,CAACI,aAAa,CAC3CC,SAAS,CAAE,EAAE,CACbC,iBAAiB,CAAE,EACrB,CAAC,CACDR,OAAO,CAAE,CACPS,IAAI,CAAE,CAAC,CACPC,aAAa,CAAE,KACjB,CACF,CAAC,CAAC,CAEF,cAAejC,kBAAiB,CAACI,YAAY,CAAC,CAG9C,OAASA,YAAY","names":["React","color","withInternalTheme","black","white","TouchableRipple","DataTableRow","_ref","onPress","style","theme","children","pointerEvents","rest","borderBottomColor","isV3","colors","surfaceVariant","dark","alpha","rgb","string","styles","container","View","content","displayName","StyleSheet","create","borderStyle","borderBottomWidth","hairlineWidth","minHeight","paddingHorizontal","flex","flexDirection"],"sources":["DataTableRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * `pointerEvents` passed to the `View` container, which is wrapping children within `TouchableRipple`.\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = ({\n  onPress,\n  style,\n  theme,\n  children,\n  pointerEvents,\n  ...rest\n}: Props) => {\n  const borderBottomColor = theme.isV3\n    ? theme.colors.surfaceVariant\n    : color(theme.dark ? white : black)\n        .alpha(0.12)\n        .rgb()\n        .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content} pointerEvents={pointerEvents}>\n        {children}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nDataTableRow.displayName = 'DataTable.Row';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withInternalTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]},"metadata":{},"sourceType":"module"}
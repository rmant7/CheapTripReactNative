{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"style\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import DataTableCell from\"./DataTableCell\";import DataTableHeader from\"./DataTableHeader\";import DataTablePagination from\"./DataTablePagination\";import DataTableRow from\"./DataTableRow\";import DataTableTitle from\"./DataTableTitle\";var DataTable=function DataTable(_ref){var children=_ref.children,style=_ref.style,rest=_objectWithoutProperties(_ref,_excluded);return React.createElement(View,_extends({},rest,{style:[styles.container,style]}),children);};DataTable.Header=DataTableHeader;DataTable.Title=DataTableTitle;DataTable.Row=DataTableRow;DataTable.Cell=DataTableCell;DataTable.Pagination=DataTablePagination;var styles=StyleSheet.create({container:{width:'100%'}});export default DataTable;","map":{"version":3,"mappings":"maAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,uHAG9B,MAAOC,cAAa,uBACpB,MAAOC,gBAAe,yBAItB,MAAOC,oBAAmB,6BAK1B,MAAOC,aAAY,sBACnB,MAAOC,eAAc,wBA4ErB,GAAMC,UAAS,CAAG,QAAZA,UAAS,CAAGC,SAAGC,SAAQ,CAAyBD,KAAjCC,QAAQ,CAAEC,KAAK,CAAkBF,KAAvBE,KAAK,CAAKC,8BAAaH,sBACpDP,qBAACW,IAAI,aAAKD,IAAI,EAAED,KAAK,CAAE,CAACG,MAAM,CAACC,SAAS,CAAEJ,KAAK,CAAE,GAC9CD,QAAQ,CACJ,EACR,CAGDF,SAAS,CAACQ,MAAM,CAAGZ,eAAe,CAGlCI,SAAS,CAACS,KAAK,CAAGV,cAAc,CAGhCC,SAAS,CAACU,GAAG,CAAGZ,YAAY,CAG5BE,SAAS,CAACW,IAAI,CAAGhB,aAAa,CAG9BK,SAAS,CAACY,UAAU,CAAGf,mBAAmB,CAE1C,GAAMS,OAAM,CAAGO,UAAU,CAACC,MAAM,CAAC,CAC/BP,SAAS,CAAE,CACTQ,KAAK,CAAE,MACT,CACF,CAAC,CAAC,CAEF,cAAef,UAAS","names":["React","DataTableCell","DataTableHeader","DataTablePagination","DataTableRow","DataTableTitle","DataTable","_ref","children","style","rest","View","styles","container","Header","Title","Row","Cell","Pagination","StyleSheet","create","width"],"sources":["DataTable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\nimport DataTableCell from './DataTableCell';\nimport DataTableHeader, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableHeader as _DataTableHeader,\n} from './DataTableHeader';\nimport DataTablePagination, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTablePagination as _DataTablePagination,\n} from './DataTablePagination';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport DataTableRow, { DataTableRow as _DataTableRow } from './DataTableRow';\nimport DataTableTitle, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableTitle as _DataTableTitle,\n} from './DataTableTitle';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTable`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * Data tables allow displaying sets of data.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"large\" src=\"screenshots/data-table.png\" />\n *     <figcaption>Data table</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const optionsPerPage = [2, 3, 4];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState<number>(0);\n *   const [itemsPerPage, setItemsPerPage] = React.useState(optionsPerPage[0]);\n *\n *   React.useEffect(() => {\n *     setPage(0);\n *   }, [itemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Header>\n *         <DataTable.Title>Dessert</DataTable.Title>\n *         <DataTable.Title numeric>Calories</DataTable.Title>\n *         <DataTable.Title numeric>Fat</DataTable.Title>\n *       </DataTable.Header>\n *\n *       <DataTable.Row>\n *         <DataTable.Cell>Frozen yogurt</DataTable.Cell>\n *         <DataTable.Cell numeric>159</DataTable.Cell>\n *         <DataTable.Cell numeric>6.0</DataTable.Cell>\n *       </DataTable.Row>\n *\n *       <DataTable.Row>\n *         <DataTable.Cell>Ice cream sandwich</DataTable.Cell>\n *         <DataTable.Cell numeric>237</DataTable.Cell>\n *         <DataTable.Cell numeric>8.0</DataTable.Cell>\n *       </DataTable.Row>\n *\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={3}\n *         onPageChange={(page) => setPage(page)}\n *         label=\"1-2 of 6\"\n *         optionsPerPage={optionsPerPage}\n *         itemsPerPage={itemsPerPage}\n *         setItemsPerPage={setItemsPerPage}\n *         showFastPagination\n *         optionsLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n *}\n *\n * export default MyComponent;\n * ```\n */\nconst DataTable = ({ children, style, ...rest }: Props) => (\n  <View {...rest} style={[styles.container, style]}>\n    {children}\n  </View>\n);\n\n// @component ./DataTableHeader.tsx\nDataTable.Header = DataTableHeader;\n\n// @component ./DataTableTitle.tsx\nDataTable.Title = DataTableTitle;\n\n// @component ./DataTableRow.tsx\nDataTable.Row = DataTableRow;\n\n// @component ./DataTableCell.tsx\nDataTable.Cell = DataTableCell;\n\n// @component ./DataTablePagination.tsx\nDataTable.Pagination = DataTablePagination;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n  },\n});\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}
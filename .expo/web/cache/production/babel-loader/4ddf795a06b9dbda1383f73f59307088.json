{"ast":null,"code":"import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import overlay from\"../../styles/overlay\";import{black,white}from\"../../styles/themes/v2/colors\";import Tooltip from\"../Tooltip/Tooltip\";import AppbarAction from\"./AppbarAction\";import AppbarBackAction from\"./AppbarBackAction\";import AppbarContent from\"./AppbarContent\";export var getAppbarColor=function getAppbarColor(theme,elevation,customBackground,elevated){var isV3=theme.isV3,isDarkTheme=theme.dark,mode=theme.mode,colors=theme.colors;var isAdaptiveMode=mode==='adaptive';if(customBackground){return customBackground;}if(!isV3){if(isDarkTheme&&isAdaptiveMode){return overlay(elevation,colors===null||colors===void 0?void 0:colors.surface);}return colors.primary;}if(elevated){return theme.colors.elevation.level2;}return colors.surface;};export var DEFAULT_APPBAR_HEIGHT=56;var MD3_DEFAULT_APPBAR_HEIGHT=64;export var modeAppbarHeight={small:MD3_DEFAULT_APPBAR_HEIGHT,medium:112,large:152,'center-aligned':MD3_DEFAULT_APPBAR_HEIGHT};export var modeTextVariant={small:'titleLarge',medium:'headlineSmall',large:'headlineMedium','center-aligned':'titleLarge'};export var renderAppbarContent=function renderAppbarContent(_ref){var children=_ref.children,isDark=_ref.isDark,_ref$shouldCenterCont=_ref.shouldCenterContent,shouldCenterContent=_ref$shouldCenterCont===void 0?false:_ref$shouldCenterCont,isV3=_ref.isV3,renderOnly=_ref.renderOnly,renderExcept=_ref.renderExcept,_ref$mode=_ref.mode,mode=_ref$mode===void 0?'small':_ref$mode;return React.Children.toArray(children).filter(function(child){return child!=null&&typeof child!=='boolean';}).filter(function(child){return renderExcept?!renderExcept.includes(child.type):child;}).filter(function(child){return renderOnly?renderOnly.includes(child.type):child;}).map(function(child,i){if(!React.isValidElement(child)||![AppbarContent,AppbarAction,AppbarBackAction,Tooltip].includes(child.type)){return child;}var props={color:typeof child.props.color!=='undefined'?child.props.color:isV3?undefined:isDark?white:black};if(child.type===AppbarContent){props.mode=mode;props.style=[isV3?i===0&&!shouldCenterContent&&styles.v3Spacing:i!==0&&styles.v2Spacing,shouldCenterContent&&styles.centerAlignedContent,child.props.style];}return React.cloneElement(child,props);});};var styles=StyleSheet.create({centerAlignedContent:{alignItems:'center'},v2Spacing:{marginLeft:8},v3Spacing:{marginLeft:12}});","map":{"version":3,"sources":["utils.ts"],"names":["React","overlay","black","white","Tooltip","AppbarAction","AppbarBackAction","AppbarContent","getAppbarColor","theme","elevation","customBackground","elevated","isV3","dark","isDarkTheme","mode","colors","isAdaptiveMode","surface","primary","level2","DEFAULT_APPBAR_HEIGHT","MD3_DEFAULT_APPBAR_HEIGHT","modeAppbarHeight","small","medium","large","modeTextVariant","renderAppbarContent","children","isDark","shouldCenterContent","renderOnly","renderExcept","Children","toArray","filter","child","includes","type","map","i","isValidElement","props","color","undefined","style","styles","v3Spacing","v2Spacing","centerAlignedContent","cloneElement","StyleSheet","create","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport type { ColorValue, StyleProp, ViewStyle } from 'react-native';\nimport { StyleSheet } from 'react-native';\n\nimport overlay from '../../styles/overlay';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\nimport Tooltip from '../Tooltip/Tooltip';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\nimport AppbarContent from './AppbarContent';\n\nexport type AppbarModes = 'small' | 'medium' | 'large' | 'center-aligned';\n\nexport const getAppbarColor = (\n  theme: InternalTheme,\n  elevation: number,\n  customBackground?: ColorValue,\n  elevated?: boolean\n) => {\n  const { isV3, dark: isDarkTheme, mode, colors } = theme;\n  const isAdaptiveMode = mode === 'adaptive';\n  if (customBackground) {\n    return customBackground;\n  }\n\n  if (!isV3) {\n    if (isDarkTheme && isAdaptiveMode) {\n      return overlay(elevation, colors?.surface);\n    }\n\n    return colors.primary;\n  }\n\n  if (elevated) {\n    return theme.colors.elevation.level2;\n  }\n\n  return colors.surface;\n};\n\ntype RenderAppbarContentProps = {\n  children: React.ReactNode;\n  isDark: boolean;\n  shouldCenterContent?: boolean;\n  isV3: boolean;\n  renderOnly?: React.ComponentType<any>[];\n  renderExcept?: React.ComponentType<any>[];\n  mode?: AppbarModes;\n};\n\nexport const DEFAULT_APPBAR_HEIGHT = 56;\nconst MD3_DEFAULT_APPBAR_HEIGHT = 64;\n\nexport const modeAppbarHeight = {\n  small: MD3_DEFAULT_APPBAR_HEIGHT,\n  medium: 112,\n  large: 152,\n  'center-aligned': MD3_DEFAULT_APPBAR_HEIGHT,\n};\n\nexport const modeTextVariant = {\n  small: 'titleLarge',\n  medium: 'headlineSmall',\n  large: 'headlineMedium',\n  'center-aligned': 'titleLarge',\n};\n\nexport const renderAppbarContent = ({\n  children,\n  isDark,\n  shouldCenterContent = false,\n  isV3,\n  renderOnly,\n  renderExcept,\n  mode = 'small',\n}: RenderAppbarContentProps) => {\n  return (\n    React.Children.toArray(children as React.ReactNode | React.ReactNode[])\n      .filter((child) => child != null && typeof child !== 'boolean')\n      .filter((child) =>\n        // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n        renderExcept ? !renderExcept.includes(child.type) : child\n      )\n      // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n      .filter((child) => (renderOnly ? renderOnly.includes(child.type) : child))\n      .map((child, i) => {\n        if (\n          !React.isValidElement(child) ||\n          ![AppbarContent, AppbarAction, AppbarBackAction, Tooltip].includes(\n            // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n            child.type\n          )\n        ) {\n          return child;\n        }\n\n        const props: {\n          color?: string;\n          style?: StyleProp<ViewStyle>;\n          mode?: AppbarModes;\n        } = {\n          color:\n            typeof child.props.color !== 'undefined'\n              ? child.props.color\n              : isV3\n              ? undefined\n              : isDark\n              ? white\n              : black,\n        };\n\n        if (child.type === AppbarContent) {\n          props.mode = mode;\n          props.style = [\n            isV3\n              ? i === 0 && !shouldCenterContent && styles.v3Spacing\n              : i !== 0 && styles.v2Spacing,\n            shouldCenterContent && styles.centerAlignedContent,\n            child.props.style,\n          ];\n        }\n        return React.cloneElement(child, props);\n      })\n  );\n};\n\nconst styles = StyleSheet.create({\n  centerAlignedContent: {\n    alignItems: 'center',\n  },\n  v2Spacing: {\n    marginLeft: 8,\n  },\n  v3Spacing: {\n    marginLeft: 12,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
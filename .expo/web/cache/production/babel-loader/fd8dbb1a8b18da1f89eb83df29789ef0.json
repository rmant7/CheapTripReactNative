{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import{Component}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import{PanGestureHandler}from\"../handlers/PanGestureHandler\";import{TapGestureHandler}from\"../handlers/TapGestureHandler\";import{State}from\"../State\";var DRAG_TOSS=0.05;var Swipeable=function(_Component){_inherits(Swipeable,_Component);var _super=_createSuper(Swipeable);function Swipeable(_props){var _this;_classCallCheck(this,Swipeable);_this=_super.call(this,_props);_defineProperty(_assertThisInitialized(_this),\"onGestureEvent\",void 0);_defineProperty(_assertThisInitialized(_this),\"transX\",void 0);_defineProperty(_assertThisInitialized(_this),\"showLeftAction\",void 0);_defineProperty(_assertThisInitialized(_this),\"leftActionTranslate\",void 0);_defineProperty(_assertThisInitialized(_this),\"showRightAction\",void 0);_defineProperty(_assertThisInitialized(_this),\"rightActionTranslate\",void 0);_defineProperty(_assertThisInitialized(_this),\"updateAnimatedEvent\",function(props,state){var friction=props.friction,overshootFriction=props.overshootFriction;var dragX=state.dragX,rowTranslation=state.rowTranslation,_state$leftWidth=state.leftWidth,leftWidth=_state$leftWidth===void 0?0:_state$leftWidth,_state$rowWidth=state.rowWidth,rowWidth=_state$rowWidth===void 0?0:_state$rowWidth;var _state$rightOffset=state.rightOffset,rightOffset=_state$rightOffset===void 0?rowWidth:_state$rightOffset;var rightWidth=Math.max(0,rowWidth-rightOffset);var _props$overshootLeft=props.overshootLeft,overshootLeft=_props$overshootLeft===void 0?leftWidth>0:_props$overshootLeft,_props$overshootRight=props.overshootRight,overshootRight=_props$overshootRight===void 0?rightWidth>0:_props$overshootRight;var transX=Animated.add(rowTranslation,dragX.interpolate({inputRange:[0,friction],outputRange:[0,1]})).interpolate({inputRange:[-rightWidth-1,-rightWidth,leftWidth,leftWidth+1],outputRange:[-rightWidth-(overshootRight?1/overshootFriction:0),-rightWidth,leftWidth,leftWidth+(overshootLeft?1/overshootFriction:0)]});_this.transX=transX;_this.showLeftAction=leftWidth>0?transX.interpolate({inputRange:[-1,0,leftWidth],outputRange:[0,0,1]}):new Animated.Value(0);_this.leftActionTranslate=_this.showLeftAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});_this.showRightAction=rightWidth>0?transX.interpolate({inputRange:[-rightWidth,0,1],outputRange:[1,0,0]}):new Animated.Value(0);_this.rightActionTranslate=_this.showRightAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});});_defineProperty(_assertThisInitialized(_this),\"onTapHandlerStateChange\",function(_ref){var nativeEvent=_ref.nativeEvent;if(nativeEvent.oldState===State.ACTIVE){_this.close();}});_defineProperty(_assertThisInitialized(_this),\"onHandlerStateChange\",function(ev){if(ev.nativeEvent.oldState===State.ACTIVE){_this.handleRelease(ev);}});_defineProperty(_assertThisInitialized(_this),\"handleRelease\",function(ev){var _ev$nativeEvent=ev.nativeEvent,velocityX=_ev$nativeEvent.velocityX,dragX=_ev$nativeEvent.translationX;var _this$state=_this.state,_this$state$leftWidth=_this$state.leftWidth,leftWidth=_this$state$leftWidth===void 0?0:_this$state$leftWidth,_this$state$rowWidth=_this$state.rowWidth,rowWidth=_this$state$rowWidth===void 0?0:_this$state$rowWidth,rowState=_this$state.rowState;var _this$state$rightOffs=_this.state.rightOffset,rightOffset=_this$state$rightOffs===void 0?rowWidth:_this$state$rightOffs;var rightWidth=rowWidth-rightOffset;var _this$props11=_this.props,friction=_this$props11.friction,_this$props11$leftThr=_this$props11.leftThreshold,leftThreshold=_this$props11$leftThr===void 0?leftWidth/2:_this$props11$leftThr,_this$props11$rightTh=_this$props11.rightThreshold,rightThreshold=_this$props11$rightTh===void 0?rightWidth/2:_this$props11$rightTh;var startOffsetX=_this.currentOffset()+dragX/friction;var translationX=(dragX+DRAG_TOSS*velocityX)/friction;var toValue=0;if(rowState===0){if(translationX>leftThreshold){toValue=leftWidth;}else if(translationX<-rightThreshold){toValue=-rightWidth;}}else if(rowState===1){if(translationX>-leftThreshold){toValue=leftWidth;}}else{if(translationX<rightThreshold){toValue=-rightWidth;}}_this.animateRow(startOffsetX,toValue,velocityX/friction);});_defineProperty(_assertThisInitialized(_this),\"animateRow\",function(fromValue,toValue,velocityX){var _this$state2=_this.state,dragX=_this$state2.dragX,rowTranslation=_this$state2.rowTranslation;dragX.setValue(0);rowTranslation.setValue(fromValue);_this.setState({rowState:Math.sign(toValue)});Animated.spring(rowTranslation,_objectSpread({restSpeedThreshold:1.7,restDisplacementThreshold:0.4,velocity:velocityX,bounciness:0,toValue:toValue,useNativeDriver:_this.props.useNativeAnimations},_this.props.animationOptions)).start(function(_ref2){var finished=_ref2.finished;if(finished){if(toValue>0){var _this$props$onSwipeab,_this$props,_this$props$onSwipeab2,_this$props2;(_this$props$onSwipeab=(_this$props=_this.props).onSwipeableLeftOpen)===null||_this$props$onSwipeab===void 0?void 0:_this$props$onSwipeab.call(_this$props);(_this$props$onSwipeab2=(_this$props2=_this.props).onSwipeableOpen)===null||_this$props$onSwipeab2===void 0?void 0:_this$props$onSwipeab2.call(_this$props2,'left',_assertThisInitialized(_this));}else if(toValue<0){var _this$props$onSwipeab3,_this$props3,_this$props$onSwipeab4,_this$props4;(_this$props$onSwipeab3=(_this$props3=_this.props).onSwipeableRightOpen)===null||_this$props$onSwipeab3===void 0?void 0:_this$props$onSwipeab3.call(_this$props3);(_this$props$onSwipeab4=(_this$props4=_this.props).onSwipeableOpen)===null||_this$props$onSwipeab4===void 0?void 0:_this$props$onSwipeab4.call(_this$props4,'right',_assertThisInitialized(_this));}else{var _this$props$onSwipeab5,_this$props5;var closingDirection=fromValue>0?'left':'right';(_this$props$onSwipeab5=(_this$props5=_this.props).onSwipeableClose)===null||_this$props$onSwipeab5===void 0?void 0:_this$props$onSwipeab5.call(_this$props5,closingDirection,_assertThisInitialized(_this));}}});if(toValue>0){var _this$props$onSwipeab6,_this$props6,_this$props$onSwipeab7,_this$props7;(_this$props$onSwipeab6=(_this$props6=_this.props).onSwipeableLeftWillOpen)===null||_this$props$onSwipeab6===void 0?void 0:_this$props$onSwipeab6.call(_this$props6);(_this$props$onSwipeab7=(_this$props7=_this.props).onSwipeableWillOpen)===null||_this$props$onSwipeab7===void 0?void 0:_this$props$onSwipeab7.call(_this$props7,'left');}else if(toValue<0){var _this$props$onSwipeab8,_this$props8,_this$props$onSwipeab9,_this$props9;(_this$props$onSwipeab8=(_this$props8=_this.props).onSwipeableRightWillOpen)===null||_this$props$onSwipeab8===void 0?void 0:_this$props$onSwipeab8.call(_this$props8);(_this$props$onSwipeab9=(_this$props9=_this.props).onSwipeableWillOpen)===null||_this$props$onSwipeab9===void 0?void 0:_this$props$onSwipeab9.call(_this$props9,'right');}else{var _this$props$onSwipeab10,_this$props10;var closingDirection=fromValue>0?'left':'right';(_this$props$onSwipeab10=(_this$props10=_this.props).onSwipeableWillClose)===null||_this$props$onSwipeab10===void 0?void 0:_this$props$onSwipeab10.call(_this$props10,closingDirection);}});_defineProperty(_assertThisInitialized(_this),\"onRowLayout\",function(_ref3){var nativeEvent=_ref3.nativeEvent;_this.setState({rowWidth:nativeEvent.layout.width});});_defineProperty(_assertThisInitialized(_this),\"currentOffset\",function(){var _this$state3=_this.state,_this$state3$leftWidt=_this$state3.leftWidth,leftWidth=_this$state3$leftWidt===void 0?0:_this$state3$leftWidt,_this$state3$rowWidth=_this$state3.rowWidth,rowWidth=_this$state3$rowWidth===void 0?0:_this$state3$rowWidth,rowState=_this$state3.rowState;var _this$state$rightOffs2=_this.state.rightOffset,rightOffset=_this$state$rightOffs2===void 0?rowWidth:_this$state$rightOffs2;var rightWidth=rowWidth-rightOffset;if(rowState===1){return leftWidth;}else if(rowState===-1){return-rightWidth;}return 0;});_defineProperty(_assertThisInitialized(_this),\"close\",function(){_this.animateRow(_this.currentOffset(),0);});_defineProperty(_assertThisInitialized(_this),\"openLeft\",function(){var _this$state$leftWidth2=_this.state.leftWidth,leftWidth=_this$state$leftWidth2===void 0?0:_this$state$leftWidth2;_this.animateRow(_this.currentOffset(),leftWidth);});_defineProperty(_assertThisInitialized(_this),\"openRight\",function(){var _this$state$rowWidth2=_this.state.rowWidth,rowWidth=_this$state$rowWidth2===void 0?0:_this$state$rowWidth2;var _this$state$rightOffs3=_this.state.rightOffset,rightOffset=_this$state$rightOffs3===void 0?rowWidth:_this$state$rightOffs3;var rightWidth=rowWidth-rightOffset;_this.animateRow(_this.currentOffset(),-rightWidth);});var _dragX=new Animated.Value(0);_this.state={dragX:_dragX,rowTranslation:new Animated.Value(0),rowState:0,leftWidth:undefined,rightOffset:undefined,rowWidth:undefined};_this.updateAnimatedEvent(_props,_this.state);_this.onGestureEvent=Animated.event([{nativeEvent:{translationX:_dragX}}],{useNativeDriver:_props.useNativeAnimations});return _this;}_createClass(Swipeable,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(props,state){if(this.props.friction!==props.friction||this.props.overshootLeft!==props.overshootLeft||this.props.overshootRight!==props.overshootRight||this.props.overshootFriction!==props.overshootFriction||this.state.leftWidth!==state.leftWidth||this.state.rightOffset!==state.rightOffset||this.state.rowWidth!==state.rowWidth){this.updateAnimatedEvent(props,state);}return true;}},{key:\"render\",value:function render(){var _this2=this;var rowState=this.state.rowState;var _this$props12=this.props,children=_this$props12.children,renderLeftActions=_this$props12.renderLeftActions,renderRightActions=_this$props12.renderRightActions;var left=renderLeftActions&&React.createElement(Animated.View,{style:[styles.leftActions,{transform:[{translateX:this.leftActionTranslate}]}]},renderLeftActions(this.showLeftAction,this.transX),React.createElement(View,{onLayout:function onLayout(_ref4){var nativeEvent=_ref4.nativeEvent;return _this2.setState({leftWidth:nativeEvent.layout.x});}}));var right=renderRightActions&&React.createElement(Animated.View,{style:[styles.rightActions,{transform:[{translateX:this.rightActionTranslate}]}]},renderRightActions(this.showRightAction,this.transX,this),React.createElement(View,{onLayout:function onLayout(_ref5){var nativeEvent=_ref5.nativeEvent;return _this2.setState({rightOffset:nativeEvent.layout.x});}}));return React.createElement(PanGestureHandler,_extends({activeOffsetX:[-10,10]},this.props,{onGestureEvent:this.onGestureEvent,onHandlerStateChange:this.onHandlerStateChange}),React.createElement(Animated.View,{onLayout:this.onRowLayout,style:[styles.container,this.props.containerStyle]},left,right,React.createElement(TapGestureHandler,{enabled:rowState!==0,onHandlerStateChange:this.onTapHandlerStateChange},React.createElement(Animated.View,{pointerEvents:rowState===0?'auto':'box-only',style:[{transform:[{translateX:this.transX}]},this.props.childrenContainerStyle]},children))));}}]);return Swipeable;}(Component);export{Swipeable as default};_defineProperty(Swipeable,\"defaultProps\",{friction:1,overshootFriction:1,useNativeAnimations:true});var styles=StyleSheet.create({container:{overflow:'hidden'},leftActions:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{flexDirection:I18nManager.isRTL?'row-reverse':'row'}),rightActions:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{flexDirection:I18nManager.isRTL?'row':'row-reverse'})});","map":{"version":3,"mappings":"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","names":["React","Component","PanGestureHandler","TapGestureHandler","State","DRAG_TOSS","Swipeable","constructor","props","_defineProperty","state","friction","overshootFriction","dragX","rowTranslation","leftWidth","rowWidth","rightOffset","rightWidth","Math","max","overshootLeft","overshootRight","transX","Animated","add","interpolate","inputRange","outputRange","showLeftAction","Value","leftActionTranslate","Number","MIN_VALUE","extrapolate","showRightAction","rightActionTranslate","nativeEvent","oldState","ACTIVE","close","ev","handleRelease","velocityX","translationX","rowState","leftThreshold","rightThreshold","startOffsetX","currentOffset","toValue","animateRow","fromValue","setValue","setState","sign","spring","restSpeedThreshold","restDisplacementThreshold","velocity","bounciness","useNativeDriver","useNativeAnimations","animationOptions","start","finished","onSwipeableLeftOpen","onSwipeableOpen","onSwipeableRightOpen","closingDirection","onSwipeableClose","onSwipeableLeftWillOpen","onSwipeableWillOpen","onSwipeableRightWillOpen","onSwipeableWillClose","layout","width","undefined","updateAnimatedEvent","onGestureEvent","event","shouldComponentUpdate","render","children","renderLeftActions","renderRightActions","left","View","style","styles","leftActions","transform","translateX","onLayout","x","right","rightActions","activeOffsetX","onHandlerStateChange","onRowLayout","container","containerStyle","enabled","onTapHandlerStateChange","pointerEvents","childrenContainerStyle","StyleSheet","create","overflow","absoluteFillObject","flexDirection","I18nManager","isRTL"],"sources":["Swipeable.tsx"],"sourcesContent":["// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us to\n// move faster and fix possible issues quicker\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  I18nManager,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n  PanGestureHandlerProps,\n} from '../handlers/PanGestureHandler';\nimport {\n  TapGestureHandler,\n  TapGestureHandlerEventPayload,\n} from '../handlers/TapGestureHandler';\nimport { State } from '../State';\n\nconst DRAG_TOSS = 0.05;\n\ntype SwipeableExcludes = Exclude<\n  keyof PanGestureHandlerProps,\n  'onGestureEvent' | 'onHandlerStateChange'\n>;\n\nexport interface SwipeableProps\n  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance. e.g. value of 1 will indicate that the swipeable panel\n   * should exactly follow the gesture, 2 means it is going to be two times\n   * \"slower\".\n   */\n  friction?: number;\n\n  /**\n   * Distance from the left edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  leftThreshold?: number;\n\n  /**\n   * Distance from the right edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  rightThreshold?: number;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the left\n   * actions panel's width. It is set to true by default as long as the left\n   * panel render method is present.\n   */\n  overshootLeft?: boolean;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the\n   * right actions panel's width. It is set to true by default as long as the\n   * right panel render method is present.\n   */\n  overshootRight?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance at overshoot. Default value is 1, it mean no friction, for\n   * a native feel, try 8 or above.\n   */\n  overshootFriction?: number;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableOpen()\n   *\n   * Called when left action panel gets open.\n   */\n  onSwipeableLeftOpen?: () => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableOpen()\n   *\n   * Called when right action panel gets open.\n   */\n  onSwipeableRightOpen?: () => void;\n\n  /**\n   * Called when action panel gets open (either right or left).\n   */\n  onSwipeableOpen?: (direction: 'left' | 'right', swipeable: Swipeable) => void;\n\n  /**\n   * Called when action panel is closed.\n   */\n  onSwipeableClose?: (\n    direction: 'left' | 'right',\n    swipeable: Swipeable\n  ) => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableWillOpen()\n   *\n   * Called when left action panel starts animating on open.\n   */\n  onSwipeableLeftWillOpen?: () => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableWillOpen()\n   *\n   * Called when right action panel starts animating on open.\n   */\n  onSwipeableRightWillOpen?: () => void;\n\n  /**\n   * Called when action panel starts animating on open (either right or left).\n   */\n  onSwipeableWillOpen?: (direction: 'left' | 'right') => void;\n\n  /**\n   * Called when action panel starts animating on close.\n   */\n  onSwipeableWillClose?: (direction: 'left' | 'right') => void;\n\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, +]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderLeftActions?: (\n    progressAnimatedValue: Animated.AnimatedInterpolation,\n    dragAnimatedValue: Animated.AnimatedInterpolation\n  ) => React.ReactNode;\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, -]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderRightActions?: (\n    progressAnimatedValue: Animated.AnimatedInterpolation,\n    dragAnimatedValue: Animated.AnimatedInterpolation,\n    swipeable: Swipeable\n  ) => React.ReactNode;\n\n  useNativeAnimations?: boolean;\n\n  animationOptions?: Record<string, unknown>;\n\n  /**\n   * Style object for the container (`Animated.View`), for example to override\n   * `overflow: 'hidden'`.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Style object for the children container (`Animated.View`), for example to\n   * apply `flex: 1`\n   */\n  childrenContainerStyle?: StyleProp<ViewStyle>;\n}\n\ntype SwipeableState = {\n  dragX: Animated.Value;\n  rowTranslation: Animated.Value;\n  rowState: number;\n  leftWidth?: number;\n  rightOffset?: number;\n  rowWidth?: number;\n};\n\nexport default class Swipeable extends Component<\n  SwipeableProps,\n  SwipeableState\n> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n\n  constructor(props: SwipeableProps) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this.updateAnimatedEvent(props, this.state);\n\n    this.onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations! }\n    );\n  }\n\n  shouldComponentUpdate(props: SwipeableProps, state: SwipeableState) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this.updateAnimatedEvent(props, state);\n    }\n\n    return true;\n  }\n\n  private onGestureEvent?: (\n    event: GestureEvent<PanGestureHandlerEventPayload>\n  ) => void;\n  private transX?: Animated.AnimatedInterpolation;\n  private showLeftAction?: Animated.AnimatedInterpolation | Animated.Value;\n  private leftActionTranslate?: Animated.AnimatedInterpolation;\n  private showRightAction?: Animated.AnimatedInterpolation | Animated.Value;\n  private rightActionTranslate?: Animated.AnimatedInterpolation;\n\n  private updateAnimatedEvent = (\n    props: SwipeableProps,\n    state: SwipeableState\n  ) => {\n    const { friction, overshootFriction } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const { overshootLeft = leftWidth > 0, overshootRight = rightWidth > 0 } =\n      props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction!],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [-rightWidth - 1, -rightWidth, leftWidth, leftWidth + 1],\n      outputRange: [\n        -rightWidth - (overshootRight ? 1 / overshootFriction! : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 / overshootFriction! : 0),\n      ],\n    });\n    this.transX = transX;\n    this.showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this.leftActionTranslate = this.showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this.showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this.rightActionTranslate = this.showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  private onTapHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<TapGestureHandlerEventPayload>) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  private onHandlerStateChange = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    if (ev.nativeEvent.oldState === State.ACTIVE) {\n      this.handleRelease(ev);\n    }\n  };\n\n  private handleRelease = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    const { velocityX, translationX: dragX } = ev.nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this.currentOffset() + dragX / friction!;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction!;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this.animateRow(startOffsetX, toValue, velocityX / friction!);\n  };\n\n  private animateRow = (\n    fromValue: number,\n    toValue: number,\n    velocityX?:\n      | number\n      | {\n          x: number;\n          y: number;\n        }\n  ) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations!,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0) {\n          this.props.onSwipeableLeftOpen?.();\n          this.props.onSwipeableOpen?.('left', this);\n        } else if (toValue < 0) {\n          this.props.onSwipeableRightOpen?.();\n          this.props.onSwipeableOpen?.('right', this);\n        } else {\n          const closingDirection = fromValue > 0 ? 'left' : 'right';\n          this.props.onSwipeableClose?.(closingDirection, this);\n        }\n      }\n    });\n    if (toValue > 0) {\n      this.props.onSwipeableLeftWillOpen?.();\n      this.props.onSwipeableWillOpen?.('left');\n    } else if (toValue < 0) {\n      this.props.onSwipeableRightWillOpen?.();\n      this.props.onSwipeableWillOpen?.('right');\n    } else {\n      const closingDirection = fromValue > 0 ? 'left' : 'right';\n      this.props.onSwipeableWillClose?.(closingDirection);\n    }\n  };\n\n  private onRowLayout = ({ nativeEvent }: LayoutChangeEvent) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  private currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this.animateRow(this.currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this.animateRow(this.currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this.animateRow(this.currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          // all those and below parameters can have ! since they are all\n          // asigned in constructor in `updateAnimatedEvent` but TS cannot spot\n          // it for some reason\n          { transform: [{ translateX: this.leftActionTranslate! }] },\n        ]}>\n        {renderLeftActions(this.showLeftAction!, this.transX!)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this.rightActionTranslate! }] },\n        ]}>\n        {renderRightActions(this.showRightAction!, this.transX!, this)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-10, 10]}\n        {...this.props}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}>\n        <Animated.View\n          onLayout={this.onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this.onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this.transX! }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
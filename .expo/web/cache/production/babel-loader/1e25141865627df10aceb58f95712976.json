{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{withInternalTheme}from\"../core/theming\";import Icon,{isEqualIcon,isValidIcon}from\"./Icon\";var CrossFadeIcon=function CrossFadeIcon(_ref){var color=_ref.color,size=_ref.size,source=_ref.source,theme=_ref.theme;var _React$useState=React.useState(function(){return source;}),_React$useState2=_slicedToArray(_React$useState,2),currentIcon=_React$useState2[0],setCurrentIcon=_React$useState2[1];var _React$useState3=React.useState(null),_React$useState4=_slicedToArray(_React$useState3,2),previousIcon=_React$useState4[0],setPreviousIcon=_React$useState4[1];var _React$useRef=React.useRef(new Animated.Value(1)),fade=_React$useRef.current;var scale=theme.animation.scale;if(currentIcon!==source){setPreviousIcon(function(){return currentIcon;});setCurrentIcon(function(){return source;});}React.useEffect(function(){if(isValidIcon(previousIcon)&&!isEqualIcon(previousIcon,currentIcon)){fade.setValue(1);Animated.timing(fade,{duration:scale*200,toValue:0,useNativeDriver:true}).start();}},[currentIcon,previousIcon,fade,scale]);var opacityPrev=fade;var opacityNext=previousIcon?fade.interpolate({inputRange:[0,1],outputRange:[1,0]}):1;var rotatePrev=fade.interpolate({inputRange:[0,1],outputRange:['-90deg','0deg']});var rotateNext=previousIcon?fade.interpolate({inputRange:[0,1],outputRange:['0deg','-180deg']}):'0deg';return React.createElement(View,{style:[styles.content,{height:size,width:size}]},previousIcon?React.createElement(Animated.View,{style:[styles.icon,{opacity:opacityPrev,transform:[{rotate:rotatePrev}]}]},React.createElement(Icon,{source:previousIcon,size:size,color:color})):null,React.createElement(Animated.View,{style:[styles.icon,{opacity:opacityNext,transform:[{rotate:rotateNext}]}]},React.createElement(Icon,{source:currentIcon,size:size,color:color})));};export default withInternalTheme(CrossFadeIcon);var styles=StyleSheet.create({content:{alignItems:'center',justifyContent:'center'},icon:{position:'absolute',top:0,left:0,right:0,bottom:0}});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["React","withInternalTheme","Icon","isEqualIcon","isValidIcon","CrossFadeIcon","color","size","source","theme","currentIcon","setCurrentIcon","useState","previousIcon","setPreviousIcon","current","fade","useRef","Animated","Value","scale","animation","useEffect","setValue","timing","duration","toValue","useNativeDriver","start","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","styles","content","height","width","icon","opacity","transform","rotate","StyleSheet","create","alignItems","justifyContent","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\nimport Icon, { IconSource, isEqualIcon, isValidIcon } from './Icon';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst CrossFadeIcon = ({ color, size, source, theme }: Props) => {\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n        >\n          <Icon source={previousIcon} size={size} color={color} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n      >\n        <Icon source={currentIcon} size={size} color={color} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default withInternalTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
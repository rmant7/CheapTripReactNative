{"ast":null,"code":"export default function memoize(callback){var previous;var result;return function(){var hasChanged=false;for(var _len=arguments.length,dependencies=new Array(_len),_key=0;_key<_len;_key++){dependencies[_key]=arguments[_key];}if(previous){if(previous.length!==dependencies.length){hasChanged=true;}else{for(var i=0;i<previous.length;i++){if(previous[i]!==dependencies[i]){hasChanged=true;break;}}}}else{hasChanged=true;}previous=dependencies;if(hasChanged||result===undefined){result=callback.apply(void 0,dependencies);}return result;};}","map":{"version":3,"sources":["memoize.tsx"],"names":["memoize","callback","previous","result","dependencies","hasChanged","length","i","undefined"],"mappings":"AAAA,cAAe,SAASA,QAAO,CAC7BC,QAAmC,CACnC,CACA,GAAIC,SAA0B,CAC9B,GAAIC,OAA0B,CAE9B,MAAO,WAAmC,CACxC,GAAIE,WAAU,CAAG,KAAK,CAAC,IAAA,GAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CADdD,YAAY,CAAA,GAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,CAAZA,YAAY,CAAA,IAAA,CAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA,CAGrB,GAAIF,QAAQ,CAAE,CACZ,GAAIA,QAAQ,CAACI,MAAM,GAAKF,YAAY,CAACE,MAAM,CAAE,CAC3CD,UAAU,CAAG,IAAI,CACnB,CAAC,IAAM,CACL,IAAK,GAAIE,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGL,QAAQ,CAACI,MAAM,CAAEC,CAAC,EAAE,CAAE,CACxC,GAAIL,QAAQ,CAACK,CAAC,CAAC,GAAKH,YAAY,CAACG,CAAC,CAAC,CAAE,CACnCF,UAAU,CAAG,IAAI,CACjB,MACF,CACF,CACF,CACF,CAAC,IAAM,CACLA,UAAU,CAAG,IAAI,CACnB,CAEAH,QAAQ,CAAGE,YAAY,CAEvB,GAAIC,UAAU,EAAIF,MAAM,GAAKK,SAAS,CAAE,CACtCL,MAAM,CAAGF,QAAQ,cAAIG,YAAY,CAAC,CACpC,CAEA,MAAOD,OAAM,CACf,CAAC,CACH","sourceRoot":"../../src","sourcesContent":["export default function memoize(callback) {\n  let previous;\n  let result;\n  return function () {\n    let hasChanged = false;\n    for (var _len = arguments.length, dependencies = new Array(_len), _key = 0; _key < _len; _key++) {\n      dependencies[_key] = arguments[_key];\n    }\n    if (previous) {\n      if (previous.length !== dependencies.length) {\n        hasChanged = true;\n      } else {\n        for (let i = 0; i < previous.length; i++) {\n          if (previous[i] !== dependencies[i]) {\n            hasChanged = true;\n            break;\n          }\n        }\n      }\n    } else {\n      hasChanged = true;\n    }\n    previous = dependencies;\n    if (hasChanged || result === undefined) {\n      result = callback(...dependencies);\n    }\n    return result;\n  };\n}\n//# sourceMappingURL=memoize.js.map"]},"metadata":{},"sourceType":"module"}
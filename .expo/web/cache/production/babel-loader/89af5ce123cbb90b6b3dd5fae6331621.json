{"ast":null,"code":"function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";var CardActions=function CardActions(props){var _useInternalTheme=useInternalTheme(),isV3=_useInternalTheme.isV3;var justifyContent=isV3?'flex-end':'flex-start';return React.createElement(View,_extends({},props,{style:[styles.container,props.style,{justifyContent:justifyContent}]}),React.Children.map(props.children,function(child,i){return React.isValidElement(child)?React.cloneElement(child,{compact:!isV3&&child.props.compact!==false,mode:child.props.mode||isV3&&(i===0?'outlined':'contained'),style:isV3&&styles.button}):child;}));};CardActions.displayName='Card.Actions';var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',padding:8},button:{marginLeft:8}});export default CardActions;","map":{"version":3,"sources":["CardActions.tsx"],"names":["React","useInternalTheme","CardActions","props","isV3","justifyContent","styles","container","style","Children","map","children","child","i","isValidElement","cloneElement","compact","mode","button","displayName","StyleSheet","create","flexDirection","alignItems","padding","marginLeft"],"mappings":"2SAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,sHAG9B,OAASC,gBAAgB,0BAoCzB,GAAMC,YAAW,CAAIC,QAAfD,YAAW,CAAIC,KAAY,CAAK,CACpC,sBAAiBF,gBAAgB,EAAE,CAA3BG,IAAAA,mBAAAA,IAAAA,CACR,GAAMC,eAAc,CAAGD,IAAI,CAAG,UAAU,CAAG,YAAY,CAEvD,MACE,MAAA,CAAA,aAAA,CAAC,IAAI,CAAA,QAAA,CAAA,CAAA,CAAA,CACCD,KAAK,CAAA,CACT,KAAK,CAAE,CAACG,MAAM,CAACC,SAAS,CAAEJ,KAAK,CAACK,KAAK,CAAE,CAAEH,cAAAA,CAAAA,cAAe,CAAC,CAAE,CAAA,CAAA,CAE1DL,KAAK,CAACS,QAAQ,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,CAAE,SAACC,KAAK,CAAEC,CAAC,CAAK,CAChD,MAAO,MAAK,CAACC,cAAc,CAACF,KAAK,CAAC,CAC9BZ,KAAK,CAACe,YAAY,CAACH,KAAK,CAA6B,CACnDI,OAAO,CAAE,CAACZ,IAAI,EAAIQ,KAAK,CAACT,KAAK,CAACa,OAAO,GAAK,KAAK,CAC/CC,IAAI,CACFL,KAAK,CAACT,KAAK,CAACc,IAAI,EACfb,IAAI,GAAKS,CAAC,GAAK,CAAC,CAAG,UAAU,CAAG,WAAW,CAAE,CAChDL,KAAK,CAAEJ,IAAI,EAAIE,MAAM,CAACY,MACxB,CAAC,CAAC,CACFN,KAAK,CACX,CAAC,CAAC,CACG,CAEX,CAAC,CAEDV,WAAW,CAACiB,WAAW,CAAG,cAAc,CAExC,GAAMb,OAAM,CAAGc,UAAU,CAACC,MAAM,CAAC,CAC/Bd,SAAS,CAAE,CACTe,aAAa,CAAE,KAAK,CACpBC,UAAU,CAAE,QAAQ,CACpBC,OAAO,CAAE,CACX,CAAC,CACDN,MAAM,CAAE,CACNO,UAAU,CAAE,CACd,CACF,CAAC,CAAC,CAEF,cAAevB,YAAW","sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Items inside the `CardActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/card-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card, Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst CardActions = (props: Props) => {\n  const { isV3 } = useInternalTheme();\n  const justifyContent = isV3 ? 'flex-end' : 'flex-start';\n\n  return (\n    <View\n      {...props}\n      style={[styles.container, props.style, { justifyContent }]}\n    >\n      {React.Children.map(props.children, (child, i) => {\n        return React.isValidElement(child)\n          ? React.cloneElement(child as React.ReactElement<any>, {\n              compact: !isV3 && child.props.compact !== false,\n              mode:\n                child.props.mode ||\n                (isV3 && (i === 0 ? 'outlined' : 'contained')),\n              style: isV3 && styles.button,\n            })\n          : child;\n      })}\n    </View>\n  );\n};\n\nCardActions.displayName = 'Card.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  button: {\n    marginLeft: 8,\n  },\n});\n\nexport default CardActions;\n"]},"metadata":{},"sourceType":"module"}
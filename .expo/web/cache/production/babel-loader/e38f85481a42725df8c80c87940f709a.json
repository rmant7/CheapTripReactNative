{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}var gestures={};export function getHandler(tag){if(tag in gestures){return gestures[tag];}throw new Error(\"No handler for tag \"+tag);}export function createGestureHandler(handlerTag,handler){if(handlerTag in gestures){throw new Error(\"Handler with tag \"+handlerTag+\" already exists\");}gestures[handlerTag]=handler;gestures[handlerTag].handlerTag=handlerTag;}export function dropGestureHandler(handlerTag){if(!(handlerTag in gestures)){return;}getHandler(handlerTag).destroy();delete gestures[handlerTag];}export function getNodes(){return _objectSpread({},gestures);}","map":{"version":3,"sources":["NodeManager.ts"],"names":["gestures","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes"],"mappings":"w0BAGA,GAAMA,SAGL,CAAG,CAAA,CAHJ,CAKA,MAAO,SAASC,WAAT,CAAoBC,GAApB,CAAiC,CACtC,GAAIA,GAAG,GAAIF,SAAX,CAAqB,CACnB,MAAOA,SAAQ,CAACE,GAAD,CAAf,CACD,CAED,KAAM,IAAIC,MAAJ,uBAAgCD,GAAhC,CAAN,CACD,CAED,MAAO,SAASE,qBAAT,CACLC,UADK,CAELC,OAFK,CAGL,CACA,GAAID,UAAU,GAAIL,SAAlB,CAA4B,CAC1B,KAAM,IAAIG,MAAJ,qBAA8BE,UAA9B,mBAAN,CACD,CACDL,QAAQ,CAACK,UAAD,CAARL,CAAuBM,OAJvB,CAMAN,QAAQ,CAACK,UAAD,CAARL,CAAqBK,UAArBL,CAAkCK,UAAlCL,CACD,CAED,MAAO,SAASO,mBAAT,CAA4BF,UAA5B,CAAgD,CAGrD,GAAI,EAAEA,UAAU,GAAIL,SAAhB,CAAJ,CAA+B,CAC7B,OACD,CACDC,UAAU,CAACI,UAAD,CAAVJ,CAAuBO,OAAvBP,EANqD,CAQrD,MAAOD,SAAQ,CAACK,UAAD,CAAf,CACD,CAED,MAAO,SAASI,SAAT,EAAoB,CACzB,wBAAYT,QAAAA,EACb","sourcesContent":["import { ValueOf } from '../typeUtils';\nimport { HammerGestures } from '../RNGestureHandlerModule.web';\n\nconst gestures: Record<\n  number,\n  InstanceType<ValueOf<typeof HammerGestures>>\n> = {};\n\nexport function getHandler(tag: number) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n\n  throw new Error(`No handler for tag ${tag}`);\n}\n\nexport function createGestureHandler(\n  handlerTag: number,\n  handler: InstanceType<ValueOf<typeof HammerGestures>>\n) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  // @ts-ignore no types for web handlers yet\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag: number) {\n  // Since React 18, there are cases where componentWillUnmount gets called twice in a row\n  // so skip this if the tag was already removed.\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n"]},"metadata":{},"sourceType":"module"}
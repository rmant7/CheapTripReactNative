{"ast":null,"code":"import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{black,white}from\"../../styles/themes/v2/colors\";var isDark=function isDark(_ref){var dark=_ref.dark,backgroundColor=_ref.backgroundColor;if(typeof dark==='boolean'){return dark;}if(backgroundColor==='transparent'){return false;}if(backgroundColor!=='transparent'){return!color(backgroundColor).isLight();}return false;};var getButtonBackgroundColor=function getButtonBackgroundColor(_ref2){var isMode=_ref2.isMode,theme=_ref2.theme,disabled=_ref2.disabled,customButtonColor=_ref2.customButtonColor;if(customButtonColor&&!disabled){return customButtonColor;}if(theme.isV3){if(disabled){if(isMode('outlined')||isMode('text')){return'transparent';}return theme.colors.surfaceDisabled;}if(isMode('elevated')){return theme.colors.elevation.level1;}if(isMode('contained')){return theme.colors.primary;}if(isMode('contained-tonal')){return theme.colors.secondaryContainer;}}if(isMode('contained')){if(disabled){return color(theme.dark?white:black).alpha(0.12).rgb().string();}return theme.colors.primary;}return'transparent';};var getButtonTextColor=function getButtonTextColor(_ref3){var isMode=_ref3.isMode,theme=_ref3.theme,disabled=_ref3.disabled,customTextColor=_ref3.customTextColor,backgroundColor=_ref3.backgroundColor,dark=_ref3.dark;if(customTextColor&&!disabled){return customTextColor;}if(theme.isV3){if(disabled){return theme.colors.onSurfaceDisabled;}if(typeof dark==='boolean'){if(isMode('contained')||isMode('contained-tonal')||isMode('elevated')){return isDark({dark:dark,backgroundColor:backgroundColor})?white:black;}}if(isMode('outlined')||isMode('text')||isMode('elevated')){return theme.colors.primary;}if(isMode('contained')){return theme.colors.onPrimary;}if(isMode('contained-tonal')){return theme.colors.onSecondaryContainer;}}if(disabled){return color(theme.dark?white:black).alpha(0.32).rgb().string();}if(isMode('contained')){return isDark({dark:dark,backgroundColor:backgroundColor})?white:black;}return theme.colors.primary;};var getButtonBorderColor=function getButtonBorderColor(_ref4){var isMode=_ref4.isMode,disabled=_ref4.disabled,theme=_ref4.theme;if(theme.isV3){if(disabled&&isMode('outlined')){return theme.colors.surfaceDisabled;}if(isMode('outlined')){return theme.colors.outline;}}if(isMode('outlined')){return color(theme.dark?white:black).alpha(0.29).rgb().string();}return'transparent';};var getButtonBorderWidth=function getButtonBorderWidth(_ref5){var isMode=_ref5.isMode,theme=_ref5.theme;if(theme.isV3){if(isMode('outlined')){return 1;}}if(isMode('outlined')){return StyleSheet.hairlineWidth;}return 0;};export var getButtonColors=function getButtonColors(_ref6){var theme=_ref6.theme,mode=_ref6.mode,customButtonColor=_ref6.customButtonColor,customTextColor=_ref6.customTextColor,disabled=_ref6.disabled,dark=_ref6.dark;var isMode=function isMode(modeToCompare){return mode===modeToCompare;};var backgroundColor=getButtonBackgroundColor({isMode:isMode,theme:theme,disabled:disabled,customButtonColor:customButtonColor});var textColor=getButtonTextColor({isMode:isMode,theme:theme,disabled:disabled,customTextColor:customTextColor,backgroundColor:backgroundColor,dark:dark});var borderColor=getButtonBorderColor({isMode:isMode,theme:theme,disabled:disabled});var borderWidth=getButtonBorderWidth({isMode:isMode,theme:theme});return{backgroundColor:backgroundColor,borderColor:borderColor,textColor:textColor,borderWidth:borderWidth};};","map":{"version":3,"sources":["utils.tsx"],"names":["color","black","white","isDark","dark","backgroundColor","isLight","getButtonBackgroundColor","isMode","theme","disabled","customButtonColor","isV3","colors","surfaceDisabled","elevation","level1","primary","secondaryContainer","alpha","rgb","string","getButtonTextColor","customTextColor","onSurfaceDisabled","onPrimary","onSecondaryContainer","getButtonBorderColor","outline","getButtonBorderWidth","StyleSheet","hairlineWidth","getButtonColors","mode","modeToCompare","textColor","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import { StyleSheet } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\nexport type ButtonMode =\n  | 'text'\n  | 'outlined'\n  | 'contained'\n  | 'elevated'\n  | 'contained-tonal';\n\ntype BaseProps = {\n  isMode: (mode: ButtonMode) => boolean;\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\nconst isDark = ({\n  dark,\n  backgroundColor,\n}: {\n  dark?: boolean;\n  backgroundColor?: string;\n}) => {\n  if (typeof dark === 'boolean') {\n    return dark;\n  }\n\n  if (backgroundColor === 'transparent') {\n    return false;\n  }\n\n  if (backgroundColor !== 'transparent') {\n    return !color(backgroundColor).isLight();\n  }\n\n  return false;\n};\n\nconst getButtonBackgroundColor = ({\n  isMode,\n  theme,\n  disabled,\n  customButtonColor,\n}: BaseProps & {\n  customButtonColor?: string;\n}) => {\n  if (customButtonColor && !disabled) {\n    return customButtonColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isMode('outlined') || isMode('text')) {\n        return 'transparent';\n      }\n\n      return theme.colors.surfaceDisabled;\n    }\n\n    if (isMode('elevated')) {\n      return theme.colors.elevation.level1;\n    }\n\n    if (isMode('contained')) {\n      return theme.colors.primary;\n    }\n\n    if (isMode('contained-tonal')) {\n      return theme.colors.secondaryContainer;\n    }\n  }\n\n  if (isMode('contained')) {\n    if (disabled) {\n      return color(theme.dark ? white : black)\n        .alpha(0.12)\n        .rgb()\n        .string();\n    }\n\n    return theme.colors.primary;\n  }\n\n  return 'transparent';\n};\n\nconst getButtonTextColor = ({\n  isMode,\n  theme,\n  disabled,\n  customTextColor,\n  backgroundColor,\n  dark,\n}: BaseProps & {\n  customTextColor?: string;\n  backgroundColor: string;\n  dark?: boolean;\n}) => {\n  if (customTextColor && !disabled) {\n    return customTextColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (typeof dark === 'boolean') {\n      if (\n        isMode('contained') ||\n        isMode('contained-tonal') ||\n        isMode('elevated')\n      ) {\n        return isDark({ dark, backgroundColor }) ? white : black;\n      }\n    }\n\n    if (isMode('outlined') || isMode('text') || isMode('elevated')) {\n      return theme.colors.primary;\n    }\n\n    if (isMode('contained')) {\n      return theme.colors.onPrimary;\n    }\n\n    if (isMode('contained-tonal')) {\n      return theme.colors.onSecondaryContainer;\n    }\n  }\n\n  if (disabled) {\n    return color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  }\n\n  if (isMode('contained')) {\n    return isDark({ dark, backgroundColor }) ? white : black;\n  }\n\n  return theme.colors.primary;\n};\n\nconst getButtonBorderColor = ({ isMode, disabled, theme }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled && isMode('outlined')) {\n      return theme.colors.surfaceDisabled;\n    }\n\n    if (isMode('outlined')) {\n      return theme.colors.outline;\n    }\n  }\n\n  if (isMode('outlined')) {\n    return color(theme.dark ? white : black)\n      .alpha(0.29)\n      .rgb()\n      .string();\n  }\n\n  return 'transparent';\n};\n\nconst getButtonBorderWidth = ({\n  isMode,\n  theme,\n}: Omit<BaseProps, 'disabled'>) => {\n  if (theme.isV3) {\n    if (isMode('outlined')) {\n      return 1;\n    }\n  }\n\n  if (isMode('outlined')) {\n    return StyleSheet.hairlineWidth;\n  }\n\n  return 0;\n};\n\nexport const getButtonColors = ({\n  theme,\n  mode,\n  customButtonColor,\n  customTextColor,\n  disabled,\n  dark,\n}: {\n  theme: InternalTheme;\n  mode: ButtonMode;\n  customButtonColor?: string;\n  customTextColor?: string;\n  disabled?: boolean;\n  dark?: boolean;\n}) => {\n  const isMode = (modeToCompare: ButtonMode) => {\n    return mode === modeToCompare;\n  };\n\n  const backgroundColor = getButtonBackgroundColor({\n    isMode,\n    theme,\n    disabled,\n    customButtonColor,\n  });\n\n  const textColor = getButtonTextColor({\n    isMode,\n    theme,\n    disabled,\n    customTextColor,\n    backgroundColor,\n    dark,\n  });\n\n  const borderColor = getButtonBorderColor({ isMode, theme, disabled });\n\n  const borderWidth = getButtonBorderWidth({ isMode, theme });\n\n  return {\n    backgroundColor,\n    borderColor,\n    textColor,\n    borderWidth,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
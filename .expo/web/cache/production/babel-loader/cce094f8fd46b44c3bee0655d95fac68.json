{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import EnsureSingleNavigator from\"./EnsureSingleNavigator\";import NavigationStateContext from\"./NavigationStateContext\";import StaticContainer from\"./StaticContainer\";import useOptionsGetters from\"./useOptionsGetters\";export default function SceneView(_ref){var screen=_ref.screen,route=_ref.route,navigation=_ref.navigation,routeState=_ref.routeState,getState=_ref.getState,setState=_ref.setState,options=_ref.options,clearOptions=_ref.clearOptions;var navigatorKeyRef=React.useRef();var getKey=React.useCallback(function(){return navigatorKeyRef.current;},[]);var _useOptionsGetters=useOptionsGetters({key:route.key,options:options,navigation:navigation}),addOptionsGetter=_useOptionsGetters.addOptionsGetter;var setKey=React.useCallback(function(key){navigatorKeyRef.current=key;},[]);var getCurrentState=React.useCallback(function(){var state=getState();var currentRoute=state.routes.find(function(r){return r.key===route.key;});return currentRoute?currentRoute.state:undefined;},[getState,route.key]);var setCurrentState=React.useCallback(function(child){var state=getState();setState(_objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(r){return r.key===route.key?_objectSpread(_objectSpread({},r),{},{state:child}):r;})}));},[getState,route.key,setState]);var isInitialRef=React.useRef(true);React.useEffect(function(){isInitialRef.current=false;});React.useEffect(function(){return clearOptions;},[]);var getIsInitial=React.useCallback(function(){return isInitialRef.current;},[]);var context=React.useMemo(function(){return{state:routeState,getState:getCurrentState,setState:setCurrentState,getKey:getKey,setKey:setKey,getIsInitial:getIsInitial,addOptionsGetter:addOptionsGetter};},[routeState,getCurrentState,setCurrentState,getKey,setKey,getIsInitial,addOptionsGetter]);var ScreenComponent=screen.getComponent?screen.getComponent():screen.component;return React.createElement(NavigationStateContext.Provider,{value:context},React.createElement(EnsureSingleNavigator,null,React.createElement(StaticContainer,{name:screen.name,render:ScreenComponent||screen.children,navigation:navigation,route:route},ScreenComponent!==undefined?React.createElement(ScreenComponent,{navigation:navigation,route:route}):screen.children!==undefined?screen.children({navigation:navigation,route:route}):null)));}","map":{"version":3,"mappings":"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","names":["React","EnsureSingleNavigator","NavigationStateContext","StaticContainer","useOptionsGetters","SceneView","screen","_ref","route","navigation","routeState","getState","setState","options","clearOptions","navigatorKeyRef","useRef","getKey","useCallback","current","key","addOptionsGetter","setKey","getCurrentState","state","currentRoute","routes","find","r","undefined","setCurrentState","child","map","isInitialRef","useEffect","getIsInitial","context","useMemo","ScreenComponent","getComponent","component","Provider","value","name","render","children"],"sourceRoot":"../../src","sources":["SceneView.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"enabled\"],_excluded2=[\"enabled\",\"active\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";var Screens;try{Screens=require('react-native-screens');}catch(e){}export var MaybeScreenContainer=function MaybeScreenContainer(_ref){var enabled=_ref.enabled,rest=_objectWithoutProperties(_ref,_excluded);if(Screens!=null){return React.createElement(Screens.ScreenContainer,_extends({enabled:enabled},rest));}return React.createElement(View,rest);};export var MaybeScreen=function MaybeScreen(_ref2){var enabled=_ref2.enabled,active=_ref2.active,rest=_objectWithoutProperties(_ref2,_excluded2);if(Screens!=null){return React.createElement(Screens.Screen,_extends({enabled:enabled,activityState:active},rest));}return React.createElement(View,rest);};","map":{"version":3,"sources":["Screens.tsx"],"names":["React","Screens","require","e","MaybeScreenContainer","enabled","rest","MaybeScreen","active"],"mappings":"0bAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,qDAG9B,GAAIC,QAA0D,CAE9D,GAAI,CACFA,OAAO,CAAGC,OAAO,CAAC,sBAAsB,CAAC,CAC3C,CAAE,MAAOC,CAAC,CAAE,CACV,CAGF,MAAO,IAAMC,qBAAoB,CAAG,QAAvBA,qBAAoB,CAAG,IAAA,CAM9B,CAN+B,GACnCC,QAAO,CAKR,IAAA,CALCA,OAAO,CACJC,IAAAA,0BAIJ,IAAA,YACC,GAAIL,OAAO,EAAI,IAAI,CAAE,CACnB,MAAO,MAAA,CAAA,aAAA,CAAC,OAAO,CAAC,eAAe,CAAA,QAAA,CAAA,CAAC,OAAO,CAAEI,OAAQ,CAAA,CAAKC,IAAI,CAAA,CAAI,CAChE,CAEA,MAAO,MAAA,CAAA,aAAA,CAAC,IAAI,CAAKA,IAAI,CAAI,CAC3B,CAAC,CAED,MAAO,IAAMC,YAAW,CAAG,QAAdA,YAAW,CAAG,KAAA,CASrB,CATsB,GAC1BF,QAAO,CAQR,KAAA,CARCA,OAAO,CACPG,MAAM,CAOP,KAAA,CAPCA,MAAM,CACHF,IAAAA,0BAMJ,KAAA,aACC,GAAIL,OAAO,EAAI,IAAI,CAAE,CACnB,MACE,MAAA,CAAA,aAAA,CAAC,OAAO,CAAC,MAAM,CAAA,QAAA,CAAA,CAAC,OAAO,CAAEI,OAAQ,CAAC,aAAa,CAAEG,MAAO,CAAA,CAAKF,IAAI,CAAA,CAAI,CAEzE,CAEA,MAAO,MAAA,CAAA,aAAA,CAAC,IAAI,CAAKA,IAAI,CAAI,CAC3B,CAAC","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { View } from 'react-native';\nlet Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\nexport const MaybeScreenContainer = _ref => {\n  let {\n    enabled,\n    ...rest\n  } = _ref;\n  if (Screens != null) {\n    return /*#__PURE__*/React.createElement(Screens.ScreenContainer, _extends({\n      enabled: enabled\n    }, rest));\n  }\n  return /*#__PURE__*/React.createElement(View, rest);\n};\nexport const MaybeScreen = _ref2 => {\n  let {\n    enabled,\n    active,\n    ...rest\n  } = _ref2;\n  if (Screens != null) {\n    return /*#__PURE__*/React.createElement(Screens.Screen, _extends({\n      enabled: enabled,\n      activityState: active\n    }, rest));\n  }\n  return /*#__PURE__*/React.createElement(View, rest);\n};\n//# sourceMappingURL=Screens.js.map"]},"metadata":{},"sourceType":"module"}
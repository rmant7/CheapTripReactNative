{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"color\",\"indeterminate\",\"style\",\"progress\",\"visible\",\"theme\",\"animatedValue\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import setColor from'color';import{withInternalTheme}from\"../core/theming\";var INDETERMINATE_DURATION=2000;var INDETERMINATE_MAX_WIDTH=0.6;var isRTL=I18nManager.isRTL;var ProgressBar=function ProgressBar(_ref){var _theme$colors;var color=_ref.color,indeterminate=_ref.indeterminate,style=_ref.style,_ref$progress=_ref.progress,progress=_ref$progress===void 0?0:_ref$progress,_ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,theme=_ref.theme,animatedValue=_ref.animatedValue,rest=_objectWithoutProperties(_ref,_excluded);var _React$useRef=React.useRef(new Animated.Value(0)),timer=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(0)),fade=_React$useRef2.current;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),width=_React$useState2[0],setWidth=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),prevWidth=_React$useState4[0],setPrevWidth=_React$useState4[1];var indeterminateAnimation=React.useRef(null);var scale=theme.animation.scale;var startAnimation=React.useCallback(function(){Animated.timing(fade,{duration:200*scale,toValue:1,useNativeDriver:true,isInteraction:false}).start();if(animatedValue&&animatedValue>=0){return;}if(indeterminate){if(!indeterminateAnimation.current){indeterminateAnimation.current=Animated.timing(timer,{duration:INDETERMINATE_DURATION,toValue:1,useNativeDriver:Platform.OS!=='web',isInteraction:false});}timer.setValue(0);Animated.loop(indeterminateAnimation.current).start();}else{Animated.timing(timer,{duration:200*scale,toValue:progress?progress:0,useNativeDriver:true,isInteraction:false}).start();}},[fade,scale,indeterminate,timer,progress]);var stopAnimation=React.useCallback(function(){if(indeterminateAnimation.current){indeterminateAnimation.current.stop();}Animated.timing(fade,{duration:200*scale,toValue:0,useNativeDriver:true,isInteraction:false}).start();},[fade,scale]);React.useEffect(function(){if(visible)startAnimation();else stopAnimation();},[visible,startAnimation,stopAnimation]);React.useEffect(function(){if(animatedValue&&animatedValue>=0){timer.setValue(animatedValue);}},[animatedValue,timer]);React.useEffect(function(){if(visible&&prevWidth===0){startAnimation();}},[prevWidth,startAnimation,visible]);var onLayout=function onLayout(event){setPrevWidth(width);setWidth(event.nativeEvent.layout.width);};var tintColor=color||((_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.primary);var trackTintColor=theme.isV3?theme.colors.surfaceVariant:setColor(tintColor).alpha(0.38).rgb().string();return React.createElement(View,_extends({onLayout:onLayout},rest,{accessible:true,accessibilityRole:\"progressbar\",accessibilityState:{busy:visible},accessibilityValue:indeterminate?{}:{min:0,max:100,now:progress*100}}),React.createElement(Animated.View,{style:[styles.container,{backgroundColor:trackTintColor,opacity:fade},style]},width?React.createElement(Animated.View,{style:[styles.progressBar,{width:width,backgroundColor:tintColor,transform:[{translateX:timer.interpolate(indeterminate?{inputRange:[0,0.5,1],outputRange:[(isRTL?1:-1)*0.5*width,(isRTL?1:-1)*0.5*INDETERMINATE_MAX_WIDTH*width,(isRTL?-1:1)*0.7*width]}:{inputRange:[0,1],outputRange:[(isRTL?1:-1)*0.5*width,0]})},{scaleX:timer.interpolate(indeterminate?{inputRange:[0,0.5,1],outputRange:[0.0001,INDETERMINATE_MAX_WIDTH,0.0001]}:{inputRange:[0,1],outputRange:[0.0001,1]})}]}]}):null));};var styles=StyleSheet.create({container:{height:4,overflow:'hidden'},progressBar:{flex:1}});export default withInternalTheme(ProgressBar);","map":{"version":3,"mappings":"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","names":["React","setColor","withInternalTheme","INDETERMINATE_DURATION","INDETERMINATE_MAX_WIDTH","isRTL","I18nManager","ProgressBar","_ref","color","indeterminate","style","progress","visible","theme","animatedValue","rest","useRef","Animated","Value","timer","current","fade","useState","width","setWidth","prevWidth","setPrevWidth","indeterminateAnimation","scale","animation","startAnimation","useCallback","timing","duration","toValue","useNativeDriver","isInteraction","start","Platform","OS","setValue","loop","stopAnimation","stop","useEffect","onLayout","event","nativeEvent","layout","tintColor","colors","_theme$colors","primary","trackTintColor","isV3","surfaceVariant","alpha","rgb","string","View","accessible","accessibilityRole","accessibilityState","busy","accessibilityValue","min","max","now","styles","container","backgroundColor","opacity","progressBar","transform","translateX","interpolate","inputRange","outputRange","scaleX","StyleSheet","create","height","overflow","flex"],"sources":["ProgressBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport setColor from 'color';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Animated value (between 0 and 1). This tells the progress bar to rely on this value to animate it.\n   * Note: It should not be used in parallel with the `progress` prop.\n   */\n  animatedValue?: number;\n  /**\n   * Progress value (between 0 and 1).\n   * Note: It should not be used in parallel with the `animatedValue` prop.\n   */\n  progress?: number;\n  /**\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\n   */\n  color?: string;\n  /**\n   * If the progress bar will show indeterminate progress.\n   */\n  indeterminate?: boolean;\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  visible?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\nconst { isRTL } = I18nManager;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={MD3Colors.error50} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ProgressBar = ({\n  color,\n  indeterminate,\n  style,\n  progress = 0,\n  visible = true,\n  theme,\n  animatedValue,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(0));\n  const [width, setWidth] = React.useState<number>(0);\n  const [prevWidth, setPrevWidth] = React.useState<number>(0);\n\n  const indeterminateAnimation =\n    React.useRef<Animated.CompositeAnimation | null>(null);\n\n  const { scale } = theme.animation;\n\n  const startAnimation = React.useCallback(() => {\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n\n    if (animatedValue && animatedValue >= 0) {\n      return;\n    }\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false,\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start();\n    }\n    /**\n     * We shouldn't add @param animatedValue to the\n     * deps array, to avoid the unnecessary loop.\n     * We can only check if the prop is passed initially,\n     * and we do early return.\n     */\n  }, [fade, scale, indeterminate, timer, progress]);\n\n  const stopAnimation = React.useCallback(() => {\n    // Stop indeterminate animation\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n  }, [fade, scale]);\n\n  React.useEffect(() => {\n    if (visible) startAnimation();\n    else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n\n  React.useEffect(() => {\n    if (animatedValue && animatedValue >= 0) {\n      timer.setValue(animatedValue);\n    }\n  }, [animatedValue, timer]);\n\n  React.useEffect(() => {\n    // Start animation the very first time when previously the width was unclear\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n\n  const tintColor = color || theme.colors?.primary;\n  const trackTintColor = theme.isV3\n    ? theme.colors.surfaceVariant\n    : setColor(tintColor).alpha(0.38).rgb().string();\n\n  return (\n    <View\n      onLayout={onLayout}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: visible }}\n      accessibilityValue={\n        indeterminate ? {} : { min: 0, max: 100, now: progress * 100 }\n      }\n    >\n      <Animated.View\n        style={[\n          styles.container,\n          { backgroundColor: trackTintColor, opacity: fade },\n          style,\n        ]}\n      >\n        {width ? (\n          <Animated.View\n            style={[\n              styles.progressBar,\n              {\n                width,\n                backgroundColor: tintColor,\n                transform: [\n                  {\n                    translateX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              (isRTL ? 1 : -1) * 0.5 * width,\n                              (isRTL ? 1 : -1) *\n                                0.5 *\n                                INDETERMINATE_MAX_WIDTH *\n                                width,\n                              (isRTL ? -1 : 1) * 0.7 * width,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0],\n                          }\n                    ),\n                  },\n                  {\n                    // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n                    scaleX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              0.0001,\n                              INDETERMINATE_MAX_WIDTH,\n                              0.0001,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [0.0001, 1],\n                          }\n                    ),\n                  },\n                ],\n              },\n            ]}\n          />\n        ) : null}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden',\n  },\n\n  progressBar: {\n    flex: 1,\n  },\n});\n\nexport default withInternalTheme(ProgressBar);\n"]},"metadata":{},"sourceType":"module"}
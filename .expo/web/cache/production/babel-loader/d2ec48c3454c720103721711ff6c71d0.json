{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{black,white}from\"../../styles/themes/v2/colors\";var DEFAULT_PADDING=9;export var getSegmentedButtonDensityPadding=function getSegmentedButtonDensityPadding(_ref){var density=_ref.density;var padding=DEFAULT_PADDING;switch(density){case'small':return padding-2;case'medium':return padding-4;case'high':return padding-8;default:return padding;}};export var getDisabledSegmentedButtonStyle=function getDisabledSegmentedButtonStyle(_ref2){var _buttons$index,_buttons;var theme=_ref2.theme,index=_ref2.index,buttons=_ref2.buttons;var width=getSegmentedButtonBorderWidth({theme:theme});var isDisabled=(_buttons$index=buttons[index])===null||_buttons$index===void 0?void 0:_buttons$index.disabled;var isNextDisabled=(_buttons=buttons[index+1])===null||_buttons===void 0?void 0:_buttons.disabled;if(!isDisabled&&isNextDisabled){return{borderRightWidth:width};}return{};};export var getSegmentedButtonBorderRadius=function getSegmentedButtonBorderRadius(_ref3){var segment=_ref3.segment,theme=_ref3.theme;if(segment==='first'){return _objectSpread({borderTopRightRadius:0,borderBottomRightRadius:0},theme.isV3&&{borderRightWidth:0});}else if(segment==='last'){return{borderTopLeftRadius:0,borderBottomLeftRadius:0};}else{return _objectSpread({borderRadius:0},theme.isV3&&{borderRightWidth:0});}};var getSegmentedButtonBackgroundColor=function getSegmentedButtonBackgroundColor(_ref4){var checked=_ref4.checked,theme=_ref4.theme;if(checked){if(theme.isV3){return theme.colors.secondaryContainer;}else{return color(theme.colors.primary).alpha(0.12).rgb().string();}}return'transparent';};var getSegmentedButtonBorderColor=function getSegmentedButtonBorderColor(_ref5){var theme=_ref5.theme,disabled=_ref5.disabled,checked=_ref5.checked;if(theme.isV3){if(disabled){return theme.colors.surfaceDisabled;}return theme.colors.outline;}if(checked){return theme.colors.primary;}return color(theme.dark?white:black).alpha(0.29).rgb().string();};var getSegmentedButtonBorderWidth=function getSegmentedButtonBorderWidth(_ref6){var theme=_ref6.theme;if(theme.isV3){return 1;}return StyleSheet.hairlineWidth;};var getSegmentedButtonTextColor=function getSegmentedButtonTextColor(_ref7){var theme=_ref7.theme,disabled=_ref7.disabled;if(theme.isV3){if(disabled){return theme.colors.onSurfaceDisabled;}return theme.colors.onSurface;}else{if(disabled){return theme.colors.disabled;}return theme.colors.primary;}};export var getSegmentedButtonColors=function getSegmentedButtonColors(_ref8){var theme=_ref8.theme,disabled=_ref8.disabled,checked=_ref8.checked;var backgroundColor=getSegmentedButtonBackgroundColor({theme:theme,checked:checked});var borderColor=getSegmentedButtonBorderColor({theme:theme,disabled:disabled,checked:checked});var textColor=getSegmentedButtonTextColor({theme:theme,disabled:disabled});var borderWidth=getSegmentedButtonBorderWidth({theme:theme});return{backgroundColor:backgroundColor,borderColor:borderColor,textColor:textColor,borderWidth:borderWidth};};","map":{"version":3,"mappings":"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","names":["color","black","white","DEFAULT_PADDING","getSegmentedButtonDensityPadding","_ref","density","padding","getDisabledSegmentedButtonStyle","_ref2","theme","index","buttons","width","getSegmentedButtonBorderWidth","isDisabled","_buttons$index","disabled","isNextDisabled","_buttons","borderRightWidth","getSegmentedButtonBorderRadius","_ref3","segment","borderTopRightRadius","borderBottomRightRadius","isV3","borderTopLeftRadius","borderBottomLeftRadius","borderRadius","getSegmentedButtonBackgroundColor","_ref4","checked","colors","secondaryContainer","primary","alpha","rgb","string","getSegmentedButtonBorderColor","_ref5","surfaceDisabled","outline","dark","_ref6","StyleSheet","hairlineWidth","getSegmentedButtonTextColor","_ref7","onSurfaceDisabled","onSurface","getSegmentedButtonColors","_ref8","backgroundColor","borderColor","textColor","borderWidth"],"sources":["utils.ts"],"sourcesContent":["import { StyleSheet, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  checked: boolean;\n};\n\nconst DEFAULT_PADDING = 9;\n\nexport const getSegmentedButtonDensityPadding = ({\n  density,\n}: {\n  density?: 'regular' | 'small' | 'medium' | 'high';\n}) => {\n  let padding = DEFAULT_PADDING;\n\n  switch (density) {\n    case 'small':\n      return padding - 2;\n    case 'medium':\n      return padding - 4;\n    case 'high':\n      return padding - 8;\n    default:\n      return padding;\n  }\n};\n\nexport const getDisabledSegmentedButtonStyle = ({\n  theme,\n  index,\n  buttons,\n}: {\n  theme: InternalTheme;\n  buttons: { disabled?: boolean }[];\n  index: number;\n}): ViewStyle => {\n  const width = getSegmentedButtonBorderWidth({ theme });\n  const isDisabled = buttons[index]?.disabled;\n  const isNextDisabled = buttons[index + 1]?.disabled;\n\n  if (!isDisabled && isNextDisabled) {\n    return {\n      borderRightWidth: width,\n    };\n  }\n  return {};\n};\n\nexport const getSegmentedButtonBorderRadius = ({\n  segment,\n  theme,\n}: {\n  theme: InternalTheme;\n  segment?: 'first' | 'last';\n}): ViewStyle => {\n  if (segment === 'first') {\n    return {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  } else if (segment === 'last') {\n    return {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    };\n  } else {\n    return {\n      borderRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  }\n};\n\nconst getSegmentedButtonBackgroundColor = ({ checked, theme }: BaseProps) => {\n  if (checked) {\n    if (theme.isV3) {\n      return theme.colors.secondaryContainer;\n    } else {\n      return color(theme.colors.primary).alpha(0.12).rgb().string();\n    }\n  }\n  return 'transparent';\n};\n\nconst getSegmentedButtonBorderColor = ({\n  theme,\n  disabled,\n  checked,\n}: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.surfaceDisabled;\n    }\n    return theme.colors.outline;\n  }\n  if (checked) {\n    return theme.colors.primary;\n  }\n\n  return color(theme.dark ? white : black)\n    .alpha(0.29)\n    .rgb()\n    .string();\n};\n\nconst getSegmentedButtonBorderWidth = ({\n  theme,\n}: Omit<BaseProps, 'disabled' | 'checked'>) => {\n  if (theme.isV3) {\n    return 1;\n  }\n\n  return StyleSheet.hairlineWidth;\n};\n\nconst getSegmentedButtonTextColor = ({\n  theme,\n  disabled,\n}: Omit<BaseProps, 'checked'>) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.onSurface;\n  } else {\n    if (disabled) {\n      return theme.colors.disabled;\n    }\n    return theme.colors.primary;\n  }\n};\n\nexport const getSegmentedButtonColors = ({\n  theme,\n  disabled,\n  checked,\n}: BaseProps) => {\n  const backgroundColor = getSegmentedButtonBackgroundColor({\n    theme,\n    checked,\n  });\n  const borderColor = getSegmentedButtonBorderColor({\n    theme,\n    disabled,\n    checked,\n  });\n  const textColor = getSegmentedButtonTextColor({ theme, disabled });\n  const borderWidth = getSegmentedButtonBorderWidth({ theme });\n\n  return { backgroundColor, borderColor, textColor, borderWidth };\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{nanoid}from'nanoid/non-secure';import BaseRouter from\"./BaseRouter\";export var StackActions={replace:function replace(name,params){return{type:'REPLACE',payload:{name:name,params:params}};},push:function push(name,params){return{type:'PUSH',payload:{name:name,params:params}};},pop:function pop(){var count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;return{type:'POP',payload:{count:count}};},popToTop:function popToTop(){return{type:'POP_TO_TOP'};}};export default function StackRouter(options){var router=_objectSpread(_objectSpread({},BaseRouter),{},{type:'stack',getInitialState:function getInitialState(_ref){var routeNames=_ref.routeNames,routeParamList=_ref.routeParamList;var initialRouteName=options.initialRouteName!==undefined&&routeNames.includes(options.initialRouteName)?options.initialRouteName:routeNames[0];return{stale:false,type:'stack',key:\"stack-\"+nanoid(),index:0,routeNames:routeNames,routes:[{key:initialRouteName+\"-\"+nanoid(),name:initialRouteName,params:routeParamList[initialRouteName]}]};},getRehydratedState:function getRehydratedState(partialState,_ref2){var routeNames=_ref2.routeNames,routeParamList=_ref2.routeParamList;var state=partialState;if(state.stale===false){return state;}var routes=state.routes.filter(function(route){return routeNames.includes(route.name);}).map(function(route){return _objectSpread(_objectSpread({},route),{},{key:route.key||route.name+\"-\"+nanoid(),params:routeParamList[route.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[route.name]),route.params):route.params});});if(routes.length===0){var initialRouteName=options.initialRouteName!==undefined?options.initialRouteName:routeNames[0];routes.push({key:initialRouteName+\"-\"+nanoid(),name:initialRouteName,params:routeParamList[initialRouteName]});}return{stale:false,type:'stack',key:\"stack-\"+nanoid(),index:routes.length-1,routeNames:routeNames,routes:routes};},getStateForRouteNamesChange:function getStateForRouteNamesChange(state,_ref3){var routeNames=_ref3.routeNames,routeParamList=_ref3.routeParamList,routeKeyChanges=_ref3.routeKeyChanges;var routes=state.routes.filter(function(route){return routeNames.includes(route.name)&&!routeKeyChanges.includes(route.name);});if(routes.length===0){var initialRouteName=options.initialRouteName!==undefined&&routeNames.includes(options.initialRouteName)?options.initialRouteName:routeNames[0];routes.push({key:initialRouteName+\"-\"+nanoid(),name:initialRouteName,params:routeParamList[initialRouteName]});}return _objectSpread(_objectSpread({},state),{},{routeNames:routeNames,routes:routes,index:Math.min(state.index,routes.length-1)});},getStateForRouteFocus:function getStateForRouteFocus(state,key){var index=state.routes.findIndex(function(r){return r.key===key;});if(index===-1||index===state.index){return state;}return _objectSpread(_objectSpread({},state),{},{index:index,routes:state.routes.slice(0,index+1)});},getStateForAction:function getStateForAction(state,action,options){var routeParamList=options.routeParamList;switch(action.type){case'REPLACE':{var index=action.target===state.key&&action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(index===-1){return null;}var _action$payload=action.payload,name=_action$payload.name,key=_action$payload.key,params=_action$payload.params;if(!state.routeNames.includes(name)){return null;}return _objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(route,i){return i===index?{key:key!==undefined?key:name+\"-\"+nanoid(),name:name,params:routeParamList[name]!==undefined?_objectSpread(_objectSpread({},routeParamList[name]),params):params}:route;})});}case'PUSH':if(state.routeNames.includes(action.payload.name)){var getId=options.routeGetIdList[action.payload.name];var id=getId===null||getId===void 0?void 0:getId({params:action.payload.params});var route=id?state.routes.find(function(route){return route.name===action.payload.name&&id===(getId===null||getId===void 0?void 0:getId({params:route.params}));}):undefined;var routes;if(route){routes=state.routes.filter(function(r){return r.key!==route.key;});routes.push(_objectSpread(_objectSpread({},route),{},{params:routeParamList[action.payload.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[action.payload.name]),action.payload.params):action.payload.params}));}else{routes=[].concat(_toConsumableArray(state.routes),[{key:action.payload.name+\"-\"+nanoid(),name:action.payload.name,params:routeParamList[action.payload.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[action.payload.name]),action.payload.params):action.payload.params}]);}return _objectSpread(_objectSpread({},state),{},{index:routes.length-1,routes:routes});}return null;case'POP':{var _index=action.target===state.key&&action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(_index>0){var count=Math.max(_index-action.payload.count+1,1);var _routes=state.routes.slice(0,count).concat(state.routes.slice(_index+1));return _objectSpread(_objectSpread({},state),{},{index:_routes.length-1,routes:_routes});}return null;}case'POP_TO_TOP':return router.getStateForAction(state,{type:'POP',payload:{count:state.routes.length-1}},options);case'NAVIGATE':if(action.payload.name!==undefined&&!state.routeNames.includes(action.payload.name)){return null;}if(action.payload.key||action.payload.name){var _action$payload$path;var _index2=-1;var _getId=action.payload.key===undefined&&action.payload.name!==undefined?options.routeGetIdList[action.payload.name]:undefined;var _id=_getId===null||_getId===void 0?void 0:_getId({params:action.payload.params});if(_id){_index2=state.routes.findIndex(function(route){return route.name===action.payload.name&&_id===(_getId===null||_getId===void 0?void 0:_getId({params:route.params}));});}else if(state.routes[state.index].name===action.payload.name&&action.payload.key===undefined||state.routes[state.index].key===action.payload.key){_index2=state.index;}else{for(var i=state.routes.length-1;i>=0;i--){if(state.routes[i].name===action.payload.name&&action.payload.key===undefined||state.routes[i].key===action.payload.key){_index2=i;break;}}}if(_index2===-1&&action.payload.key&&action.payload.name===undefined){return null;}if(_index2===-1&&action.payload.name!==undefined){var _action$payload$key;var _routes2=[].concat(_toConsumableArray(state.routes),[{key:(_action$payload$key=action.payload.key)!=null?_action$payload$key:action.payload.name+\"-\"+nanoid(),name:action.payload.name,path:action.payload.path,params:routeParamList[action.payload.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[action.payload.name]),action.payload.params):action.payload.params}]);return _objectSpread(_objectSpread({},state),{},{routes:_routes2,index:_routes2.length-1});}var _route=state.routes[_index2];var _params;if(action.payload.merge){_params=action.payload.params!==undefined||routeParamList[_route.name]!==undefined?_objectSpread(_objectSpread(_objectSpread({},routeParamList[_route.name]),_route.params),action.payload.params):_route.params;}else{_params=routeParamList[_route.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[_route.name]),action.payload.params):action.payload.params;}return _objectSpread(_objectSpread({},state),{},{index:_index2,routes:[].concat(_toConsumableArray(state.routes.slice(0,_index2)),[_params!==_route.params||action.payload.path&&action.payload.path!==_route.path?_objectSpread(_objectSpread({},_route),{},{path:(_action$payload$path=action.payload.path)!=null?_action$payload$path:_route.path,params:_params}):state.routes[_index2]])});}return null;case'GO_BACK':if(state.index>0){return router.getStateForAction(state,{type:'POP',payload:{count:1},target:action.target,source:action.source},options);}return null;default:return BaseRouter.getStateForAction(state,action);}},actionCreators:StackActions});return router;}","map":{"version":3,"sources":["StackRouter.tsx"],"names":["nanoid","BaseRouter","StackActions","replace","name","params","type","payload","push","pop","count","popToTop","StackRouter","options","router","getInitialState","routeNames","routeParamList","initialRouteName","undefined","includes","stale","key","index","routes","getRehydratedState","partialState","state","filter","route","map","length","getStateForRouteNamesChange","routeKeyChanges","Math","min","getStateForRouteFocus","findIndex","r","slice","getStateForAction","action","target","source","i","getId","routeGetIdList","id","find","max","concat","path","merge","actionCreators"],"mappings":"i5BAAA,OAASA,MAAM,KAAQ,mBAAmB,CAE1C,MAAOC,WAAU,oBAiFjB,MAAO,IAAMC,aAAY,CAAG,CAC1BC,OAAO,kBAACC,IAAY,CAAEC,MAAe,CAAmB,CACtD,MAAO,CAAEC,IAAI,CAAE,SAAS,CAAEC,OAAO,CAAE,CAAEH,IAAI,CAAJA,IAAI,CAAEC,MAAAA,CAAAA,MAAO,CAAE,CAAC,CACvD,CAAC,CACDG,IAAI,eAACJ,IAAY,CAAEC,MAAe,CAAmB,CACnD,MAAO,CAAEC,IAAI,CAAE,MAAM,CAAEC,OAAO,CAAE,CAAEH,IAAI,CAAJA,IAAI,CAAEC,MAAAA,CAAAA,MAAO,CAAE,CAAC,CACpD,CAAC,CACDI,GAAG,eAAqC,CAAA,GAApCC,MAAa,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAG,CAAC,CACnB,MAAO,CAAEJ,IAAI,CAAE,KAAK,CAAEC,OAAO,CAAE,CAAEG,KAAAA,CAAAA,KAAM,CAAE,CAAC,CAC5C,CAAC,CACDC,QAAQ,oBAAoB,CAC1B,MAAO,CAAEL,IAAI,CAAE,YAAa,CAAC,CAC/B,CACF,CAAC,CAED,cAAe,SAASM,YAAW,CAACC,OAA2B,CAAE,CAC/D,GAAMC,OAGL,gCACIb,UAAU,MAEbK,IAAI,CAAE,OAAO,CAEbS,eAAe,0BAAA,IAAA,CAAiC,CAAhC,GAAEC,WAAU,CAAkB,IAAA,CAA5BA,UAAU,CAAEC,cAAAA,CAAgB,IAAA,CAAhBA,cAAAA,CAC5B,GAAMC,iBAAgB,CACpBL,OAAO,CAACK,gBAAgB,GAAKC,SAAS,EACtCH,UAAU,CAACI,QAAQ,CAACP,OAAO,CAACK,gBAAgB,CAAC,CACzCL,OAAO,CAACK,gBAAgB,CACxBF,UAAU,CAAC,CAAC,CAAC,CAEnB,MAAO,CACLK,KAAK,CAAE,KAAK,CACZf,IAAI,CAAE,OAAO,CACbgB,GAAG,UAAWtB,MAAM,EAAI,CACxBuB,KAAK,CAAE,CAAC,CACRP,UAAU,CAAVA,UAAU,CACVQ,MAAM,CAAE,CACN,CACEF,GAAG,CAAKJ,gBAAiB,KAAGlB,MAAM,EAAI,CACtCI,IAAI,CAAEc,gBAAgB,CACtBb,MAAM,CAAEY,cAAc,CAACC,gBAAgB,CACzC,CAAC,CAEL,CAAC,CACH,CAAC,CAEDO,kBAAkB,6BAACC,YAAY,CAAA,KAAA,CAAkC,CAAhC,GAAEV,WAAU,CAAkB,KAAA,CAA5BA,UAAU,CAAEC,cAAAA,CAAgB,KAAA,CAAhBA,cAAAA,CAC7C,GAAIU,MAAK,CAAGD,YAAY,CAExB,GAAIC,KAAK,CAACN,KAAK,GAAK,KAAK,CAAE,CACzB,MAAOM,MAAK,CACd,CAEA,GAAMH,OAAM,CAAGG,KAAK,CAACH,MAAM,CACxBI,MAAM,CAAEC,SAAAA,KAAK,QAAKb,WAAU,CAACI,QAAQ,CAACS,KAAK,CAACzB,IAAI,CAAC,GAAC,CAClD0B,GAAG,CACDD,SAAAA,KAAK,wCAECA,KAAK,MACRP,GAAG,CAAEO,KAAK,CAACP,GAAG,EAAOO,KAAK,CAACzB,IAAK,KAAGJ,MAAM,EAAI,CAC7CK,MAAM,CACJY,cAAc,CAACY,KAAK,CAACzB,IAAI,CAAC,GAAKe,SAAS,gCAE/BF,cAAc,CAACY,KAAK,CAACzB,IAAI,CAAC,EAC1ByB,KAAK,CAACxB,MAAAA,EAEXwB,KAAK,CAACxB,MAAAA,IACK,CACtB,CAEH,GAAImB,MAAM,CAACO,MAAM,GAAK,CAAC,CAAE,CACvB,GAAMb,iBAAgB,CACpBL,OAAO,CAACK,gBAAgB,GAAKC,SAAS,CAClCN,OAAO,CAACK,gBAAgB,CACxBF,UAAU,CAAC,CAAC,CAAC,CAEnBQ,MAAM,CAAChB,IAAI,CAAC,CACVc,GAAG,CAAKJ,gBAAiB,KAAGlB,MAAM,EAAI,CACtCI,IAAI,CAAEc,gBAAgB,CACtBb,MAAM,CAAEY,cAAc,CAACC,gBAAgB,CACzC,CAAC,CAAC,CACJ,CAEA,MAAO,CACLG,KAAK,CAAE,KAAK,CACZf,IAAI,CAAE,OAAO,CACbgB,GAAG,UAAWtB,MAAM,EAAI,CACxBuB,KAAK,CAAEC,MAAM,CAACO,MAAM,CAAG,CAAC,CACxBf,UAAU,CAAVA,UAAU,CACVQ,MAAAA,CAAAA,MACF,CAAC,CACH,CAAC,CAEDQ,2BAA2B,sCACzBL,KAAK,CAAA,KAAA,CAEL,CADA,GAAEX,WAAU,CAAmC,KAAA,CAA7CA,UAAU,CAAEC,cAAc,CAAmB,KAAA,CAAjCA,cAAc,CAAEgB,eAAAA,CAAiB,KAAA,CAAjBA,eAAAA,CAE9B,GAAMT,OAAM,CAAGG,KAAK,CAACH,MAAM,CAACI,MAAM,CAC/BC,SAAAA,KAAK,QACJb,WAAU,CAACI,QAAQ,CAACS,KAAK,CAACzB,IAAI,CAAC,EAC/B,CAAC6B,eAAe,CAACb,QAAQ,CAACS,KAAK,CAACzB,IAAI,CAAC,GACxC,CAED,GAAIoB,MAAM,CAACO,MAAM,GAAK,CAAC,CAAE,CACvB,GAAMb,iBAAgB,CACpBL,OAAO,CAACK,gBAAgB,GAAKC,SAAS,EACtCH,UAAU,CAACI,QAAQ,CAACP,OAAO,CAACK,gBAAgB,CAAC,CACzCL,OAAO,CAACK,gBAAgB,CACxBF,UAAU,CAAC,CAAC,CAAC,CAEnBQ,MAAM,CAAChB,IAAI,CAAC,CACVc,GAAG,CAAKJ,gBAAiB,KAAGlB,MAAM,EAAI,CACtCI,IAAI,CAAEc,gBAAgB,CACtBb,MAAM,CAAEY,cAAc,CAACC,gBAAgB,CACzC,CAAC,CAAC,CACJ,CAEA,sCACKS,KAAK,MACRX,UAAU,CAAVA,UAAU,CACVQ,MAAM,CAANA,MAAM,CACND,KAAK,CAAEW,IAAI,CAACC,GAAG,CAACR,KAAK,CAACJ,KAAK,CAAEC,MAAM,CAACO,MAAM,CAAG,CAAC,CAAA,GAElD,CAAC,CAEDK,qBAAqB,gCAACT,KAAK,CAAEL,GAAG,CAAE,CAChC,GAAMC,MAAK,CAAGI,KAAK,CAACH,MAAM,CAACa,SAAS,CAAEC,SAAAA,CAAC,QAAKA,EAAC,CAAChB,GAAG,GAAKA,GAAG,GAAC,CAE1D,GAAIC,KAAK,GAAK,CAAC,CAAC,EAAIA,KAAK,GAAKI,KAAK,CAACJ,KAAK,CAAE,CACzC,MAAOI,MAAK,CACd,CAEA,sCACKA,KAAK,MACRJ,KAAK,CAALA,KAAK,CACLC,MAAM,CAAEG,KAAK,CAACH,MAAM,CAACe,KAAK,CAAC,CAAC,CAAEhB,KAAK,CAAG,CAAC,CAAA,GAE3C,CAAC,CAEDiB,iBAAiB,4BAACb,KAAK,CAAEc,MAAM,CAAE5B,OAAO,CAAE,CACxC,GAAQI,eAAAA,CAAmBJ,OAAO,CAA1BI,cAAAA,CAER,OAAQwB,MAAM,CAACnC,IAAI,EACjB,IAAK,SAAS,CAAE,CACd,GAAMiB,MAAK,CACTkB,MAAM,CAACC,MAAM,GAAKf,KAAK,CAACL,GAAG,EAAImB,MAAM,CAACE,MAAM,CACxChB,KAAK,CAACH,MAAM,CAACa,SAAS,CAAEC,SAAAA,CAAC,QAAKA,EAAC,CAAChB,GAAG,GAAKmB,MAAM,CAACE,MAAM,GAAC,CACtDhB,KAAK,CAACJ,KAAK,CAEjB,GAAIA,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,MAAO,KAAI,CACb,CAEA,oBAA8BkB,MAAM,CAAClC,OAAO,CAApCH,IAAI,iBAAJA,IAAI,CAAEkB,GAAG,iBAAHA,GAAG,CAAEjB,MAAAA,iBAAAA,MAAAA,CAEnB,GAAI,CAACsB,KAAK,CAACX,UAAU,CAACI,QAAQ,CAAChB,IAAI,CAAC,CAAE,CACpC,MAAO,KAAI,CACb,CAEA,sCACKuB,KAAK,MACRH,MAAM,CAAEG,KAAK,CAACH,MAAM,CAACM,GAAG,CAAC,SAACD,KAAK,CAAEe,CAAC,QAChCA,EAAC,GAAKrB,KAAK,CACP,CACED,GAAG,CAAEA,GAAG,GAAKH,SAAS,CAAGG,GAAG,CAAMlB,IAAK,KAAGJ,MAAM,EAAI,CACpDI,IAAI,CAAJA,IAAI,CACJC,MAAM,CACJY,cAAc,CAACb,IAAI,CAAC,GAAKe,SAAS,gCAEzBF,cAAc,CAACb,IAAI,CAAC,EACpBC,MAAAA,EAELA,MACR,CAAC,CACDwB,KAAK,GAAA,GAGf,CAEA,IAAK,MAAM,CACT,GAAIF,KAAK,CAACX,UAAU,CAACI,QAAQ,CAACqB,MAAM,CAAClC,OAAO,CAACH,IAAI,CAAC,CAAE,CAClD,GAAMyC,MAAK,CAAGhC,OAAO,CAACiC,cAAc,CAACL,MAAM,CAAClC,OAAO,CAACH,IAAI,CAAC,CACzD,GAAM2C,GAAE,CAAGF,KAAK,GAAA,IAAA,EAALA,KAAK,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAALA,KAAK,CAAG,CAAExC,MAAM,CAAEoC,MAAM,CAAClC,OAAO,CAACF,MAAO,CAAC,CAAC,CAErD,GAAMwB,MAAK,CAAGkB,EAAE,CACZpB,KAAK,CAACH,MAAM,CAACwB,IAAI,CACdnB,SAAAA,KAAK,QACJA,MAAK,CAACzB,IAAI,GAAKqC,MAAM,CAAClC,OAAO,CAACH,IAAI,EAClC2C,EAAE,IAAKF,KAAK,GAAA,IAAA,EAALA,KAAK,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAALA,KAAK,CAAG,CAAExC,MAAM,CAAEwB,KAAK,CAACxB,MAAO,CAAC,CAAC,CAAA,GAC3C,CACDc,SAAS,CAEb,GAAIK,OAAuB,CAE3B,GAAIK,KAAK,CAAE,CACTL,MAAM,CAAGG,KAAK,CAACH,MAAM,CAACI,MAAM,CAAEU,SAAAA,CAAC,QAAKA,EAAC,CAAChB,GAAG,GAAKO,KAAK,CAACP,GAAG,GAAC,CACxDE,MAAM,CAAChB,IAAI,gCACNqB,KAAK,MACRxB,MAAM,CACJY,cAAc,CAACwB,MAAM,CAAClC,OAAO,CAACH,IAAI,CAAC,GAAKe,SAAS,gCAExCF,cAAc,CAACwB,MAAM,CAAClC,OAAO,CAACH,IAAI,CAAC,EACnCqC,MAAM,CAAClC,OAAO,CAACF,MAAAA,EAEpBoC,MAAM,CAAClC,OAAO,CAACF,MAAAA,GACrB,CACJ,CAAC,IAAM,CACLmB,MAAM,8BACDG,KAAK,CAACH,MAAM,GACf,CACEF,GAAG,CAAKmB,MAAM,CAAClC,OAAO,CAACH,IAAK,KAAGJ,MAAM,EAAI,CACzCI,IAAI,CAAEqC,MAAM,CAAClC,OAAO,CAACH,IAAI,CACzBC,MAAM,CACJY,cAAc,CAACwB,MAAM,CAAClC,OAAO,CAACH,IAAI,CAAC,GAAKe,SAAS,gCAExCF,cAAc,CAACwB,MAAM,CAAClC,OAAO,CAACH,IAAI,CAAC,EACnCqC,MAAM,CAAClC,OAAO,CAACF,MAAAA,EAEpBoC,MAAM,CAAClC,OAAO,CAACF,MACvB,CAAC,EACF,CACH,CAEA,sCACKsB,KAAK,MACRJ,KAAK,CAAEC,MAAM,CAACO,MAAM,CAAG,CAAC,CACxBP,MAAAA,CAAAA,MAAAA,GAEJ,CAEA,MAAO,KAAI,CAEb,IAAK,KAAK,CAAE,CACV,GAAMD,OAAK,CACTkB,MAAM,CAACC,MAAM,GAAKf,KAAK,CAACL,GAAG,EAAImB,MAAM,CAACE,MAAM,CACxChB,KAAK,CAACH,MAAM,CAACa,SAAS,CAAEC,SAAAA,CAAC,QAAKA,EAAC,CAAChB,GAAG,GAAKmB,MAAM,CAACE,MAAM,GAAC,CACtDhB,KAAK,CAACJ,KAAK,CAEjB,GAAIA,MAAK,CAAG,CAAC,CAAE,CACb,GAAMb,MAAK,CAAGwB,IAAI,CAACe,GAAG,CAAC1B,MAAK,CAAGkB,MAAM,CAAClC,OAAO,CAACG,KAAK,CAAG,CAAC,CAAE,CAAC,CAAC,CAC3D,GAAMc,QAAM,CAAGG,KAAK,CAACH,MAAM,CACxBe,KAAK,CAAC,CAAC,CAAE7B,KAAK,CAAC,CACfwC,MAAM,CAACvB,KAAK,CAACH,MAAM,CAACe,KAAK,CAAChB,MAAK,CAAG,CAAC,CAAC,CAAC,CAExC,sCACKI,KAAK,MACRJ,KAAK,CAAEC,OAAM,CAACO,MAAM,CAAG,CAAC,CACxBP,MAAAA,CAAAA,OAAAA,GAEJ,CAEA,MAAO,KAAI,CACb,CAEA,IAAK,YAAY,CACf,MAAOV,OAAM,CAAC0B,iBAAiB,CAC7Bb,KAAK,CACL,CACErB,IAAI,CAAE,KAAK,CACXC,OAAO,CAAE,CAAEG,KAAK,CAAEiB,KAAK,CAACH,MAAM,CAACO,MAAM,CAAG,CAAE,CAC5C,CAAC,CACDlB,OAAO,CACR,CAEH,IAAK,UAAU,CACb,GACE4B,MAAM,CAAClC,OAAO,CAACH,IAAI,GAAKe,SAAS,EACjC,CAACQ,KAAK,CAACX,UAAU,CAACI,QAAQ,CAACqB,MAAM,CAAClC,OAAO,CAACH,IAAI,CAAC,CAC/C,CACA,MAAO,KAAI,CACb,CAEA,GAAIqC,MAAM,CAAClC,OAAO,CAACe,GAAG,EAAImB,MAAM,CAAClC,OAAO,CAACH,IAAI,CAAE,0BAE7C,GAAImB,QAAK,CAAG,CAAC,CAAC,CAEd,GAAMsB,OAAK,CAETJ,MAAM,CAAClC,OAAO,CAACe,GAAG,GAAKH,SAAS,EAChCsB,MAAM,CAAClC,OAAO,CAACH,IAAI,GAAKe,SAAS,CAC7BN,OAAO,CAACiC,cAAc,CAACL,MAAM,CAAClC,OAAO,CAACH,IAAI,CAAC,CAC3Ce,SAAS,CACf,GAAM4B,IAAE,CAAGF,MAAK,GAAA,IAAA,EAALA,MAAK,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAALA,MAAK,CAAG,CAAExC,MAAM,CAAEoC,MAAM,CAAClC,OAAO,CAACF,MAAO,CAAC,CAAC,CAErD,GAAI0C,GAAE,CAAE,CACNxB,OAAK,CAAGI,KAAK,CAACH,MAAM,CAACa,SAAS,CAC3BR,SAAAA,KAAK,QACJA,MAAK,CAACzB,IAAI,GAAKqC,MAAM,CAAClC,OAAO,CAACH,IAAI,EAClC2C,GAAE,IAAKF,MAAK,GAAA,IAAA,EAALA,MAAK,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAALA,MAAK,CAAG,CAAExC,MAAM,CAAEwB,KAAK,CAACxB,MAAO,CAAC,CAAC,CAAA,GAC3C,CACH,CAAC,IAAM,IACJsB,KAAK,CAACH,MAAM,CAACG,KAAK,CAACJ,KAAK,CAAC,CAACnB,IAAI,GAAKqC,MAAM,CAAClC,OAAO,CAACH,IAAI,EACrDqC,MAAM,CAAClC,OAAO,CAACe,GAAG,GAAKH,SAAS,EAClCQ,KAAK,CAACH,MAAM,CAACG,KAAK,CAACJ,KAAK,CAAC,CAACD,GAAG,GAAKmB,MAAM,CAAClC,OAAO,CAACe,GAAG,CACpD,CACAC,OAAK,CAAGI,KAAK,CAACJ,KAAK,CACrB,CAAC,IAAM,CACL,IAAK,GAAIqB,EAAC,CAAGjB,KAAK,CAACH,MAAM,CAACO,MAAM,CAAG,CAAC,CAAEa,CAAC,EAAI,CAAC,CAAEA,CAAC,EAAE,CAAE,CACjD,GACGjB,KAAK,CAACH,MAAM,CAACoB,CAAC,CAAC,CAACxC,IAAI,GAAKqC,MAAM,CAAClC,OAAO,CAACH,IAAI,EAC3CqC,MAAM,CAAClC,OAAO,CAACe,GAAG,GAAKH,SAAS,EAClCQ,KAAK,CAACH,MAAM,CAACoB,CAAC,CAAC,CAACtB,GAAG,GAAKmB,MAAM,CAAClC,OAAO,CAACe,GAAG,CAC1C,CACAC,OAAK,CAAGqB,CAAC,CACT,MACF,CACF,CACF,CAEA,GACErB,OAAK,GAAK,CAAC,CAAC,EACZkB,MAAM,CAAClC,OAAO,CAACe,GAAG,EAClBmB,MAAM,CAAClC,OAAO,CAACH,IAAI,GAAKe,SAAS,CACjC,CACA,MAAO,KAAI,CACb,CAEA,GAAII,OAAK,GAAK,CAAC,CAAC,EAAIkB,MAAM,CAAClC,OAAO,CAACH,IAAI,GAAKe,SAAS,CAAE,yBACrD,GAAMK,SAAM,8BACPG,KAAK,CAACH,MAAM,GACf,CACEF,GAAG,sBACDmB,MAAM,CAAClC,OAAO,CAACe,GAAG,4BAAOmB,MAAM,CAAClC,OAAO,CAACH,IAAK,KAAGJ,MAAM,EAAI,CAC5DI,IAAI,CAAEqC,MAAM,CAAClC,OAAO,CAACH,IAAI,CACzB+C,IAAI,CAAEV,MAAM,CAAClC,OAAO,CAAC4C,IAAI,CACzB9C,MAAM,CACJY,cAAc,CAACwB,MAAM,CAAClC,OAAO,CAACH,IAAI,CAAC,GAAKe,SAAS,gCAExCF,cAAc,CAACwB,MAAM,CAAClC,OAAO,CAACH,IAAI,CAAC,EACnCqC,MAAM,CAAClC,OAAO,CAACF,MAAAA,EAEpBoC,MAAM,CAAClC,OAAO,CAACF,MACvB,CAAC,EACF,CAED,sCACKsB,KAAK,MACRH,MAAM,CAANA,QAAM,CACND,KAAK,CAAEC,QAAM,CAACO,MAAM,CAAG,CAAA,GAE3B,CAEA,GAAMF,OAAK,CAAGF,KAAK,CAACH,MAAM,CAACD,OAAK,CAAC,CAEjC,GAAIlB,QAAM,CAEV,GAAIoC,MAAM,CAAClC,OAAO,CAAC6C,KAAK,CAAE,CACxB/C,OAAM,CACJoC,MAAM,CAAClC,OAAO,CAACF,MAAM,GAAKc,SAAS,EACnCF,cAAc,CAACY,MAAK,CAACzB,IAAI,CAAC,GAAKe,SAAS,8CAE/BF,cAAc,CAACY,MAAK,CAACzB,IAAI,CAAC,EAC1ByB,MAAK,CAACxB,MAAM,EACZoC,MAAM,CAAClC,OAAO,CAACF,MAAAA,EAEpBwB,MAAK,CAACxB,MAAM,CACpB,CAAC,IAAM,CACLA,OAAM,CACJY,cAAc,CAACY,MAAK,CAACzB,IAAI,CAAC,GAAKe,SAAS,gCAE/BF,cAAc,CAACY,MAAK,CAACzB,IAAI,CAAC,EAC1BqC,MAAM,CAAClC,OAAO,CAACF,MAAAA,EAEpBoC,MAAM,CAAClC,OAAO,CAACF,MAAM,CAC7B,CAEA,sCACKsB,KAAK,MACRJ,KAAK,CAALA,OAAK,CACLC,MAAM,8BACDG,KAAK,CAACH,MAAM,CAACe,KAAK,CAAC,CAAC,CAAEhB,OAAK,CAAC,GAC/BlB,OAAM,GAAKwB,MAAK,CAACxB,MAAM,EACtBoC,MAAM,CAAClC,OAAO,CAAC4C,IAAI,EAAIV,MAAM,CAAClC,OAAO,CAAC4C,IAAI,GAAKtB,MAAK,CAACsB,IAAK,gCAElDtB,MAAK,MACRsB,IAAI,uBAAEV,MAAM,CAAClC,OAAO,CAAC4C,IAAI,6BAAItB,MAAK,CAACsB,IAAI,CACvC9C,MAAAA,CAAAA,OAAAA,GAEFsB,KAAK,CAACH,MAAM,CAACD,OAAK,CAAC,EAAA,GAG7B,CAEA,MAAO,KAAI,CAEb,IAAK,SAAS,CACZ,GAAII,KAAK,CAACJ,KAAK,CAAG,CAAC,CAAE,CACnB,MAAOT,OAAM,CAAC0B,iBAAiB,CAC7Bb,KAAK,CACL,CACErB,IAAI,CAAE,KAAK,CACXC,OAAO,CAAE,CAAEG,KAAK,CAAE,CAAE,CAAC,CACrBgC,MAAM,CAAED,MAAM,CAACC,MAAM,CACrBC,MAAM,CAAEF,MAAM,CAACE,MACjB,CAAC,CACD9B,OAAO,CACR,CACH,CAEA,MAAO,KAAI,CAEb,QACE,MAAOZ,WAAU,CAACuC,iBAAiB,CAACb,KAAK,CAAEc,MAAM,CAAC,CAAA,CAExD,CAAC,CAEDY,cAAc,CAAEnD,YAAAA,EACjB,CAED,MAAOY,OAAM,CACf","sourceRoot":"../../src","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport BaseRouter from './BaseRouter';\nexport const StackActions = {\n  replace(name, params) {\n    return {\n      type: 'REPLACE',\n      payload: {\n        name,\n        params\n      }\n    };\n  },\n  push(name, params) {\n    return {\n      type: 'PUSH',\n      payload: {\n        name,\n        params\n      }\n    };\n  },\n  pop() {\n    let count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return {\n      type: 'POP',\n      payload: {\n        count\n      }\n    };\n  },\n  popToTop() {\n    return {\n      type: 'POP_TO_TOP'\n    };\n  }\n};\nexport default function StackRouter(options) {\n  const router = {\n    ...BaseRouter,\n    type: 'stack',\n    getInitialState(_ref) {\n      let {\n        routeNames,\n        routeParamList\n      } = _ref;\n      const initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [{\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        }]\n      };\n    },\n    getRehydratedState(partialState, _ref2) {\n      let {\n        routeNames,\n        routeParamList\n      } = _ref2;\n      let state = partialState;\n      if (state.stale === false) {\n        return state;\n      }\n      const routes = state.routes.filter(route => routeNames.includes(route.name)).map(route => ({\n        ...route,\n        key: route.key || `${route.name}-${nanoid()}`,\n        params: routeParamList[route.name] !== undefined ? {\n          ...routeParamList[route.name],\n          ...route.params\n        } : route.params\n      }));\n      if (routes.length === 0) {\n        const initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes\n      };\n    },\n    getStateForRouteNamesChange(state, _ref3) {\n      let {\n        routeNames,\n        routeParamList,\n        routeKeyChanges\n      } = _ref3;\n      const routes = state.routes.filter(route => routeNames.includes(route.name) && !routeKeyChanges.includes(route.name));\n      if (routes.length === 0) {\n        const initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1)\n      };\n    },\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex(r => r.key === key);\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1)\n      };\n    },\n    getStateForAction(state, action, options) {\n      const {\n        routeParamList\n      } = options;\n      switch (action.type) {\n        case 'REPLACE':\n          {\n            const index = action.target === state.key && action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            const {\n              name,\n              key,\n              params\n            } = action.payload;\n            if (!state.routeNames.includes(name)) {\n              return null;\n            }\n            return {\n              ...state,\n              routes: state.routes.map((route, i) => i === index ? {\n                key: key !== undefined ? key : `${name}-${nanoid()}`,\n                name,\n                params: routeParamList[name] !== undefined ? {\n                  ...routeParamList[name],\n                  ...params\n                } : params\n              } : route)\n            };\n          }\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            const route = id ? state.routes.find(route => route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n              params: route.params\n            }))) : undefined;\n            let routes;\n            if (route) {\n              routes = state.routes.filter(r => r.key !== route.key);\n              routes.push({\n                ...route,\n                params: routeParamList[action.payload.name] !== undefined ? {\n                  ...routeParamList[action.payload.name],\n                  ...action.payload.params\n                } : action.payload.params\n              });\n            } else {\n              routes = [...state.routes, {\n                key: `${action.payload.name}-${nanoid()}`,\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? {\n                  ...routeParamList[action.payload.name],\n                  ...action.payload.params\n                } : action.payload.params\n              }];\n            }\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes\n            };\n          }\n          return null;\n        case 'POP':\n          {\n            const index = action.target === state.key && action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index > 0) {\n              const count = Math.max(index - action.payload.count + 1, 1);\n              const routes = state.routes.slice(0, count).concat(state.routes.slice(index + 1));\n              return {\n                ...state,\n                index: routes.length - 1,\n                routes\n              };\n            }\n            return null;\n          }\n        case 'POP_TO_TOP':\n          return router.getStateForAction(state, {\n            type: 'POP',\n            payload: {\n              count: state.routes.length - 1\n            }\n          }, options);\n        case 'NAVIGATE':\n          if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n            const getId =\n            // `getId` and `key` can't be used together\n            action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n            const id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            if (id) {\n              index = state.routes.findIndex(route => route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n                params: route.params\n              })));\n            } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n            if (index === -1 && action.payload.key && action.payload.name === undefined) {\n              return null;\n            }\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [...state.routes, {\n                key: action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                name: action.payload.name,\n                path: action.payload.path,\n                params: routeParamList[action.payload.name] !== undefined ? {\n                  ...routeParamList[action.payload.name],\n                  ...action.payload.params\n                } : action.payload.params\n              }];\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1\n              };\n            }\n            const route = state.routes[index];\n            let params;\n            if (action.payload.merge) {\n              params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? {\n                ...routeParamList[route.name],\n                ...route.params,\n                ...action.payload.params\n              } : route.params;\n            } else {\n              params = routeParamList[route.name] !== undefined ? {\n                ...routeParamList[route.name],\n                ...action.payload.params\n              } : action.payload.params;\n            }\n            return {\n              ...state,\n              index,\n              routes: [...state.routes.slice(0, index), params !== route.params || action.payload.path && action.payload.path !== route.path ? {\n                ...route,\n                path: action.payload.path ?? route.path,\n                params\n              } : state.routes[index]]\n            };\n          }\n          return null;\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: 1\n              },\n              target: action.target,\n              source: action.source\n            }, options);\n          }\n          return null;\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n    actionCreators: StackActions\n  };\n  return router;\n}\n//# sourceMappingURL=StackRouter.js.map"]},"metadata":{},"sourceType":"module"}
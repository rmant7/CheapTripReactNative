{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"theme\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import NativeText from\"react-native-web/dist/exports/Text\";import{useInternalTheme}from\"../../../core/theming\";var Text=function Text(_ref,ref){var _theme$fonts,_theme$colors;var style=_ref.style,overrideTheme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var root=React.useRef(null);var theme=useInternalTheme(overrideTheme);React.useImperativeHandle(ref,function(){return{setNativeProps:function setNativeProps(args){var _root$current;return(_root$current=root.current)===null||_root$current===void 0?void 0:_root$current.setNativeProps(args);}};});return React.createElement(NativeText,_extends({},rest,{ref:root,style:[_objectSpread(_objectSpread({},!theme.isV3&&((_theme$fonts=theme.fonts)===null||_theme$fonts===void 0?void 0:_theme$fonts.regular)),{},{color:theme.isV3?(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.onSurface:theme.colors.text}),styles.text,style]}));};var styles=StyleSheet.create({text:{textAlign:'left'}});export default React.forwardRef(Text);","map":{"version":3,"mappings":"wuCAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,6HAU9B,OAASC,gBAAgB,6BAiBzB,GAAMC,KAA+C,CAAG,QAAlDA,KAA+C,CAAGC,KAEtDC,GAAG,CACA,mCAFDC,MAAK,CAAwCF,KAA7CE,KAAK,CAASC,aAAa,CAAkBH,KAAtCI,KAAK,CAAoBC,8BAAaL,gBAG/C,GAAMM,KAAI,CAAGT,KAAK,CAACU,MAAM,CAAoB,IAAI,CAAC,CAClD,GAAMH,MAAK,CAAGN,gBAAgB,CAACK,aAAa,CAAC,CAE7CN,KAAK,CAACW,mBAAmB,CAACP,GAAG,CAAE,iBAAO,CACpCQ,cAAc,CAAGC,4BAAY,yCAAKJ,IAAI,CAACK,OAAO,wCAAZC,cAAcH,cAAc,CAACC,IAAI,CAAC,EACtE,CAAC,EAAC,CAAC,CAEH,MACEb,qBAACgB,UAAU,aACLR,IAAI,EACRJ,GAAG,CAAEK,IAAK,CACVJ,KAAK,CAAE,gCAEC,CAACE,KAAK,CAACU,IAAI,iBAAIV,KAAK,CAACW,KAAK,uCAAXC,aAAaC,OAAO,OACvCC,KAAK,CAAEd,KAAK,CAACU,IAAI,gBAAGV,KAAK,CAACe,MAAM,wCAAZC,cAAcC,SAAS,CAAGjB,KAAK,CAACe,MAAM,CAACG,OAE7DC,MAAM,CAACD,IAAI,CACXpB,KAAK,CACL,GACF,CAEN,CAAC,CAED,GAAMqB,OAAM,CAAGC,UAAU,CAACC,MAAM,CAAC,CAC/BH,IAAI,CAAE,CACJI,SAAS,CAAE,MACb,CACF,CAAC,CAAC,CAEF,cAAe7B,MAAK,CAAC8B,UAAU,CAAC5B,IAAI,CAAC","names":["React","useInternalTheme","Text","_ref","ref","style","overrideTheme","theme","rest","root","useRef","useImperativeHandle","setNativeProps","args","current","_root$current","NativeText","isV3","fonts","_theme$fonts","regular","color","colors","_theme$colors","onSurface","text","styles","StyleSheet","create","textAlign","forwardRef"],"sources":["Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Text as NativeText,\n  TextStyle,\n} from 'react-native';\n\nimport type { MD2Theme } from 'src/types';\n\nimport { useInternalTheme } from '../../../core/theming';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: MD2Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text: React.ForwardRefRenderFunction<{}, Props> = (\n  { style, theme: overrideTheme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n  const theme = useInternalTheme(overrideTheme);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...(!theme.isV3 && theme.fonts?.regular),\n          color: theme.isV3 ? theme.colors?.onSurface : theme.colors.text,\n        },\n        styles.text,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default React.forwardRef(Text);\n"]},"metadata":{},"sourceType":"module"}
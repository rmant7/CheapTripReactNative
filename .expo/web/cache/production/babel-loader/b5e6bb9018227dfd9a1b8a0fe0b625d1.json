{"ast":null,"code":"import color from'color';import{black,white}from\"../../styles/themes/v2/colors\";export var MIN_WIDTH=112;export var MAX_WIDTH=280;var getDisabledColor=function getDisabledColor(theme){if(theme.isV3){return theme.colors.onSurfaceDisabled;}return color(theme.dark?white:black).alpha(0.32).rgb().string();};var getTitleColor=function getTitleColor(_ref){var theme=_ref.theme,disabled=_ref.disabled;if(disabled){return getDisabledColor(theme);}if(theme.isV3){return theme.colors.onSurface;}return color(theme.colors.text).alpha(0.87).rgb().string();};var getIconColor=function getIconColor(_ref2){var theme=_ref2.theme,disabled=_ref2.disabled;if(disabled){return getDisabledColor(theme);}if(theme.isV3){return theme.colors.onSurfaceVariant;}return color(theme.colors.text).alpha(0.54).rgb().string();};export var getMenuItemColor=function getMenuItemColor(_ref3){var theme=_ref3.theme,disabled=_ref3.disabled;return{titleColor:getTitleColor({theme:theme,disabled:disabled}),iconColor:getIconColor({theme:theme,disabled:disabled}),underlayColor:theme.isV3?color(theme.colors.primary).alpha(0.12).rgb().string():undefined};};export var getContentMaxWidth=function getContentMaxWidth(_ref4){var isV3=_ref4.isV3,iconWidth=_ref4.iconWidth,leadingIcon=_ref4.leadingIcon,trailingIcon=_ref4.trailingIcon;if(isV3){if(leadingIcon&&trailingIcon){return MAX_WIDTH-(2*iconWidth+24);}if(leadingIcon||trailingIcon){return MAX_WIDTH-(iconWidth+24);}return MAX_WIDTH-12;}if(leadingIcon){return MAX_WIDTH-(iconWidth+48);}return MAX_WIDTH-16;};","map":{"version":3,"mappings":"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","names":["color","black","white","MIN_WIDTH","MAX_WIDTH","getDisabledColor","theme","isV3","colors","onSurfaceDisabled","dark","alpha","rgb","string","getTitleColor","_ref","disabled","onSurface","text","getIconColor","_ref2","onSurfaceVariant","getMenuItemColor","_ref3","titleColor","iconColor","underlayColor","primary","undefined","getContentMaxWidth","_ref4","iconWidth","leadingIcon","trailingIcon"],"sources":["utils.ts"],"sourcesContent":["import color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\nimport type { IconSource } from '../Icon';\n\nexport const MIN_WIDTH = 112;\nexport const MAX_WIDTH = 280;\n\ntype ContentProps = {\n  isV3: boolean;\n  iconWidth: number;\n  leadingIcon?: IconSource;\n  trailingIcon?: IconSource;\n};\n\ntype ColorProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\nconst getDisabledColor = (theme: InternalTheme) => {\n  if (theme.isV3) {\n    return theme.colors.onSurfaceDisabled;\n  }\n\n  return color(theme.dark ? white : black)\n    .alpha(0.32)\n    .rgb()\n    .string();\n};\n\nconst getTitleColor = ({ theme, disabled }: ColorProps) => {\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurface;\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getIconColor = ({ theme, disabled }: ColorProps) => {\n  if (disabled) {\n    return getDisabledColor(theme);\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nexport const getMenuItemColor = ({ theme, disabled }: ColorProps) => {\n  return {\n    titleColor: getTitleColor({ theme, disabled }),\n    iconColor: getIconColor({ theme, disabled }),\n    underlayColor: theme.isV3\n      ? color(theme.colors.primary).alpha(0.12).rgb().string()\n      : undefined,\n  };\n};\n\nexport const getContentMaxWidth = ({\n  isV3,\n  iconWidth,\n  leadingIcon,\n  trailingIcon,\n}: ContentProps) => {\n  if (isV3) {\n    if (leadingIcon && trailingIcon) {\n      return MAX_WIDTH - (2 * iconWidth + 24);\n    }\n\n    if (leadingIcon || trailingIcon) {\n      return MAX_WIDTH - (iconWidth + 24);\n    }\n\n    return MAX_WIDTH - 12;\n  }\n\n  if (leadingIcon) {\n    return MAX_WIDTH - (iconWidth + 48);\n  }\n\n  return MAX_WIDTH - 16;\n};\n"]},"metadata":{},"sourceType":"module"}
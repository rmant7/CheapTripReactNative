{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import NavigationBuilderContext from\"./NavigationBuilderContext\";import NavigationRouteContext from\"./NavigationRouteContext\";var VISITED_ROUTE_KEYS=Symbol('VISITED_ROUTE_KEYS');export var shouldPreventRemove=function shouldPreventRemove(emitter,beforeRemoveListeners,currentRoutes,nextRoutes,action){var _action$VISITED_ROUTE;var nextRouteKeys=nextRoutes.map(function(route){return route.key;});var removedRoutes=currentRoutes.filter(function(route){return!nextRouteKeys.includes(route.key);}).reverse();var visitedRouteKeys=(_action$VISITED_ROUTE=action[VISITED_ROUTE_KEYS])!=null?_action$VISITED_ROUTE:new Set();var beforeRemoveAction=_objectSpread(_objectSpread({},action),{},_defineProperty({},VISITED_ROUTE_KEYS,visitedRouteKeys));for(var route of removedRoutes){var _beforeRemoveListener;if(visitedRouteKeys.has(route.key)){continue;}var isPrevented=(_beforeRemoveListener=beforeRemoveListeners[route.key])===null||_beforeRemoveListener===void 0?void 0:_beforeRemoveListener.call(beforeRemoveListeners,beforeRemoveAction);if(isPrevented){return true;}visitedRouteKeys.add(route.key);var event=emitter.emit({type:'beforeRemove',target:route.key,data:{action:beforeRemoveAction},canPreventDefault:true});if(event.defaultPrevented){return true;}}return false;};export default function useOnPreventRemove(_ref){var getState=_ref.getState,emitter=_ref.emitter,beforeRemoveListeners=_ref.beforeRemoveListeners;var _React$useContext=React.useContext(NavigationBuilderContext),addKeyedListener=_React$useContext.addKeyedListener;var route=React.useContext(NavigationRouteContext);var routeKey=route===null||route===void 0?void 0:route.key;React.useEffect(function(){if(routeKey){return addKeyedListener===null||addKeyedListener===void 0?void 0:addKeyedListener('beforeRemove',routeKey,function(action){var state=getState();return shouldPreventRemove(emitter,beforeRemoveListeners,state.routes,[],action);});}},[addKeyedListener,beforeRemoveListeners,emitter,getState,routeKey]);}","map":{"version":3,"sources":["useOnPreventRemove.tsx"],"names":["React","NavigationBuilderContext","NavigationRouteContext","VISITED_ROUTE_KEYS","Symbol","shouldPreventRemove","emitter","beforeRemoveListeners","currentRoutes","nextRoutes","action","nextRouteKeys","map","route","key","removedRoutes","filter","includes","reverse","visitedRouteKeys","Set","beforeRemoveAction","has","isPrevented","add","event","emit","type","target","data","canPreventDefault","defaultPrevented","useOnPreventRemove","getState","addKeyedListener","useContext","routeKey","useEffect","state","routes"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nconst VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\nexport const shouldPreventRemove = (emitter, beforeRemoveListeners, currentRoutes, nextRoutes, action) => {\n  const nextRouteKeys = nextRoutes.map(route => route.key);\n\n  // Call these in reverse order so last screens handle the event first\n  const removedRoutes = currentRoutes.filter(route => !nextRouteKeys.includes(route.key)).reverse();\n  const visitedRouteKeys =\n  // @ts-expect-error: add this property to mark that we've already emitted this action\n  action[VISITED_ROUTE_KEYS] ?? new Set();\n  const beforeRemoveAction = {\n    ...action,\n    [VISITED_ROUTE_KEYS]: visitedRouteKeys\n  };\n  for (const route of removedRoutes) {\n    var _beforeRemoveListener;\n    if (visitedRouteKeys.has(route.key)) {\n      // Skip if we've already emitted this action for this screen\n      continue;\n    }\n\n    // First, we need to check if any child screens want to prevent it\n    const isPrevented = (_beforeRemoveListener = beforeRemoveListeners[route.key]) === null || _beforeRemoveListener === void 0 ? void 0 : _beforeRemoveListener.call(beforeRemoveListeners, beforeRemoveAction);\n    if (isPrevented) {\n      return true;\n    }\n    visitedRouteKeys.add(route.key);\n    const event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: {\n        action: beforeRemoveAction\n      },\n      canPreventDefault: true\n    });\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n  return false;\n};\nexport default function useOnPreventRemove(_ref) {\n  let {\n    getState,\n    emitter,\n    beforeRemoveListeners\n  } = _ref;\n  const {\n    addKeyedListener\n  } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const routeKey = route === null || route === void 0 ? void 0 : route.key;\n  React.useEffect(() => {\n    if (routeKey) {\n      return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('beforeRemove', routeKey, action => {\n        const state = getState();\n        return shouldPreventRemove(emitter, beforeRemoveListeners, state.routes, [], action);\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}\n//# sourceMappingURL=useOnPreventRemove.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{Platform,UnavailabilityError}from'expo-modules-core';import invariant from'invariant';import Dimensions from\"react-native-web/dist/exports/Dimensions\";function getBasePath(_ref){var httpServerLocation=_ref.httpServerLocation;if(httpServerLocation[0]==='/'){return httpServerLocation.substr(1);}return httpServerLocation;}function getScale(){return Dimensions.get('window').scale;}function getScaledAssetPath(asset){var scale=AssetSourceResolver.pickScale(asset.scales,getScale());var scaleSuffix=scale===1?'':'@'+scale+'x';var assetDir=getBasePath(asset);return assetDir+'/'+asset.name+scaleSuffix+(asset.type?\".\"+asset.type:'');}var AssetSourceResolver=function(){function AssetSourceResolver(serverUrl,jsbundleUrl,asset){_classCallCheck(this,AssetSourceResolver);this.serverUrl=serverUrl;this.jsbundleUrl=jsbundleUrl;this.asset=asset;}_createClass(AssetSourceResolver,[{key:\"isLoadedFromServer\",value:function isLoadedFromServer(){return!!this.serverUrl;}},{key:\"isLoadedFromFileSystem\",value:function isLoadedFromFileSystem(){return!!(this.jsbundleUrl&&this.jsbundleUrl.startsWith('file://'));}},{key:\"defaultAsset\",value:function defaultAsset(){if(this.isLoadedFromServer()){return this.assetServerURL();}return this.scaledAssetURLNearBundle();}},{key:\"assetServerURL\",value:function assetServerURL(){invariant(!!this.serverUrl,'need server to load from');return this.fromSource(this.serverUrl+getScaledAssetPath(this.asset)+'?platform='+Platform.OS+'&hash='+this.asset.hash);}},{key:\"scaledAssetPath\",value:function scaledAssetPath(){return this.fromSource(getScaledAssetPath(this.asset));}},{key:\"scaledAssetURLNearBundle\",value:function scaledAssetURLNearBundle(){var path=this.jsbundleUrl||'';return this.fromSource(path+getScaledAssetPath(this.asset));}},{key:\"resourceIdentifierWithoutScale\",value:function resourceIdentifierWithoutScale(){throw new UnavailabilityError('react-native','resourceIdentifierWithoutScale()');}},{key:\"drawableFolderInBundle\",value:function drawableFolderInBundle(){throw new UnavailabilityError('react-native','drawableFolderInBundle()');}},{key:\"fromSource\",value:function fromSource(source){return{__packager_asset:true,width:this.asset.width,height:this.asset.height,uri:source,scale:AssetSourceResolver.pickScale(this.asset.scales,getScale())};}}],[{key:\"pickScale\",value:function pickScale(scales,deviceScale){for(var i=0;i<scales.length;i++){if(scales[i]>=deviceScale){return scales[i];}}return scales[scales.length-1]||1;}}]);return AssetSourceResolver;}();export{AssetSourceResolver as default};","map":{"version":3,"mappings":"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","names":["Platform","UnavailabilityError","invariant","getBasePath","httpServerLocation","substr","getScale","Dimensions","get","scale","getScaledAssetPath","asset","AssetSourceResolver","pickScale","scales","scaleSuffix","assetDir","name","type","serverUrl","jsbundleUrl","startsWith","isLoadedFromServer","assetServerURL","scaledAssetURLNearBundle","fromSource","OS","hash","path","source","__packager_asset","width","height","uri","deviceScale","i","length"],"sourceRoot":"","sources":["../src/AssetSourceResolver.web.ts"],"sourcesContent":["import { Platform, UnavailabilityError } from 'expo-modules-core';\nimport invariant from 'invariant';\nimport { Dimensions } from 'react-native';\n\ntype PackagerAsset = {\n  __packager_asset: boolean;\n  fileSystemLocation: string;\n  httpServerLocation: string;\n  width?: number;\n  height?: number;\n  scales: number[];\n  hash: string;\n  name: string;\n  type: string;\n};\n\nfunction getBasePath({ httpServerLocation }: PackagerAsset): string {\n  if (httpServerLocation[0] === '/') {\n    return httpServerLocation.substr(1);\n  }\n  return httpServerLocation;\n}\n\nexport type ResolvedAssetSource = {\n  __packager_asset: boolean;\n  width?: number;\n  height?: number;\n  uri: string;\n  scale: number;\n};\n\nfunction getScale(): number {\n  return Dimensions.get('window').scale;\n}\n\nfunction getScaledAssetPath(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, getScale());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const assetDir = getBasePath(asset);\n  return assetDir + '/' + asset.name + scaleSuffix + (asset.type ? `.${asset.type}` : '');\n}\n\nexport default class AssetSourceResolver {\n  serverUrl?: string | null;\n  // where the jsbundle is being run from\n  jsbundleUrl?: string | null;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(\n    serverUrl: string | undefined | null,\n    jsbundleUrl: string | undefined | null,\n    asset: PackagerAsset\n  ) {\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = jsbundleUrl;\n    this.asset = asset;\n  }\n  isLoadedFromServer(): boolean {\n    return !!this.serverUrl;\n  }\n  isLoadedFromFileSystem(): boolean {\n    return !!(this.jsbundleUrl && this.jsbundleUrl.startsWith('file://'));\n  }\n  defaultAsset(): ResolvedAssetSource {\n    if (this.isLoadedFromServer()) {\n      return this.assetServerURL();\n    }\n\n    return this.scaledAssetURLNearBundle();\n  }\n  assetServerURL(): ResolvedAssetSource {\n    invariant(!!this.serverUrl, 'need server to load from');\n    return this.fromSource(\n      this.serverUrl +\n        getScaledAssetPath(this.asset) +\n        '?platform=' +\n        Platform.OS +\n        '&hash=' +\n        this.asset.hash\n    );\n  }\n  scaledAssetPath(): ResolvedAssetSource {\n    return this.fromSource(getScaledAssetPath(this.asset));\n  }\n  scaledAssetURLNearBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || '';\n    return this.fromSource(path + getScaledAssetPath(this.asset));\n  }\n  resourceIdentifierWithoutScale(): ResolvedAssetSource {\n    throw new UnavailabilityError('react-native', 'resourceIdentifierWithoutScale()');\n  }\n  drawableFolderInBundle(): ResolvedAssetSource {\n    throw new UnavailabilityError('react-native', 'drawableFolderInBundle()');\n  }\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width,\n      height: this.asset.height,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, getScale()),\n    };\n  }\n\n  static pickScale(scales: number[], deviceScale: number): number {\n    for (let i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n    return scales[scales.length - 1] || 1;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import RNDrawerLayoutAndroid from\"react-native-web/dist/exports/DrawerLayoutAndroid\";import RNFlatList from\"react-native-web/dist/exports/FlatList\";import RNSwitch from\"react-native-web/dist/exports/Switch\";import RNTextInput from\"react-native-web/dist/exports/TextInput\";import RNScrollView from\"react-native-web/dist/exports/ScrollView\";import View from\"react-native-web/dist/exports/View\";import createNativeWrapper from\"../handlers/createNativeWrapper\";export var ScrollView=createNativeWrapper(RNScrollView,{disallowInterruption:false});export var Switch=createNativeWrapper(RNSwitch,{shouldCancelWhenOutside:false,shouldActivateOnStart:true,disallowInterruption:true});export var TextInput=createNativeWrapper(RNTextInput);export var DrawerLayoutAndroid=createNativeWrapper(RNDrawerLayoutAndroid,{disallowInterruption:true});DrawerLayoutAndroid.positions=RNDrawerLayoutAndroid.positions;export var RefreshControl=createNativeWrapper(View);export var FlatList=React.forwardRef(function(props,ref){return React.createElement(RNFlatList,_extends({ref:ref},props,{renderScrollComponent:function renderScrollComponent(scrollProps){return React.createElement(ScrollView,scrollProps);}}));});","map":{"version":3,"sources":["GestureComponents.web.tsx"],"names":["React","createNativeWrapper","ScrollView","RNScrollView","disallowInterruption","Switch","RNSwitch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","RNTextInput","DrawerLayoutAndroid","RNDrawerLayoutAndroid","positions","RefreshControl","View","FlatList","forwardRef","props","ref","scrollProps"],"mappings":"uRAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAAA,wYAWA,MAAOC,oBAAP,uCAEA,MAAO,IAAMC,WAAU,CAAGD,mBAAmB,CAACE,YAAD,CAAe,CAC1DC,oBAAoB,CAAE,KADoC,CAAf,CAAtC,CAIP,MAAO,IAAMC,OAAM,CAAGJ,mBAAmB,CAACK,QAAD,CAAW,CAClDC,uBAAuB,CAAE,KADyB,CAElDC,qBAAqB,CAAE,IAF2B,CAGlDJ,oBAAoB,CAAE,IAH4B,CAAX,CAAlC,CAKP,MAAO,IAAMK,UAAS,CAAGR,mBAAmB,CAACS,WAAD,CAArC,CACP,MAAO,IAAMC,oBAAmB,CAAGV,mBAAmB,CAACW,qBAAD,CAAwB,CAC5ER,oBAAoB,CAAE,IADsD,CAAxB,CAA/C,CAIPO,mBAAmB,CAACE,SAApBF,CAAgCC,qBAAqB,CAACC,SAAtDF,CAIA,MAAO,IAAMG,eAAc,CAAGb,mBAAmB,CAACc,IAAD,CAA1C,CAEP,MAAO,IAAMC,SAAQ,CAAG,KAAK,CAACC,UAAN,CACtB,SAAoBC,KAApB,CAAiDC,GAAjD,QACE,MAAA,CAAA,aAAA,CAAC,UAAD,CAAA,QAAA,CAAA,CACE,GAAG,CAAEA,GADP,CAAA,CAEMD,KAFN,CAAA,CAGE,qBAAqB,CAAGE,+BAAAA,WAAD,QAAiB,MAAA,CAAA,aAAA,CAAC,UAAD,CAAgBA,WAAhB,CAAA,EAH1C,CAAA,CAAA,CAFoB,GAAjB","sourcesContent":["import * as React from 'react';\nimport {\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n  View,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: false,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\n// @ts-ignore -- TODO(TS) to investigate if it's needed\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\n// RefreshControl is implemented as a functional component, rendering a View\n// NativeViewGestureHandler needs to set a ref on its child, which cannot be done\n// on functional components\nexport const RefreshControl = createNativeWrapper(View);\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"alpha\",\"family\",\"style\",\"theme\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{useInternalTheme}from\"../../../core/theming\";import Text from\"./Text\";var StyledText=function StyledText(_ref){var _theme$colors,_theme$fonts;var _ref$alpha=_ref.alpha,alpha=_ref$alpha===void 0?1:_ref$alpha,family=_ref.family,style=_ref.style,themeOverrides=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var textColor=color(theme.isV3?theme.colors.onSurface:(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.text).alpha(alpha).rgb().string();var writingDirection=I18nManager.getConstants().isRTL?'rtl':'ltr';return React.createElement(Text,_extends({},rest,{style:[styles.text,_objectSpread(_objectSpread({color:textColor},!theme.isV3&&((_theme$fonts=theme.fonts)===null||_theme$fonts===void 0?void 0:_theme$fonts[family])),{},{writingDirection:writingDirection}),style]}));};var styles=StyleSheet.create({text:{textAlign:'left'}});export default StyledText;","map":{"version":3,"mappings":"yvCAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,qIAG9B,MAAOC,MAAK,KAAM,OAAO,CAGzB,OAASC,gBAAgB,6BACzB,MAAOC,KAAI,cASX,GAAMC,WAAU,CAAG,QAAbA,WAAU,CAAGC,KAMN,+CAALA,KALNC,KAAK,CAALA,KAAK,qBAAG,CAAC,YACTC,MAAM,CAIAF,KAJNE,MAAM,CACNC,KAAK,CAGCH,KAHNG,KAAK,CACEC,cAAc,CAEfJ,KAFNK,KAAK,CACFC,8BACGN,gBACN,GAAMK,MAAK,CAAGR,gBAAgB,CAACO,cAAc,CAAC,CAE9C,GAAMG,UAAS,CAAGX,KAAK,CACrBS,KAAK,CAACG,IAAI,CAAGH,KAAK,CAACI,MAAM,CAACC,SAAS,gBAAGL,KAAK,CAACI,MAAM,wCAAZE,cAAcC,IAAI,CACzD,CACEX,KAAK,CAACA,KAAK,CAAC,CACZY,GAAG,EAAE,CACLC,MAAM,EAAE,CACX,GAAMC,iBAAgB,CAAGC,WAAW,CAACC,YAAY,EAAE,CAACC,KAAK,CAAG,KAAK,CAAG,KAAK,CAEzE,MACEvB,qBAACG,IAAI,aACCQ,IAAI,EACRH,KAAK,CAAE,CACLgB,MAAM,CAACP,IAAI,8BAEThB,KAAK,CAAEW,SAAS,EACZ,CAACF,KAAK,CAACG,IAAI,iBAAIH,KAAK,CAACe,KAAK,uCAAXC,aAAcnB,MAAM,CAAC,OACxCa,oCAEFZ,KAAK,CACL,GACF,CAEN,CAAC,CAED,GAAMgB,OAAM,CAAGG,UAAU,CAACC,MAAM,CAAC,CAC/BX,IAAI,CAAE,CACJY,SAAS,CAAE,MACb,CACF,CAAC,CAAC,CAEF,cAAezB,WAAU","names":["React","color","useInternalTheme","Text","StyledText","_ref","alpha","family","style","themeOverrides","theme","rest","textColor","isV3","colors","onSurface","_theme$colors","text","rgb","string","writingDirection","I18nManager","getConstants","isRTL","styles","fonts","_theme$fonts","StyleSheet","create","textAlign"],"sources":["StyledText.tsx"],"sourcesContent":["import * as React from 'react';\nimport { I18nManager, StyleProp, StyleSheet, TextStyle } from 'react-native';\n\nimport color from 'color';\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../../core/theming';\nimport Text from './Text';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha?: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme?: ThemeProp;\n};\n\nconst StyledText = ({\n  alpha = 1,\n  family,\n  style,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  const textColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme.colors?.text\n  )\n    .alpha(alpha)\n    .rgb()\n    .string();\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        styles.text,\n        {\n          color: textColor,\n          ...(!theme.isV3 && theme.fonts?.[family]),\n          writingDirection,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default StyledText;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"state\",\"descriptors\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,\"string\");return typeof key===\"symbol\"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!==\"object\"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||\"default\");if(typeof res!==\"object\")return res;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(hint===\"string\"?String:Number)(input);}import{HeaderShownContext,SafeAreaProviderCompat}from'@react-navigation/elements';import{StackActions}from'@react-navigation/native';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{SafeAreaInsetsContext}from'react-native-safe-area-context';import ModalPresentationContext from\"../../utils/ModalPresentationContext\";import{GestureHandlerRootView}from\"../GestureHandler\";import HeaderContainer from\"../Header/HeaderContainer\";import CardStack from\"./CardStack\";var GestureHandlerWrapper=GestureHandlerRootView!=null?GestureHandlerRootView:View;var isArrayEqual=function isArrayEqual(a,b){return a.length===b.length&&a.every(function(it,index){return it===b[index];});};var StackView=function(_React$Component){_inherits(StackView,_React$Component);var _super=_createSuper(StackView);function StackView(){var _this;_classCallCheck(this,StackView);_this=_super.apply(this,arguments);_defineProperty(_assertThisInitialized(_this),\"state\",{routes:[],previousRoutes:[],previousDescriptors:{},openingRouteKeys:[],closingRouteKeys:[],replacingRouteKeys:[],descriptors:{}});_defineProperty(_assertThisInitialized(_this),\"getPreviousRoute\",function(_ref){var route=_ref.route;var _this$state=_this.state,closingRouteKeys=_this$state.closingRouteKeys,replacingRouteKeys=_this$state.replacingRouteKeys;var routes=_this.state.routes.filter(function(r){return r.key===route.key||!closingRouteKeys.includes(r.key)&&!replacingRouteKeys.includes(r.key);});var index=routes.findIndex(function(r){return r.key===route.key;});return routes[index-1];});_defineProperty(_assertThisInitialized(_this),\"renderScene\",function(_ref2){var route=_ref2.route;var descriptor=_this.state.descriptors[route.key]||_this.props.descriptors[route.key];if(!descriptor){return null;}return descriptor.render();});_defineProperty(_assertThisInitialized(_this),\"renderHeader\",function(props){return React.createElement(HeaderContainer,props);});_defineProperty(_assertThisInitialized(_this),\"handleOpenRoute\",function(_ref3){var route=_ref3.route;var _this$props=_this.props,state=_this$props.state,navigation=_this$props.navigation;var _this$state2=_this.state,closingRouteKeys=_this$state2.closingRouteKeys,replacingRouteKeys=_this$state2.replacingRouteKeys;if(closingRouteKeys.some(function(key){return key===route.key;})&&replacingRouteKeys.every(function(key){return key!==route.key;})&&state.routeNames.includes(route.name)&&!state.routes.some(function(r){return r.key===route.key;})){navigation.navigate(route);}else{_this.setState(function(state){return{routes:state.replacingRouteKeys.length?state.routes.filter(function(r){return!state.replacingRouteKeys.includes(r.key);}):state.routes,openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;}),replacingRouteKeys:[]};});}});_defineProperty(_assertThisInitialized(_this),\"handleCloseRoute\",function(_ref4){var route=_ref4.route;var _this$props2=_this.props,state=_this$props2.state,navigation=_this$props2.navigation;if(state.routes.some(function(r){return r.key===route.key;})){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.pop()),{},{source:route.key,target:state.key}));}else{_this.setState(function(state){return{routes:state.routes.filter(function(r){return r.key!==route.key;}),openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;})};});}});_defineProperty(_assertThisInitialized(_this),\"handleTransitionStart\",function(_ref5,closing){var route=_ref5.route;return _this.props.navigation.emit({type:'transitionStart',data:{closing:closing},target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleTransitionEnd\",function(_ref6,closing){var route=_ref6.route;return _this.props.navigation.emit({type:'transitionEnd',data:{closing:closing},target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureStart\",function(_ref7){var route=_ref7.route;_this.props.navigation.emit({type:'gestureStart',target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureEnd\",function(_ref8){var route=_ref8.route;_this.props.navigation.emit({type:'gestureEnd',target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureCancel\",function(_ref9){var route=_ref9.route;_this.props.navigation.emit({type:'gestureCancel',target:route.key});});return _this;}_createClass(StackView,[{key:\"render\",value:function render(){var _this2=this;var _this$props3=this.props,state=_this$props3.state,_=_this$props3.descriptors,rest=_objectWithoutProperties(_this$props3,_excluded);var _this$state3=this.state,routes=_this$state3.routes,descriptors=_this$state3.descriptors,openingRouteKeys=_this$state3.openingRouteKeys,closingRouteKeys=_this$state3.closingRouteKeys;return React.createElement(GestureHandlerWrapper,{style:styles.container},React.createElement(SafeAreaProviderCompat,null,React.createElement(SafeAreaInsetsContext.Consumer,null,function(insets){return React.createElement(ModalPresentationContext.Consumer,null,function(isParentModal){return React.createElement(HeaderShownContext.Consumer,null,function(isParentHeaderShown){return React.createElement(CardStack,_extends({insets:insets,isParentHeaderShown:isParentHeaderShown,isParentModal:isParentModal,getPreviousRoute:_this2.getPreviousRoute,routes:routes,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,onOpenRoute:_this2.handleOpenRoute,onCloseRoute:_this2.handleCloseRoute,onTransitionStart:_this2.handleTransitionStart,onTransitionEnd:_this2.handleTransitionEnd,renderHeader:_this2.renderHeader,renderScene:_this2.renderScene,state:state,descriptors:descriptors,onGestureStart:_this2.handleGestureStart,onGestureEnd:_this2.handleGestureEnd,onGestureCancel:_this2.handleGestureCancel},rest));});});})));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if((props.state.routes===state.previousRoutes||isArrayEqual(props.state.routes.map(function(r){return r.key;}),state.previousRoutes.map(function(r){return r.key;})))&&state.routes.length){var _routes=state.routes;var _previousRoutes=state.previousRoutes;var _descriptors=props.descriptors;var previousDescriptors=state.previousDescriptors;if(props.descriptors!==state.previousDescriptors){_descriptors=state.routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});previousDescriptors=props.descriptors;}if(props.state.routes!==state.previousRoutes){var map=props.state.routes.reduce(function(acc,route){acc[route.key]=route;return acc;},{});_routes=state.routes.map(function(route){return map[route.key]||route;});_previousRoutes=props.state.routes;}return{routes:_routes,previousRoutes:_previousRoutes,descriptors:_descriptors,previousDescriptors:previousDescriptors};}var routes=props.state.index<props.state.routes.length-1?props.state.routes.slice(0,props.state.index+1):props.state.routes;var openingRouteKeys=state.openingRouteKeys,closingRouteKeys=state.closingRouteKeys,replacingRouteKeys=state.replacingRouteKeys,previousRoutes=state.previousRoutes;var previousFocusedRoute=previousRoutes[previousRoutes.length-1];var nextFocusedRoute=routes[routes.length-1];var isAnimationEnabled=function isAnimationEnabled(key){var descriptor=props.descriptors[key]||state.descriptors[key];return descriptor?descriptor.options.animationEnabled!==false:true;};var getAnimationTypeForReplace=function getAnimationTypeForReplace(key){var _descriptor$options$a;var descriptor=props.descriptors[key]||state.descriptors[key];return(_descriptor$options$a=descriptor.options.animationTypeForReplace)!=null?_descriptor$options$a:'push';};if(previousFocusedRoute&&previousFocusedRoute.key!==nextFocusedRoute.key){if(!previousRoutes.some(function(r){return r.key===nextFocusedRoute.key;})){if(isAnimationEnabled(nextFocusedRoute.key)&&!openingRouteKeys.includes(nextFocusedRoute.key)){openingRouteKeys=[].concat(_toConsumableArray(openingRouteKeys),[nextFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});if(!routes.some(function(r){return r.key===previousFocusedRoute.key;})){openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});if(getAnimationTypeForReplace(nextFocusedRoute.key)==='pop'){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}else{replacingRouteKeys=[].concat(_toConsumableArray(replacingRouteKeys),[previousFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=routes.slice();routes.splice(routes.length-1,0,previousFocusedRoute);}}}}else if(!routes.some(function(r){return r.key===previousFocusedRoute.key;})){if(isAnimationEnabled(previousFocusedRoute.key)&&!closingRouteKeys.includes(previousFocusedRoute.key)){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}}else{}}else if(replacingRouteKeys.length||closingRouteKeys.length){var _routes2;routes=routes.slice();(_routes2=routes).splice.apply(_routes2,[routes.length-1,0].concat(_toConsumableArray(state.routes.filter(function(_ref10){var key=_ref10.key;return isAnimationEnabled(key)?replacingRouteKeys.includes(key)||closingRouteKeys.includes(key):false;}))));}if(!routes.length){throw new Error('There should always be at least one route in the navigation state.');}var descriptors=routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});return{routes:routes,previousRoutes:props.state.routes,previousDescriptors:props.descriptors,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,replacingRouteKeys:replacingRouteKeys,descriptors:descriptors};}}]);return StackView;}(React.Component);export{StackView as default};var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["StackView.tsx"],"names":["HeaderShownContext","SafeAreaProviderCompat","StackActions","React","SafeAreaInsetsContext","ModalPresentationContext","GestureHandlerRootView","HeaderContainer","CardStack","GestureHandlerWrapper","View","isArrayEqual","a","b","length","every","it","index","StackView","Component","props","state","routes","previousRoutes","map","r","key","descriptors","previousDescriptors","reduce","acc","route","slice","openingRouteKeys","closingRouteKeys","replacingRouteKeys","previousFocusedRoute","nextFocusedRoute","isAnimationEnabled","descriptor","options","animationEnabled","getAnimationTypeForReplace","animationTypeForReplace","some","includes","filter","splice","Error","findIndex","render","navigation","routeNames","name","navigate","setState","dispatch","pop","source","target","closing","emit","type","data","_","rest","styles","container","insets","isParentModal","isParentHeaderShown","getPreviousRoute","handleOpenRoute","handleCloseRoute","handleTransitionStart","handleTransitionEnd","renderHeader","renderScene","handleGestureStart","handleGestureEnd","handleGestureCancel","StyleSheet","create","flex"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { HeaderShownContext, SafeAreaProviderCompat } from '@react-navigation/elements';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport { GestureHandlerRootView } from '../GestureHandler';\nimport HeaderContainer from '../Header/HeaderContainer';\nimport CardStack from './CardStack';\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nconst isArrayEqual = (a, b) => a.length === b.length && a.every((it, index) => it === b[index]);\nexport default class StackView extends React.Component {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", {\n      routes: [],\n      previousRoutes: [],\n      previousDescriptors: {},\n      openingRouteKeys: [],\n      closingRouteKeys: [],\n      replacingRouteKeys: [],\n      descriptors: {}\n    });\n    _defineProperty(this, \"getPreviousRoute\", _ref => {\n      let {\n        route\n      } = _ref;\n      const {\n        closingRouteKeys,\n        replacingRouteKeys\n      } = this.state;\n      const routes = this.state.routes.filter(r => r.key === route.key || !closingRouteKeys.includes(r.key) && !replacingRouteKeys.includes(r.key));\n      const index = routes.findIndex(r => r.key === route.key);\n      return routes[index - 1];\n    });\n    _defineProperty(this, \"renderScene\", _ref2 => {\n      let {\n        route\n      } = _ref2;\n      const descriptor = this.state.descriptors[route.key] || this.props.descriptors[route.key];\n      if (!descriptor) {\n        return null;\n      }\n      return descriptor.render();\n    });\n    _defineProperty(this, \"renderHeader\", props => {\n      return /*#__PURE__*/React.createElement(HeaderContainer, props);\n    });\n    _defineProperty(this, \"handleOpenRoute\", _ref3 => {\n      let {\n        route\n      } = _ref3;\n      const {\n        state,\n        navigation\n      } = this.props;\n      const {\n        closingRouteKeys,\n        replacingRouteKeys\n      } = this.state;\n      if (closingRouteKeys.some(key => key === route.key) && replacingRouteKeys.every(key => key !== route.key) && state.routeNames.includes(route.name) && !state.routes.some(r => r.key === route.key)) {\n        // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n        // So we need to add this route back to the state\n        navigation.navigate(route);\n      } else {\n        this.setState(state => ({\n          routes: state.replacingRouteKeys.length ? state.routes.filter(r => !state.replacingRouteKeys.includes(r.key)) : state.routes,\n          openingRouteKeys: state.openingRouteKeys.filter(key => key !== route.key),\n          closingRouteKeys: state.closingRouteKeys.filter(key => key !== route.key),\n          replacingRouteKeys: []\n        }));\n      }\n    });\n    _defineProperty(this, \"handleCloseRoute\", _ref4 => {\n      let {\n        route\n      } = _ref4;\n      const {\n        state,\n        navigation\n      } = this.props;\n      if (state.routes.some(r => r.key === route.key)) {\n        // If a route exists in state, trigger a pop\n        // This will happen in when the route was closed from the card component\n        // e.g. When the close animation triggered from a gesture ends\n        navigation.dispatch({\n          ...StackActions.pop(),\n          source: route.key,\n          target: state.key\n        });\n      } else {\n        // We need to clean up any state tracking the route and pop it immediately\n        this.setState(state => ({\n          routes: state.routes.filter(r => r.key !== route.key),\n          openingRouteKeys: state.openingRouteKeys.filter(key => key !== route.key),\n          closingRouteKeys: state.closingRouteKeys.filter(key => key !== route.key)\n        }));\n      }\n    });\n    _defineProperty(this, \"handleTransitionStart\", (_ref5, closing) => {\n      let {\n        route\n      } = _ref5;\n      return this.props.navigation.emit({\n        type: 'transitionStart',\n        data: {\n          closing\n        },\n        target: route.key\n      });\n    });\n    _defineProperty(this, \"handleTransitionEnd\", (_ref6, closing) => {\n      let {\n        route\n      } = _ref6;\n      return this.props.navigation.emit({\n        type: 'transitionEnd',\n        data: {\n          closing\n        },\n        target: route.key\n      });\n    });\n    _defineProperty(this, \"handleGestureStart\", _ref7 => {\n      let {\n        route\n      } = _ref7;\n      this.props.navigation.emit({\n        type: 'gestureStart',\n        target: route.key\n      });\n    });\n    _defineProperty(this, \"handleGestureEnd\", _ref8 => {\n      let {\n        route\n      } = _ref8;\n      this.props.navigation.emit({\n        type: 'gestureEnd',\n        target: route.key\n      });\n    });\n    _defineProperty(this, \"handleGestureCancel\", _ref9 => {\n      let {\n        route\n      } = _ref9;\n      this.props.navigation.emit({\n        type: 'gestureCancel',\n        target: route.key\n      });\n    });\n  }\n  static getDerivedStateFromProps(props, state) {\n    // If there was no change in routes, we don't need to compute anything\n    if ((props.state.routes === state.previousRoutes || isArrayEqual(props.state.routes.map(r => r.key), state.previousRoutes.map(r => r.key))) && state.routes.length) {\n      let routes = state.routes;\n      let previousRoutes = state.previousRoutes;\n      let descriptors = props.descriptors;\n      let previousDescriptors = state.previousDescriptors;\n      if (props.descriptors !== state.previousDescriptors) {\n        descriptors = state.routes.reduce((acc, route) => {\n          acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n          return acc;\n        }, {});\n        previousDescriptors = props.descriptors;\n      }\n      if (props.state.routes !== state.previousRoutes) {\n        // if any route objects have changed, we should update them\n        const map = props.state.routes.reduce((acc, route) => {\n          acc[route.key] = route;\n          return acc;\n        }, {});\n        routes = state.routes.map(route => map[route.key] || route);\n        previousRoutes = props.state.routes;\n      }\n      return {\n        routes,\n        previousRoutes,\n        descriptors,\n        previousDescriptors\n      };\n    }\n\n    // Here we determine which routes were added or removed to animate them\n    // We keep a copy of the route being removed in local state to be able to animate it\n\n    let routes = props.state.index < props.state.routes.length - 1 ?\n    // Remove any extra routes from the state\n    // The last visible route should be the focused route, i.e. at current index\n    props.state.routes.slice(0, props.state.index + 1) : props.state.routes;\n\n    // Now we need to determine which routes were added and removed\n    let {\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      previousRoutes\n    } = state;\n    const previousFocusedRoute = previousRoutes[previousRoutes.length - 1];\n    const nextFocusedRoute = routes[routes.length - 1];\n    const isAnimationEnabled = key => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n      return descriptor ? descriptor.options.animationEnabled !== false : true;\n    };\n    const getAnimationTypeForReplace = key => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n      return descriptor.options.animationTypeForReplace ?? 'push';\n    };\n    if (previousFocusedRoute && previousFocusedRoute.key !== nextFocusedRoute.key) {\n      // We only need to animate routes if the focused route changed\n      // Animating previous routes won't be visible coz the focused route is on top of everything\n\n      if (!previousRoutes.some(r => r.key === nextFocusedRoute.key)) {\n        // A new route has come to the focus, we treat this as a push\n        // A replace can also trigger this, the animation should look like push\n\n        if (isAnimationEnabled(nextFocusedRoute.key) && !openingRouteKeys.includes(nextFocusedRoute.key)) {\n          // In this case, we need to animate pushing the focused route\n          // We don't care about animating any other added routes because they won't be visible\n          openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n          closingRouteKeys = closingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n          replacingRouteKeys = replacingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n          if (!routes.some(r => r.key === previousFocusedRoute.key)) {\n            // The previous focused route isn't present in state, we treat this as a replace\n\n            openingRouteKeys = openingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n            if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n              closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n              // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n              // But since user configured it to animate the old screen like a pop, we need to add this without animation\n              // So remove it from `openingRouteKeys` which will remove the animation\n              openingRouteKeys = openingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n\n              // Keep the route being removed at the end to animate it out\n              routes = [...routes, previousFocusedRoute];\n            } else {\n              replacingRouteKeys = [...replacingRouteKeys, previousFocusedRoute.key];\n              closingRouteKeys = closingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n\n              // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n              // We need to insert it just before the focused one (the route being pushed)\n              // After the push animation is completed, routes being replaced will be removed completely\n              routes = routes.slice();\n              routes.splice(routes.length - 1, 0, previousFocusedRoute);\n            }\n          }\n        }\n      } else if (!routes.some(r => r.key === previousFocusedRoute.key)) {\n        // The previously focused route was removed, we treat this as a pop\n\n        if (isAnimationEnabled(previousFocusedRoute.key) && !closingRouteKeys.includes(previousFocusedRoute.key)) {\n          closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n          // Sometimes a route can be closed before the opening animation finishes\n          // So we also need to remove it from the opening list\n          openingRouteKeys = openingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n          replacingRouteKeys = replacingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n\n          // Keep a copy of route being removed in the state to be able to animate it\n          routes = [...routes, previousFocusedRoute];\n        }\n      } else {\n        // Looks like some routes were re-arranged and no focused routes were added/removed\n        // i.e. the currently focused route already existed and the previously focused route still exists\n        // We don't know how to animate this\n      }\n    } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n      // Keep the routes we are closing or replacing if animation is enabled for them\n      routes = routes.slice();\n      routes.splice(routes.length - 1, 0, ...state.routes.filter(_ref10 => {\n        let {\n          key\n        } = _ref10;\n        return isAnimationEnabled(key) ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key) : false;\n      }));\n    }\n    if (!routes.length) {\n      throw new Error('There should always be at least one route in the navigation state.');\n    }\n    const descriptors = routes.reduce((acc, route) => {\n      acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n      return acc;\n    }, {});\n    return {\n      routes,\n      previousRoutes: props.state.routes,\n      previousDescriptors: props.descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      descriptors\n    };\n  }\n  render() {\n    const {\n      state,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors: _,\n      ...rest\n    } = this.props;\n    const {\n      routes,\n      descriptors,\n      openingRouteKeys,\n      closingRouteKeys\n    } = this.state;\n    return /*#__PURE__*/React.createElement(GestureHandlerWrapper, {\n      style: styles.container\n    }, /*#__PURE__*/React.createElement(SafeAreaProviderCompat, null, /*#__PURE__*/React.createElement(SafeAreaInsetsContext.Consumer, null, insets => /*#__PURE__*/React.createElement(ModalPresentationContext.Consumer, null, isParentModal => /*#__PURE__*/React.createElement(HeaderShownContext.Consumer, null, isParentHeaderShown => /*#__PURE__*/React.createElement(CardStack, _extends({\n      insets: insets,\n      isParentHeaderShown: isParentHeaderShown,\n      isParentModal: isParentModal,\n      getPreviousRoute: this.getPreviousRoute,\n      routes: routes,\n      openingRouteKeys: openingRouteKeys,\n      closingRouteKeys: closingRouteKeys,\n      onOpenRoute: this.handleOpenRoute,\n      onCloseRoute: this.handleCloseRoute,\n      onTransitionStart: this.handleTransitionStart,\n      onTransitionEnd: this.handleTransitionEnd,\n      renderHeader: this.renderHeader,\n      renderScene: this.renderScene,\n      state: state,\n      descriptors: descriptors,\n      onGestureStart: this.handleGestureStart,\n      onGestureEnd: this.handleGestureEnd,\n      onGestureCancel: this.handleGestureCancel\n    }, rest)))))));\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n//# sourceMappingURL=StackView.js.map"]},"metadata":{},"sourceType":"module"}
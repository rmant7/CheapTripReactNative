{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"theme\"],_excluded2=[\"elevation\",\"children\",\"theme\",\"style\",\"testID\"],_excluded3=[\"position\",\"alignSelf\",\"top\",\"left\",\"right\",\"bottom\",\"start\",\"end\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useInternalTheme}from\"../core/theming\";import overlay,{isAnimatedValue}from\"../styles/overlay\";import shadow from\"../styles/shadow\";var MD2Surface=React.forwardRef(function(_ref,ref){var style=_ref.style,overrideTheme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var _ref3=StyleSheet.flatten(style)||{},_ref3$elevation=_ref3.elevation,elevation=_ref3$elevation===void 0?4:_ref3$elevation;var _useInternalTheme=useInternalTheme(overrideTheme),isDarkTheme=_useInternalTheme.dark,mode=_useInternalTheme.mode,colors=_useInternalTheme.colors;return React.createElement(Animated.View,_extends({ref:ref},rest,{style:[{backgroundColor:isDarkTheme&&mode==='adaptive'?overlay(elevation,colors===null||colors===void 0?void 0:colors.surface):colors===null||colors===void 0?void 0:colors.surface},elevation?shadow(elevation):null,style]}));});var Surface=React.forwardRef(function(_ref2,ref){var _ref2$elevation=_ref2.elevation,elevation=_ref2$elevation===void 0?1:_ref2$elevation,children=_ref2.children,overridenTheme=_ref2.theme,style=_ref2.style,testID=_ref2.testID,props=_objectWithoutProperties(_ref2,_excluded2);var theme=useInternalTheme(overridenTheme);if(!theme.isV3)return React.createElement(MD2Surface,_extends({},props,{theme:theme,style:style,ref:ref}),children);var colors=theme.colors;var inputRange=[0,1,2,3,4,5];var backgroundColor=function(){var _colors$elevation2;if(isAnimatedValue(elevation)){return elevation.interpolate({inputRange:inputRange,outputRange:inputRange.map(function(elevation){var _colors$elevation;return(_colors$elevation=colors.elevation)===null||_colors$elevation===void 0?void 0:_colors$elevation[\"level\"+elevation];})});}return(_colors$elevation2=colors.elevation)===null||_colors$elevation2===void 0?void 0:_colors$elevation2[\"level\"+elevation];}();if(Platform.OS==='web'){return React.createElement(Animated.View,_extends({},props,{ref:ref,testID:testID,style:[{backgroundColor:backgroundColor},elevation?shadow(elevation,theme.isV3):null,style]}),children);}if(Platform.OS==='android'){var elevationLevel=[0,3,6,9,12,15];var getElevationAndroid=function getElevationAndroid(){if(isAnimatedValue(elevation)){return elevation.interpolate({inputRange:inputRange,outputRange:elevationLevel});}return elevationLevel[elevation];};var _ref4=StyleSheet.flatten(style)||{},margin=_ref4.margin,padding=_ref4.padding,transform=_ref4.transform,borderRadius=_ref4.borderRadius;var outerLayerStyles={margin:margin,padding:padding,transform:transform,borderRadius:borderRadius};var _sharedStyle=[{backgroundColor:backgroundColor},style];return React.createElement(Animated.View,_extends({},props,{testID:testID,ref:ref,style:[{backgroundColor:backgroundColor,transform:transform},outerLayerStyles,_sharedStyle,{elevation:getElevationAndroid()}]}),children);}var iOSShadowOutputRanges=[{shadowOpacity:0.15,height:[0,1,2,4,6,8],shadowRadius:[0,3,6,8,10,12]},{shadowOpacity:0.3,height:[0,1,1,1,2,4],shadowRadius:[0,1,2,3,3,4]}];var shadowColor='#000';var _ref5=StyleSheet.flatten(style)||{},position=_ref5.position,alignSelf=_ref5.alignSelf,top=_ref5.top,left=_ref5.left,right=_ref5.right,bottom=_ref5.bottom,start=_ref5.start,end=_ref5.end,restStyle=_objectWithoutProperties(_ref5,_excluded3);var absoluteStyles={position:position,alignSelf:alignSelf,top:top,right:right,bottom:bottom,left:left,start:start,end:end};var sharedStyle=[{backgroundColor:backgroundColor},restStyle];if(isAnimatedValue(elevation)){var _inputRange=[0,1,2,3,4,5];var getStyleForAnimatedShadowLayer=function getStyleForAnimatedShadowLayer(layer){return{shadowColor:shadowColor,shadowOpacity:elevation.interpolate({inputRange:[0,1],outputRange:[0,iOSShadowOutputRanges[layer].shadowOpacity],extrapolate:'clamp'}),shadowOffset:{width:0,height:elevation.interpolate({inputRange:_inputRange,outputRange:iOSShadowOutputRanges[layer].height})},shadowRadius:elevation.interpolate({inputRange:_inputRange,outputRange:iOSShadowOutputRanges[layer].shadowRadius})};};return React.createElement(Animated.View,{style:[getStyleForAnimatedShadowLayer(0),absoluteStyles]},React.createElement(Animated.View,{style:getStyleForAnimatedShadowLayer(1)},React.createElement(Animated.View,_extends({},props,{testID:testID,style:sharedStyle}),children)));}var getStyleForShadowLayer=function getStyleForShadowLayer(layer){return{shadowColor:shadowColor,shadowOpacity:elevation?iOSShadowOutputRanges[layer].shadowOpacity:0,shadowOffset:{width:0,height:iOSShadowOutputRanges[layer].height[elevation]},shadowRadius:iOSShadowOutputRanges[layer].shadowRadius[elevation]};};return React.createElement(Animated.View,{ref:ref,style:[getStyleForShadowLayer(0),absoluteStyles]},React.createElement(Animated.View,{style:getStyleForShadowLayer(1)},React.createElement(Animated.View,_extends({},props,{testID:testID,style:sharedStyle}),children)));});export default Surface;","map":{"version":3,"sources":["Surface.tsx"],"names":["React","useInternalTheme","overlay","isAnimatedValue","shadow","MD2Surface","forwardRef","style","theme","overrideTheme","rest","ref","elevation","StyleSheet","flatten","dark","isDarkTheme","mode","colors","backgroundColor","surface","Surface","children","overridenTheme","testID","props","isV3","inputRange","interpolate","outputRange","map","Platform","OS","elevationLevel","getElevationAndroid","margin","padding","transform","borderRadius","outerLayerStyles","sharedStyle","iOSShadowOutputRanges","shadowOpacity","height","shadowRadius","shadowColor","position","alignSelf","top","left","right","bottom","start","end","restStyle","absoluteStyles","getStyleForAnimatedShadowLayer","layer","extrapolate","shadowOffset","width","getStyleForShadowLayer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../core/theming';\nimport overlay, { isAnimatedValue } from '../styles/overlay';\nimport shadow from '../styles/shadow';\nimport type { InternalTheme, MD3Elevation } from '../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes shadows and background on iOS and Android.\n   * Used to create UI hierarchy between components.\n   *\n   * Note: In version 2 the `elevation` prop was accepted via `style` prop i.e. `style={{ elevation: 4 }}`.\n   * It's no longer supported with theme version 3 and you should use `elevation` property instead.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  /**\n   * @optional\n   */\n  theme?: InternalTheme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  ref?: React.RefObject<View>;\n};\n\nconst MD2Surface = React.forwardRef<View, Props>(\n  ({ style, theme: overrideTheme, ...rest }: Omit<Props, 'elevation'>, ref) => {\n    const { elevation = 4 } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n    const { dark: isDarkTheme, mode, colors } = useInternalTheme(overrideTheme);\n\n    return (\n      <Animated.View\n        ref={ref}\n        {...rest}\n        style={[\n          {\n            backgroundColor:\n              isDarkTheme && mode === 'adaptive'\n                ? overlay(elevation, colors?.surface)\n                : colors?.surface,\n          },\n          elevation ? shadow(elevation) : null,\n          style,\n        ]}\n      />\n    );\n  }\n);\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark InternalTheme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-android.png\" />\n *     <figcaption>Surface on Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-ios.png\" />\n *     <figcaption>Surface on iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface} elevation={4}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *   },\n * });\n * ```\n */\nconst Surface = React.forwardRef<View, Props>(\n  (\n    {\n      elevation = 1,\n      children,\n      theme: overridenTheme,\n      style,\n      testID,\n      ...props\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(overridenTheme);\n\n    if (!theme.isV3)\n      return (\n        <MD2Surface {...props} theme={theme} style={style} ref={ref}>\n          {children}\n        </MD2Surface>\n      );\n\n    const { colors } = theme;\n\n    const inputRange = [0, 1, 2, 3, 4, 5];\n\n    const backgroundColor = (() => {\n      if (isAnimatedValue(elevation)) {\n        return elevation.interpolate({\n          inputRange,\n          outputRange: inputRange.map((elevation) => {\n            return colors.elevation?.[`level${elevation as MD3Elevation}`];\n          }),\n        });\n      }\n\n      return colors.elevation?.[`level${elevation}`];\n    })();\n\n    if (Platform.OS === 'web') {\n      return (\n        <Animated.View\n          {...props}\n          ref={ref}\n          testID={testID}\n          style={[\n            { backgroundColor },\n            elevation ? shadow(elevation, theme.isV3) : null,\n            style,\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    if (Platform.OS === 'android') {\n      const elevationLevel = [0, 3, 6, 9, 12, 15];\n\n      const getElevationAndroid = () => {\n        if (isAnimatedValue(elevation)) {\n          return elevation.interpolate({\n            inputRange,\n            outputRange: elevationLevel,\n          });\n        }\n\n        return elevationLevel[elevation];\n      };\n\n      const { margin, padding, transform, borderRadius } = (StyleSheet.flatten(\n        style\n      ) || {}) as ViewStyle;\n\n      const outerLayerStyles = { margin, padding, transform, borderRadius };\n      const sharedStyle = [{ backgroundColor }, style];\n\n      return (\n        <Animated.View\n          {...props}\n          testID={testID}\n          ref={ref}\n          style={[\n            {\n              backgroundColor,\n              transform,\n            },\n            outerLayerStyles,\n            sharedStyle,\n            {\n              elevation: getElevationAndroid(),\n            },\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    const iOSShadowOutputRanges = [\n      {\n        shadowOpacity: 0.15,\n        height: [0, 1, 2, 4, 6, 8],\n        shadowRadius: [0, 3, 6, 8, 10, 12],\n      },\n      {\n        shadowOpacity: 0.3,\n        height: [0, 1, 1, 1, 2, 4],\n        shadowRadius: [0, 1, 2, 3, 3, 4],\n      },\n    ];\n\n    const shadowColor = '#000';\n\n    const { position, alignSelf, top, left, right, bottom, start, end, ...restStyle } =\n      (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const absoluteStyles = { position, alignSelf, top, right, bottom, left, start, end };\n    const sharedStyle = [{ backgroundColor }, restStyle];\n\n    if (isAnimatedValue(elevation)) {\n      const inputRange = [0, 1, 2, 3, 4, 5];\n\n      const getStyleForAnimatedShadowLayer = (layer: 0 | 1) => {\n        return {\n          shadowColor,\n          shadowOpacity: elevation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n            extrapolate: 'clamp',\n          }),\n          shadowOffset: {\n            width: 0,\n            height: elevation.interpolate({\n              inputRange,\n              outputRange: iOSShadowOutputRanges[layer].height,\n            }),\n          },\n          shadowRadius: elevation.interpolate({\n            inputRange,\n            outputRange: iOSShadowOutputRanges[layer].shadowRadius,\n          }),\n        };\n      };\n\n      return (\n        <Animated.View\n          style={[getStyleForAnimatedShadowLayer(0), absoluteStyles]}\n        >\n          <Animated.View style={getStyleForAnimatedShadowLayer(1)}>\n            <Animated.View {...props} testID={testID} style={sharedStyle}>\n              {children}\n            </Animated.View>\n          </Animated.View>\n        </Animated.View>\n      );\n    }\n\n    const getStyleForShadowLayer = (layer: 0 | 1) => {\n      return {\n        shadowColor,\n        shadowOpacity: elevation\n          ? iOSShadowOutputRanges[layer].shadowOpacity\n          : 0,\n        shadowOffset: {\n          width: 0,\n          height: iOSShadowOutputRanges[layer].height[elevation],\n        },\n        shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation],\n      };\n    };\n\n    return (\n      <Animated.View\n        ref={ref}\n        style={[getStyleForShadowLayer(0), absoluteStyles]}\n      >\n        <Animated.View style={getStyleForShadowLayer(1)}>\n          <Animated.View {...props} testID={testID} style={sharedStyle}>\n            {children}\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n);\n\nexport default Surface;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import EnsureSingleNavigator from\"./EnsureSingleNavigator\";import NavigationStateContext from\"./NavigationStateContext\";import StaticContainer from\"./StaticContainer\";import useOptionsGetters from\"./useOptionsGetters\";export default function SceneView(_ref){var screen=_ref.screen,route=_ref.route,navigation=_ref.navigation,routeState=_ref.routeState,getState=_ref.getState,setState=_ref.setState,options=_ref.options,clearOptions=_ref.clearOptions;var navigatorKeyRef=React.useRef();var getKey=React.useCallback(function(){return navigatorKeyRef.current;},[]);var _useOptionsGetters=useOptionsGetters({key:route.key,options:options,navigation:navigation}),addOptionsGetter=_useOptionsGetters.addOptionsGetter;var setKey=React.useCallback(function(key){navigatorKeyRef.current=key;},[]);var getCurrentState=React.useCallback(function(){var state=getState();var currentRoute=state.routes.find(function(r){return r.key===route.key;});return currentRoute?currentRoute.state:undefined;},[getState,route.key]);var setCurrentState=React.useCallback(function(child){var state=getState();setState(_objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(r){return r.key===route.key?_objectSpread(_objectSpread({},r),{},{state:child}):r;})}));},[getState,route.key,setState]);var isInitialRef=React.useRef(true);React.useEffect(function(){isInitialRef.current=false;});React.useEffect(function(){return clearOptions;},[]);var getIsInitial=React.useCallback(function(){return isInitialRef.current;},[]);var context=React.useMemo(function(){return{state:routeState,getState:getCurrentState,setState:setCurrentState,getKey:getKey,setKey:setKey,getIsInitial:getIsInitial,addOptionsGetter:addOptionsGetter};},[routeState,getCurrentState,setCurrentState,getKey,setKey,getIsInitial,addOptionsGetter]);var ScreenComponent=screen.getComponent?screen.getComponent():screen.component;return React.createElement(NavigationStateContext.Provider,{value:context},React.createElement(EnsureSingleNavigator,null,React.createElement(StaticContainer,{name:screen.name,render:ScreenComponent||screen.children,navigation:navigation,route:route},ScreenComponent!==undefined?React.createElement(ScreenComponent,{navigation:navigation,route:route}):screen.children!==undefined?screen.children({navigation:navigation,route:route}):null)));}","map":{"version":3,"sources":["SceneView.tsx"],"names":["React","EnsureSingleNavigator","NavigationStateContext","StaticContainer","useOptionsGetters","SceneView","screen","route","navigation","routeState","getState","setState","options","clearOptions","navigatorKeyRef","useRef","getKey","useCallback","current","addOptionsGetter","key","setKey","getCurrentState","state","currentRoute","routes","find","r","undefined","setCurrentState","child","map","isInitialRef","useEffect","getIsInitial","context","useMemo","ScreenComponent","getComponent","component","name","children"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationStateContext from './NavigationStateContext';\nimport StaticContainer from './StaticContainer';\nimport useOptionsGetters from './useOptionsGetters';\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView(_ref) {\n  let {\n    screen,\n    route,\n    navigation,\n    routeState,\n    getState,\n    setState,\n    options,\n    clearOptions\n  } = _ref;\n  const navigatorKeyRef = React.useRef();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n  const {\n    addOptionsGetter\n  } = useOptionsGetters({\n    key: route.key,\n    options,\n    navigation\n  });\n  const setKey = React.useCallback(key => {\n    navigatorKeyRef.current = key;\n  }, []);\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find(r => r.key === route.key);\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n  const setCurrentState = React.useCallback(child => {\n    const state = getState();\n    setState({\n      ...state,\n      routes: state.routes.map(r => r.key === route.key ? {\n        ...r,\n        state: child\n      } : r)\n    });\n  }, [getState, route.key, setState]);\n  const isInitialRef = React.useRef(true);\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  });\n\n  // Clear options set by this screen when it is unmounted\n  React.useEffect(() => {\n    return clearOptions;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n  const context = React.useMemo(() => ({\n    state: routeState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    getKey,\n    setKey,\n    getIsInitial,\n    addOptionsGetter\n  }), [routeState, getCurrentState, setCurrentState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  const ScreenComponent = screen.getComponent ? screen.getComponent() : screen.component;\n  return /*#__PURE__*/React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(EnsureSingleNavigator, null, /*#__PURE__*/React.createElement(StaticContainer, {\n    name: screen.name,\n    render: ScreenComponent || screen.children,\n    navigation: navigation,\n    route: route\n  }, ScreenComponent !== undefined ? /*#__PURE__*/React.createElement(ScreenComponent, {\n    navigation: navigation,\n    route: route\n  }) : screen.children !== undefined ? screen.children({\n    navigation,\n    route\n  }) : null)));\n}\n//# sourceMappingURL=SceneView.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"type\",\"visible\",\"theme\",\"onLayout\",\"padding\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{withInternalTheme}from\"../core/theming\";import AnimatedText from\"./Typography/AnimatedText\";var HelperText=function HelperText(_ref){var _theme$colors;var style=_ref.style,_ref$type=_ref.type,type=_ref$type===void 0?'info':_ref$type,_ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,theme=_ref.theme,onLayout=_ref.onLayout,_ref$padding=_ref.padding,padding=_ref$padding===void 0?'normal':_ref$padding,rest=_objectWithoutProperties(_ref,_excluded);var _React$useRef=React.useRef(new Animated.Value(visible?1:0)),shown=_React$useRef.current;var _React$useRef2=React.useRef(0),textHeight=_React$useRef2.current;var scale=theme.animation.scale;var _rest$maxFontSizeMult=rest.maxFontSizeMultiplier,maxFontSizeMultiplier=_rest$maxFontSizeMult===void 0?1.5:_rest$maxFontSizeMult;React.useEffect(function(){if(visible){Animated.timing(shown,{toValue:1,duration:150*scale,useNativeDriver:true}).start();}else{Animated.timing(shown,{toValue:0,duration:180*scale,useNativeDriver:true}).start();}},[visible,scale,shown]);var handleTextLayout=function handleTextLayout(e){onLayout===null||onLayout===void 0?void 0:onLayout(e);textHeight=e.nativeEvent.layout.height;};var colors=theme.colors,dark=theme.dark;var textColor=type==='error'?colors===null||colors===void 0?void 0:colors.error:color(theme.isV3?theme.colors.onSurface:theme===null||theme===void 0?void 0:(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.text).alpha(dark?0.7:0.54).rgb().string();return React.createElement(AnimatedText,_extends({onLayout:handleTextLayout,style:[styles.text,padding!=='none'?styles.padding:{},{color:textColor,opacity:shown,transform:visible&&type==='error'?[{translateY:shown.interpolate({inputRange:[0,1],outputRange:[-textHeight/2,0]})}]:[]},style],maxFontSizeMultiplier:maxFontSizeMultiplier},rest),rest.children);};var styles=StyleSheet.create({text:{fontSize:12,paddingVertical:4},padding:{paddingHorizontal:12}});export default withInternalTheme(HelperText);","map":{"version":3,"mappings":"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","names":["React","color","withInternalTheme","AnimatedText","HelperText","_ref","style","type","visible","theme","onLayout","padding","rest","useRef","Animated","Value","shown","current","textHeight","scale","animation","maxFontSizeMultiplier","useEffect","timing","toValue","duration","useNativeDriver","start","handleTextLayout","e","nativeEvent","layout","height","colors","dark","textColor","error","isV3","onSurface","_theme$colors","text","alpha","rgb","string","styles","opacity","transform","translateY","interpolate","inputRange","outputRange","children","StyleSheet","create","fontSize","paddingVertical","paddingHorizontal"],"sources":["HelperText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { $Omit, InternalTheme } from '../types';\nimport AnimatedText from './Typography/AnimatedText';\n\nexport type Props = $Omit<\n  $Omit<React.ComponentPropsWithRef<typeof AnimatedText>, 'padding'>,\n  'type'\n> & {\n  /**\n   * Type of the helper text.\n   */\n  type: 'error' | 'info';\n  /**\n   * Whether to display the helper text.\n   */\n  visible?: boolean;\n  /**\n   * Whether to apply padding to the helper text.\n   */\n  padding?: 'none' | 'normal';\n  /**\n   * Text content of the HelperText.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\n/**\n * Helper text is used in conjuction with input elements to provide additional hints for the user.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/helper-text.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { HelperText, TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *    const onChangeText = text => setText(text);\n *\n *   const hasErrors = () => {\n *     return !text.includes('@');\n *   };\n *\n *  return (\n *     <View>\n *       <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n *       <HelperText type=\"error\" visible={hasErrors()}>\n *         Email address is invalid!\n *       </HelperText>\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst HelperText = ({\n  style,\n  type = 'info',\n  visible = true,\n  theme,\n  onLayout,\n  padding = 'normal',\n  ...rest\n}: Props) => {\n  const { current: shown } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n\n  let { current: textHeight } = React.useRef<number>(0);\n\n  const { scale } = theme.animation;\n\n  const { maxFontSizeMultiplier = 1.5 } = rest;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show text\n      Animated.timing(shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      // hide text\n      Animated.timing(shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, shown]);\n\n  const handleTextLayout = (e: LayoutChangeEvent) => {\n    onLayout?.(e);\n    textHeight = e.nativeEvent.layout.height;\n  };\n\n  const { colors, dark } = theme;\n\n  const textColor =\n    type === 'error'\n      ? colors?.error\n      : color(theme.isV3 ? theme.colors.onSurface : theme?.colors?.text)\n          .alpha(dark ? 0.7 : 0.54)\n          .rgb()\n          .string();\n\n  return (\n    <AnimatedText\n      onLayout={handleTextLayout}\n      style={[\n        styles.text,\n        padding !== 'none' ? styles.padding : {},\n        {\n          color: textColor,\n          opacity: shown,\n          transform:\n            visible && type === 'error'\n              ? [\n                  {\n                    translateY: shown.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [-textHeight / 2, 0],\n                    }),\n                  },\n                ]\n              : [],\n        },\n        style,\n      ]}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      {...rest}\n    >\n      {rest.children}\n    </AnimatedText>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4,\n  },\n  padding: {\n    paddingHorizontal: 12,\n  },\n});\n\nexport default withInternalTheme(HelperText);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"label\",\"accessibilityLabel\",\"page\",\"numberOfPages\",\"onPageChange\",\"style\",\"theme\",\"showFastPaginationControls\",\"numberOfItemsPerPageList\",\"numberOfItemsPerPage\",\"onItemsPerPageChange\",\"selectPageDropdownLabel\",\"selectPageDropdownAccessibilityLabel\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{useInternalTheme,withInternalTheme}from\"../../core/theming\";import Button from\"../Button/Button\";import IconButton from\"../IconButton/IconButton\";import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import Menu from\"../Menu/Menu\";import Text from\"../Typography/Text\";var PaginationControls=function PaginationControls(_ref){var page=_ref.page,numberOfPages=_ref.numberOfPages,onPageChange=_ref.onPageChange,showFastPaginationControls=_ref.showFastPaginationControls;var theme=useInternalTheme();var textColor=theme.isV3?theme.colors.onSurface:theme.colors.text;return React.createElement(React.Fragment,null,showFastPaginationControls?React.createElement(IconButton,{icon:function icon(_ref2){var size=_ref2.size,color=_ref2.color;return React.createElement(MaterialCommunityIcon,{name:\"page-first\",color:color,size:size,direction:I18nManager.getConstants().isRTL?'rtl':'ltr'});},iconColor:textColor,disabled:page===0,onPress:function onPress(){return onPageChange(0);},accessibilityLabel:\"page-first\"}):null,React.createElement(IconButton,{icon:function icon(_ref3){var size=_ref3.size,color=_ref3.color;return React.createElement(MaterialCommunityIcon,{name:\"chevron-left\",color:color,size:size,direction:I18nManager.getConstants().isRTL?'rtl':'ltr'});},iconColor:textColor,disabled:page===0,onPress:function onPress(){return onPageChange(page-1);},accessibilityLabel:\"chevron-left\"}),React.createElement(IconButton,{icon:function icon(_ref4){var size=_ref4.size,color=_ref4.color;return React.createElement(MaterialCommunityIcon,{name:\"chevron-right\",color:color,size:size,direction:I18nManager.getConstants().isRTL?'rtl':'ltr'});},iconColor:textColor,disabled:numberOfPages===0||page===numberOfPages-1,onPress:function onPress(){return onPageChange(page+1);},accessibilityLabel:\"chevron-right\"}),showFastPaginationControls?React.createElement(IconButton,{icon:function icon(_ref5){var size=_ref5.size,color=_ref5.color;return React.createElement(MaterialCommunityIcon,{name:\"page-last\",color:color,size:size,direction:I18nManager.getConstants().isRTL?'rtl':'ltr'});},iconColor:textColor,disabled:numberOfPages===0||page===numberOfPages-1,onPress:function onPress(){return onPageChange(numberOfPages-1);},accessibilityLabel:\"page-last\"}):null);};var PaginationDropdown=function PaginationDropdown(_ref6){var numberOfItemsPerPageList=_ref6.numberOfItemsPerPageList,numberOfItemsPerPage=_ref6.numberOfItemsPerPage,onItemsPerPageChange=_ref6.onItemsPerPageChange;var _useInternalTheme=useInternalTheme(),colors=_useInternalTheme.colors;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),showSelect=_React$useState2[0],toggleSelect=_React$useState2[1];return React.createElement(Menu,{visible:showSelect,onDismiss:function onDismiss(){return toggleSelect(!showSelect);},anchor:React.createElement(Button,{mode:\"outlined\",onPress:function onPress(){return toggleSelect(true);},style:styles.button,icon:\"menu-down\",contentStyle:styles.contentStyle},\"\"+numberOfItemsPerPage)},numberOfItemsPerPageList===null||numberOfItemsPerPageList===void 0?void 0:numberOfItemsPerPageList.map(function(option){return React.createElement(Menu.Item,{key:option,titleStyle:option===numberOfItemsPerPage&&{color:colors===null||colors===void 0?void 0:colors.primary},onPress:function onPress(){onItemsPerPageChange===null||onItemsPerPageChange===void 0?void 0:onItemsPerPageChange(option);toggleSelect(false);},title:option});}));};var DataTablePagination=function DataTablePagination(_ref7){var label=_ref7.label,accessibilityLabel=_ref7.accessibilityLabel,page=_ref7.page,numberOfPages=_ref7.numberOfPages,onPageChange=_ref7.onPageChange,style=_ref7.style,theme=_ref7.theme,_ref7$showFastPaginat=_ref7.showFastPaginationControls,showFastPaginationControls=_ref7$showFastPaginat===void 0?false:_ref7$showFastPaginat,numberOfItemsPerPageList=_ref7.numberOfItemsPerPageList,numberOfItemsPerPage=_ref7.numberOfItemsPerPage,onItemsPerPageChange=_ref7.onItemsPerPageChange,selectPageDropdownLabel=_ref7.selectPageDropdownLabel,selectPageDropdownAccessibilityLabel=_ref7.selectPageDropdownAccessibilityLabel,rest=_objectWithoutProperties(_ref7,_excluded);var labelColor=color(theme.isV3?theme.colors.onSurface:theme===null||theme===void 0?void 0:theme.colors.text).alpha(0.6).rgb().string();return React.createElement(View,_extends({},rest,{style:[styles.container,style],accessibilityLabel:\"pagination-container\"}),numberOfItemsPerPageList&&numberOfItemsPerPage&&onItemsPerPageChange&&React.createElement(View,{accessibilityLabel:\"Options Select\",style:styles.optionsContainer},React.createElement(Text,{style:[styles.label,{color:labelColor}],numberOfLines:3,accessibilityLabel:selectPageDropdownAccessibilityLabel||'selectPageDropdownLabel'},selectPageDropdownLabel),React.createElement(PaginationDropdown,{numberOfItemsPerPageList:numberOfItemsPerPageList,numberOfItemsPerPage:numberOfItemsPerPage,onItemsPerPageChange:onItemsPerPageChange})),React.createElement(Text,{style:[styles.label,{color:labelColor}],numberOfLines:3,accessibilityLabel:accessibilityLabel||'label'},label),React.createElement(View,{style:styles.iconsContainer},React.createElement(PaginationControls,{showFastPaginationControls:showFastPaginationControls,onPageChange:onPageChange,page:page,numberOfPages:numberOfPages})));};DataTablePagination.displayName='DataTable.Pagination';var styles=StyleSheet.create({container:{justifyContent:'flex-end',flexDirection:'row',alignItems:'center',paddingLeft:16,flexWrap:'wrap'},optionsContainer:{flexDirection:'row',alignItems:'center',marginVertical:6},label:{fontSize:12,marginRight:16},button:{textAlign:'center',marginRight:16},iconsContainer:{flexDirection:'row'},contentStyle:{flexDirection:'row-reverse'}});export default withInternalTheme(DataTablePagination);export{DataTablePagination};","map":{"version":3,"sources":["DataTablePagination.tsx"],"names":["React","color","useInternalTheme","withInternalTheme","Button","IconButton","MaterialCommunityIcon","Menu","Text","PaginationControls","page","numberOfPages","onPageChange","showFastPaginationControls","theme","textColor","isV3","colors","onSurface","text","size","I18nManager","getConstants","isRTL","PaginationDropdown","numberOfItemsPerPageList","numberOfItemsPerPage","onItemsPerPageChange","showSelect","toggleSelect","useState","styles","button","contentStyle","map","option","primary","DataTablePagination","label","accessibilityLabel","style","selectPageDropdownLabel","selectPageDropdownAccessibilityLabel","rest","labelColor","alpha","rgb","string","container","optionsContainer","iconsContainer","displayName","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","flexWrap","marginVertical","fontSize","marginRight","textAlign"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport type { InternalTheme } from 'src/types';\n\nimport { useInternalTheme, withInternalTheme } from '../../core/theming';\nimport Button from '../Button/Button';\nimport IconButton from '../IconButton/IconButton';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> &\n  PaginationControlsProps &\n  PaginationDropdownProps & {\n    /**\n     * Label text to display which indicates current pagination.\n     */\n    label?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `label`.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Label text for select page dropdown to display.\n     */\n    selectPageDropdownLabel?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `selectPageDropdownLabel`.\n     */\n    selectPageDropdownAccessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme: InternalTheme;\n  };\n\ntype PaginationDropdownProps = {\n  /**\n   * The current number of rows per page.\n   */\n  numberOfItemsPerPage?: number;\n  /**\n   * Options for a number of rows per page to choose from.\n   */\n  numberOfItemsPerPageList?: Array<number>;\n  /**\n   * The function to set the number of rows per page.\n   */\n  onItemsPerPageChange?: (numberOfItemsPerPage: number) => void;\n};\n\ntype PaginationControlsProps = {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  /**\n   * Whether to show fast forward and fast rewind buttons in pagination. False by default.\n   */\n  showFastPaginationControls?: boolean;\n};\n\nconst PaginationControls = ({\n  page,\n  numberOfPages,\n  onPageChange,\n  showFastPaginationControls,\n}: PaginationControlsProps) => {\n  const theme = useInternalTheme();\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n\n  return (\n    <>\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-first\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          disabled={page === 0}\n          onPress={() => onPageChange(0)}\n          accessibilityLabel=\"page-first\"\n        />\n      ) : null}\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n        accessibilityLabel=\"chevron-left\"\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n        accessibilityLabel=\"chevron-right\"\n      />\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-last\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          disabled={numberOfPages === 0 || page === numberOfPages - 1}\n          onPress={() => onPageChange(numberOfPages - 1)}\n          accessibilityLabel=\"page-last\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst PaginationDropdown = ({\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n}: PaginationDropdownProps) => {\n  const { colors } = useInternalTheme();\n  const [showSelect, toggleSelect] = React.useState<boolean>(false);\n\n  return (\n    <Menu\n      visible={showSelect}\n      onDismiss={() => toggleSelect(!showSelect)}\n      anchor={\n        <Button\n          mode=\"outlined\"\n          onPress={() => toggleSelect(true)}\n          style={styles.button}\n          icon=\"menu-down\"\n          contentStyle={styles.contentStyle}\n        >\n          {`${numberOfItemsPerPage}`}\n        </Button>\n      }\n    >\n      {numberOfItemsPerPageList?.map((option) => (\n        <Menu.Item\n          key={option}\n          titleStyle={\n            option === numberOfItemsPerPage && {\n              color: colors?.primary,\n            }\n          }\n          onPress={() => {\n            onItemsPerPageChange?.(option);\n            toggleSelect(false);\n          }}\n          title={option}\n        />\n      ))}\n    </Menu>\n  );\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTablePagination = ({\n  label,\n  accessibilityLabel,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  showFastPaginationControls = false,\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  selectPageDropdownLabel,\n  selectPageDropdownAccessibilityLabel,\n  ...rest\n}: Props) => {\n  const labelColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme?.colors.text\n  )\n    .alpha(0.6)\n    .rgb()\n    .string();\n\n  return (\n    <View\n      {...rest}\n      style={[styles.container, style]}\n      accessibilityLabel=\"pagination-container\"\n    >\n      {numberOfItemsPerPageList &&\n        numberOfItemsPerPage &&\n        onItemsPerPageChange && (\n          <View\n            accessibilityLabel=\"Options Select\"\n            style={styles.optionsContainer}\n          >\n            <Text\n              style={[styles.label, { color: labelColor }]}\n              numberOfLines={3}\n              accessibilityLabel={\n                selectPageDropdownAccessibilityLabel ||\n                'selectPageDropdownLabel'\n              }\n            >\n              {selectPageDropdownLabel}\n            </Text>\n            <PaginationDropdown\n              numberOfItemsPerPageList={numberOfItemsPerPageList}\n              numberOfItemsPerPage={numberOfItemsPerPage}\n              onItemsPerPageChange={onItemsPerPageChange}\n            />\n          </View>\n        )}\n      <Text\n        style={[styles.label, { color: labelColor }]}\n        numberOfLines={3}\n        accessibilityLabel={accessibilityLabel || 'label'}\n      >\n        {label}\n      </Text>\n      <View style={styles.iconsContainer}>\n        <PaginationControls\n          showFastPaginationControls={showFastPaginationControls}\n          onPageChange={onPageChange}\n          page={page}\n          numberOfPages={numberOfPages}\n        />\n      </View>\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6,\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16,\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16,\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse',\n  },\n});\n\nexport default withInternalTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}
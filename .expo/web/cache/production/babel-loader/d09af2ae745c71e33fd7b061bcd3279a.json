{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useTheme}from'@react-navigation/native';import*as React from'react';import StatusBar from\"react-native-web/dist/exports/StatusBar\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";export default function ModalStatusBarManager(_ref){var _flattenedStyle$trans,_flattenedStyle$trans2;var dark=_ref.dark,layout=_ref.layout,insets=_ref.insets,style=_ref.style;var _useTheme=useTheme(),darkTheme=_useTheme.dark;var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),overlapping=_React$useState2[0],setOverlapping=_React$useState2[1];var scale=1-20/layout.width;var offset=(insets.top-34)*scale;var flattenedStyle=StyleSheet.flatten(style);var translateY=flattenedStyle===null||flattenedStyle===void 0?void 0:(_flattenedStyle$trans=flattenedStyle.transform)===null||_flattenedStyle$trans===void 0?void 0:(_flattenedStyle$trans2=_flattenedStyle$trans.find(function(s){return s.translateY!==undefined;}))===null||_flattenedStyle$trans2===void 0?void 0:_flattenedStyle$trans2.translateY;React.useEffect(function(){var listener=function listener(_ref2){var value=_ref2.value;setOverlapping(value<offset);};var sub=translateY===null||translateY===void 0?void 0:translateY.addListener(listener);return function(){return translateY===null||translateY===void 0?void 0:translateY.removeListener(sub);};},[offset,translateY]);var darkContent=dark!=null?dark:!darkTheme;return React.createElement(StatusBar,{animated:true,barStyle:overlapping&&darkContent?'dark-content':'light-content'});}","map":{"version":3,"sources":["ModalStatusBarManager.tsx"],"names":["useTheme","React","ModalStatusBarManager","dark","layout","insets","style","darkTheme","overlapping","setOverlapping","useState","scale","width","offset","top","flattenedStyle","StyleSheet","flatten","translateY","transform","find","s","undefined","useEffect","listener","value","sub","addListener","removeListener","darkContent"],"mappings":"iEAAA,OAASA,QAAQ,KAAQ,0BAA0B,CACnD,MAAO,GAAKC,MAAK,KAAM,OAAO,CAAA,gIAa9B,cAAe,SAASC,sBAAqB,CAAA,IAAA,CAKnC,CAAA,GAAA,sBAAA,CAAA,sBAAA,CALoC,GAC5CC,KAAI,CAIE,IAAA,CAJNA,IAAI,CACJC,MAAM,CAGA,IAAA,CAHNA,MAAM,CACNC,MAAM,CAEA,IAAA,CAFNA,MAAM,CACNC,KAAAA,CACM,IAAA,CADNA,KAAAA,CAEA,cAA4BN,QAAQ,EAAE,CAAxBO,SAAAA,WAANJ,IAAI,CACZ,oBAAsCF,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC,oDAAnDF,WAAW,qBAAEC,cAAc,qBAElC,GAAME,MAAK,CAAG,CAAC,CAAG,EAAE,CAAGP,MAAM,CAACQ,KAAK,CACnC,GAAMC,OAAM,CAAG,CAACR,MAAM,CAACS,GAAG,CAAG,EAAE,EAAIH,KAAK,CAExC,GAAMI,eAAc,CAAGC,UAAU,CAACC,OAAO,CAACX,KAAK,CAAC,CAChD,GAAMY,WAAU,CAAGH,cAAc,GAAA,IAAA,EAAdA,cAAc,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,CAAA,qBAAA,CAAdA,cAAc,CAAEI,SAAS,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,CAAA,sBAAA,CAAzBJ,qBAAAA,CAA2BK,IAAI,CAC/CC,SAAAA,CAAM,QAAKA,EAAC,CAACH,UAAU,GAAKI,SAAS,GACvC,IAAA,IAAA,EAAA,sBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAFkBP,sBAAAA,CAEhBG,UAAU,CAEbjB,KAAK,CAACsB,SAAS,CAAC,UAAM,CACpB,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAG,KAAA,CAAkC,CAAjC,GAAEC,MAAAA,CAA0B,KAAA,CAA1BA,KAAAA,CAClBhB,cAAc,CAACgB,KAAK,CAAGZ,MAAM,CAAC,CAChC,CAAC,CAED,GAAMa,IAAG,CAAGR,UAAU,GAAA,IAAA,EAAVA,UAAU,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAVA,UAAU,CAAES,WAAW,CAACH,QAAQ,CAAC,CAE7C,MAAO,kBAAMN,WAAU,GAAA,IAAA,EAAVA,UAAU,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAVA,UAAU,CAAEU,cAAc,CAACF,GAAG,CAAC,GAC9C,CAAC,CAAE,CAACb,MAAM,CAAEK,UAAU,CAAC,CAAC,CAExB,GAAMW,YAAW,CAAG1B,IAAI,OAAJA,IAAI,CAAI,CAACI,SAAS,CAEtC,MACE,MAAA,CAAA,aAAA,CAAC,SAAS,CAAA,CACR,QAAQ,CAAA,IAAA,CACR,QAAQ,CAAEC,WAAW,EAAIqB,WAAW,CAAG,cAAc,CAAG,eAAgB,CAAA,CACxE,CAEN","sourceRoot":"../../src","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { StatusBar, StyleSheet } from 'react-native';\nexport default function ModalStatusBarManager(_ref) {\n  var _flattenedStyle$trans, _flattenedStyle$trans2;\n  let {\n    dark,\n    layout,\n    insets,\n    style\n  } = _ref;\n  const {\n    dark: darkTheme\n  } = useTheme();\n  const [overlapping, setOverlapping] = React.useState(true);\n  const scale = 1 - 20 / layout.width;\n  const offset = (insets.top - 34) * scale;\n  const flattenedStyle = StyleSheet.flatten(style);\n  const translateY = flattenedStyle === null || flattenedStyle === void 0 ? void 0 : (_flattenedStyle$trans = flattenedStyle.transform) === null || _flattenedStyle$trans === void 0 ? void 0 : (_flattenedStyle$trans2 = _flattenedStyle$trans.find(s => s.translateY !== undefined)) === null || _flattenedStyle$trans2 === void 0 ? void 0 : _flattenedStyle$trans2.translateY;\n  React.useEffect(() => {\n    const listener = _ref2 => {\n      let {\n        value\n      } = _ref2;\n      setOverlapping(value < offset);\n    };\n    const sub = translateY === null || translateY === void 0 ? void 0 : translateY.addListener(listener);\n    return () => translateY === null || translateY === void 0 ? void 0 : translateY.removeListener(sub);\n  }, [offset, translateY]);\n  const darkContent = dark ?? !darkTheme;\n  return /*#__PURE__*/React.createElement(StatusBar, {\n    animated: true,\n    barStyle: overlapping && darkContent ? 'dark-content' : 'light-content'\n  });\n}\n//# sourceMappingURL=ModalStatusBarManager.js.map"]},"metadata":{},"sourceType":"module"}
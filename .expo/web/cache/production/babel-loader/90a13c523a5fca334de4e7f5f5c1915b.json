{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{createTheming}from'@callstack/react-theme-provider';import color from'color';import{MD2DarkTheme,MD2LightTheme,MD3DarkTheme,MD3LightTheme}from\"../styles/themes\";export var DefaultTheme=MD3LightTheme;var _createTheming=createTheming(MD3LightTheme),ThemeProvider=_createTheming.ThemeProvider,withTheme=_createTheming.withTheme,useAppTheme=_createTheming.useTheme;export{ThemeProvider,withTheme,useAppTheme};export function useTheme(overrides){return useAppTheme(overrides);}export var useInternalTheme=function useInternalTheme(themeOverrides){return useAppTheme(themeOverrides);};export var withInternalTheme=function withInternalTheme(WrappedComponent){return withTheme(WrappedComponent);};export var defaultThemesByVersion={2:{light:MD2LightTheme,dark:MD2DarkTheme},3:{light:MD3LightTheme,dark:MD3DarkTheme}};export var getTheme=function getTheme(){var isDark=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var isV3=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var themeVersion=isV3?3:2;var scheme=isDark?'dark':'light';return defaultThemesByVersion[themeVersion][scheme];};export function adaptNavigationTheme(themes){var reactNavigationLight=themes.reactNavigationLight,reactNavigationDark=themes.reactNavigationDark,materialLight=themes.materialLight,materialDark=themes.materialDark;var getAdaptedTheme=function getAdaptedTheme(navigationTheme,MD3Theme){return _objectSpread(_objectSpread({},navigationTheme),{},{colors:_objectSpread(_objectSpread({},navigationTheme.colors),{},{primary:MD3Theme.colors.primary,background:MD3Theme.colors.background,card:MD3Theme.colors.elevation.level2,text:MD3Theme.colors.onSurface,border:MD3Theme.colors.outline,notification:MD3Theme.colors.error})});};var MD3Themes={light:materialLight||MD3LightTheme,dark:materialDark||MD3DarkTheme};if(reactNavigationLight&&reactNavigationDark){var modes=['light','dark'];var NavigationThemes={light:reactNavigationLight,dark:reactNavigationDark};var _modes$reduce=modes.reduce(function(prev,curr){return _objectSpread(_objectSpread({},prev),{},_defineProperty({},curr,getAdaptedTheme(NavigationThemes[curr],MD3Themes[curr])));},{light:reactNavigationLight,dark:reactNavigationDark}),adaptedLight=_modes$reduce.light,adaptedDark=_modes$reduce.dark;return{LightTheme:adaptedLight,DarkTheme:adaptedDark};}if(reactNavigationDark){return{DarkTheme:getAdaptedTheme(reactNavigationDark,MD3Themes.dark)};}return{LightTheme:getAdaptedTheme(reactNavigationLight,MD3Themes.light)};}export var getDynamicThemeElevations=function getDynamicThemeElevations(scheme){var elevationValues=['transparent',0.05,0.08,0.11,0.12,0.14];return elevationValues.reduce(function(elevations,elevationValue,index){return _objectSpread(_objectSpread({},elevations),{},_defineProperty({},\"level\"+index,index===0?elevationValue:color(scheme.surface).mix(color(scheme.primary),elevationValue).rgb().string()));},{});};","map":{"version":3,"mappings":"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","names":["createTheming","color","MD2DarkTheme","MD2LightTheme","MD3DarkTheme","MD3LightTheme","DefaultTheme","ThemeProvider","withTheme","useAppTheme","useTheme","overrides","useInternalTheme","themeOverrides","withInternalTheme","WrappedComponent","defaultThemesByVersion","light","dark","getTheme","isDark","isV3","themeVersion","scheme","adaptNavigationTheme","themes","reactNavigationLight","reactNavigationDark","materialLight","materialDark","getAdaptedTheme","navigationTheme","MD3Theme","colors","primary","background","card","elevation","level2","text","onSurface","border","outline","notification","error","MD3Themes","modes","NavigationThemes","reduce","prev","curr","adaptedLight","adaptedDark","LightTheme","DarkTheme","getDynamicThemeElevations","elevationValues","elevations","elevationValue","index","surface","mix","rgb","string"],"sources":["theming.tsx"],"sourcesContent":["import type { ComponentType } from 'react';\n\nimport { $DeepPartial, createTheming } from '@callstack/react-theme-provider';\nimport color from 'color';\n\nimport {\n  MD2DarkTheme,\n  MD2LightTheme,\n  MD3DarkTheme,\n  MD3LightTheme,\n} from '../styles/themes';\nimport type {\n  InternalTheme,\n  MD3Theme,\n  MD3AndroidColors,\n  NavigationTheme,\n} from '../types';\n\nexport const DefaultTheme = MD3LightTheme;\n\nexport const {\n  ThemeProvider,\n  withTheme,\n  useTheme: useAppTheme,\n} = createTheming<unknown>(MD3LightTheme);\n\nexport function useTheme<T = MD3Theme>(overrides?: $DeepPartial<T>) {\n  return useAppTheme<T>(overrides);\n}\n\nexport const useInternalTheme = (\n  themeOverrides?: $DeepPartial<InternalTheme>\n) => useAppTheme<InternalTheme>(themeOverrides);\n\nexport const withInternalTheme = <Props extends { theme: InternalTheme }, C>(\n  WrappedComponent: ComponentType<Props & { theme: InternalTheme }> & C\n) => withTheme<Props, C>(WrappedComponent);\n\nexport const defaultThemesByVersion = {\n  2: {\n    light: MD2LightTheme,\n    dark: MD2DarkTheme,\n  },\n  3: {\n    light: MD3LightTheme,\n    dark: MD3DarkTheme,\n  },\n};\n\nexport const getTheme = (isDark = false, isV3 = true) => {\n  const themeVersion = isV3 ? 3 : 2;\n  const scheme = isDark ? 'dark' : 'light';\n\n  return defaultThemesByVersion[themeVersion][scheme];\n};\n\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: {\n  reactNavigationLight: NavigationTheme;\n  materialLight?: MD3Theme;\n}): {\n  LightTheme: NavigationTheme;\n};\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: {\n  reactNavigationDark: NavigationTheme;\n  materialDark?: MD3Theme;\n}): {\n  DarkTheme: NavigationTheme;\n};\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: {\n  reactNavigationLight: NavigationTheme;\n  reactNavigationDark: NavigationTheme;\n  materialLight?: MD3Theme;\n  materialDark?: MD3Theme;\n}): { LightTheme: NavigationTheme; DarkTheme: NavigationTheme };\n// eslint-disable-next-line no-redeclare\nexport function adaptNavigationTheme(themes: any) {\n  const {\n    reactNavigationLight,\n    reactNavigationDark,\n    materialLight,\n    materialDark,\n  } = themes;\n\n  const getAdaptedTheme = (\n    navigationTheme: NavigationTheme,\n    MD3Theme: MD3Theme\n  ) => {\n    return {\n      ...navigationTheme,\n      colors: {\n        ...navigationTheme.colors,\n        primary: MD3Theme.colors.primary,\n        background: MD3Theme.colors.background,\n        card: MD3Theme.colors.elevation.level2,\n        text: MD3Theme.colors.onSurface,\n        border: MD3Theme.colors.outline,\n        notification: MD3Theme.colors.error,\n      },\n    };\n  };\n\n  const MD3Themes = {\n    light: materialLight || MD3LightTheme,\n    dark: materialDark || MD3DarkTheme,\n  };\n\n  if (reactNavigationLight && reactNavigationDark) {\n    const modes = ['light', 'dark'] as const;\n\n    const NavigationThemes = {\n      light: reactNavigationLight,\n      dark: reactNavigationDark,\n    };\n\n    const { light: adaptedLight, dark: adaptedDark } = modes.reduce(\n      (prev, curr) => {\n        return {\n          ...prev,\n          [curr]: getAdaptedTheme(NavigationThemes[curr], MD3Themes[curr]),\n        };\n      },\n      {\n        light: reactNavigationLight,\n        dark: reactNavigationDark,\n      }\n    );\n\n    return {\n      LightTheme: adaptedLight,\n      DarkTheme: adaptedDark,\n    };\n  }\n\n  if (reactNavigationDark) {\n    return {\n      DarkTheme: getAdaptedTheme(reactNavigationDark, MD3Themes.dark),\n    };\n  }\n\n  return {\n    LightTheme: getAdaptedTheme(reactNavigationLight, MD3Themes.light),\n  };\n}\n\nexport const getDynamicThemeElevations = (scheme: MD3AndroidColors) => {\n  const elevationValues = ['transparent', 0.05, 0.08, 0.11, 0.12, 0.14];\n  return elevationValues.reduce((elevations, elevationValue, index) => {\n    return {\n      ...elevations,\n      [`level${index}`]:\n        index === 0\n          ? elevationValue\n          : color(scheme.surface)\n              .mix(color(scheme.primary), elevationValue as number)\n              .rgb()\n              .string(),\n    };\n  }, {});\n};\n"]},"metadata":{},"sourceType":"module"}
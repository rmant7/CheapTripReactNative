{"ast":null,"code":"import*as React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";export default function useIsKeyboardShown(_ref){var onShow=_ref.onShow,onHide=_ref.onHide;React.useEffect(function(){var willShowSubscription;var willHideSubscription;var didShowSubscription;var didHideSubscription;if(Platform.OS==='ios'){willShowSubscription=Keyboard.addListener('keyboardWillShow',onShow);willHideSubscription=Keyboard.addListener('keyboardWillHide',onHide);}else{didShowSubscription=Keyboard.addListener('keyboardDidShow',onShow);didHideSubscription=Keyboard.addListener('keyboardDidHide',onHide);}return function(){if(Platform.OS==='ios'){var _willShowSubscription,_willHideSubscription;if((_willShowSubscription=willShowSubscription)!==null&&_willShowSubscription!==void 0&&_willShowSubscription.remove){willShowSubscription.remove();}else{Keyboard.removeListener('keyboardWillShow',onShow);}if((_willHideSubscription=willHideSubscription)!==null&&_willHideSubscription!==void 0&&_willHideSubscription.remove){willHideSubscription.remove();}else{Keyboard.removeListener('keyboardWillHide',onHide);}}else{var _didShowSubscription,_didHideSubscription;if((_didShowSubscription=didShowSubscription)!==null&&_didShowSubscription!==void 0&&_didShowSubscription.remove){didShowSubscription.remove();}else{Keyboard.removeListener('keyboardDidShow',onShow);}if((_didHideSubscription=didHideSubscription)!==null&&_didHideSubscription!==void 0&&_didHideSubscription.remove){didHideSubscription.remove();}else{Keyboard.removeListener('keyboardDidHide',onHide);}}};},[onHide,onShow]);}","map":{"version":3,"mappings":"AAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,2HAO9B,cAAe,SAASC,mBAAkB,MAA4B,IAAzBC,OAAM,CAAiBC,KAAvBD,MAAM,CAAEE,OAAeD,KAAfC,OACnDJ,KAAK,CAACK,SAAS,CAAC,UAAM,CACpB,GAAIC,qBAAyD,CAC7D,GAAIC,qBAAyD,CAC7D,GAAIC,oBAAwD,CAC5D,GAAIC,oBAAwD,CAE5D,GAAIC,QAAQ,CAACC,EAAE,GAAK,KAAK,CAAE,CACzBL,oBAAoB,CAAGM,QAAQ,CAACC,WAAW,CAAC,kBAAkB,CAAEX,MAAM,CAAC,CACvEK,oBAAoB,CAAGK,QAAQ,CAACC,WAAW,CAAC,kBAAkB,CAAET,MAAM,CAAC,CACzE,CAAC,IAAM,CACLI,mBAAmB,CAAGI,QAAQ,CAACC,WAAW,CAAC,iBAAiB,CAAEX,MAAM,CAAC,CACrEO,mBAAmB,CAAGG,QAAQ,CAACC,WAAW,CAAC,iBAAiB,CAAET,MAAM,CAAC,CACvE,CAEA,MAAO,WAAM,CACX,GAAIM,QAAQ,CAACC,EAAE,GAAK,KAAK,CAAE,iDACzB,0BAAIL,oBAAoB,0CAApBQ,sBAAsBC,MAAM,CAAE,CAChCT,oBAAoB,CAACS,MAAM,EAAE,CAC/B,CAAC,IAAM,CAELH,QAAQ,CAACI,cAAc,CAAC,kBAAkB,CAAEd,MAAM,CAAC,CACrD,CAEA,0BAAIK,oBAAoB,0CAApBU,sBAAsBF,MAAM,CAAE,CAChCR,oBAAoB,CAACQ,MAAM,EAAE,CAC/B,CAAC,IAAM,CAELH,QAAQ,CAACI,cAAc,CAAC,kBAAkB,CAAEZ,MAAM,CAAC,CACrD,CACF,CAAC,IAAM,+CACL,yBAAII,mBAAmB,yCAAnBU,qBAAqBH,MAAM,CAAE,CAC/BP,mBAAmB,CAACO,MAAM,EAAE,CAC9B,CAAC,IAAM,CAELH,QAAQ,CAACI,cAAc,CAAC,iBAAiB,CAAEd,MAAM,CAAC,CACpD,CAEA,yBAAIO,mBAAmB,yCAAnBU,qBAAqBJ,MAAM,CAAE,CAC/BN,mBAAmB,CAACM,MAAM,EAAE,CAC9B,CAAC,IAAM,CAELH,QAAQ,CAACI,cAAc,CAAC,iBAAiB,CAAEZ,MAAM,CAAC,CACpD,CACF,CACF,CAAC,CACH,CAAC,CAAE,CAACA,MAAM,CAAEF,MAAM,CAAC,CAAC,CACtB","names":["React","useIsKeyboardShown","onShow","_ref","onHide","useEffect","willShowSubscription","willHideSubscription","didShowSubscription","didHideSubscription","Platform","OS","Keyboard","addListener","_willShowSubscription","remove","removeListener","_willHideSubscription","_didShowSubscription","_didHideSubscription"],"sources":["useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, NativeEventSubscription, Platform } from 'react-native';\n\ntype Props = {\n  onShow: () => void;\n  onHide: () => void;\n};\nexport default function useIsKeyboardShown({ onShow, onHide }: Props) {\n  React.useEffect(() => {\n    let willShowSubscription: NativeEventSubscription | undefined;\n    let willHideSubscription: NativeEventSubscription | undefined;\n    let didShowSubscription: NativeEventSubscription | undefined;\n    let didHideSubscription: NativeEventSubscription | undefined;\n\n    if (Platform.OS === 'ios') {\n      willShowSubscription = Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = Keyboard.addListener('keyboardDidHide', onHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        if (willShowSubscription?.remove) {\n          willShowSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n\n        if (willHideSubscription?.remove) {\n          willHideSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        if (didShowSubscription?.remove) {\n          didShowSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n\n        if (didHideSubscription?.remove) {\n          didHideSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}\n"]},"metadata":{},"sourceType":"module"}
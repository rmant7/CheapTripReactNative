{"ast":null,"code":"export function addEventListener(Module){var _Module$addEventListe;for(var _len=arguments.length,rest=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){rest[_key-1]=arguments[_key];}var eventName=rest[0],handler=rest[1];var removed=false;var subscription=(_Module$addEventListe=Module.addEventListener(eventName,handler))!==null&&_Module$addEventListe!==void 0?_Module$addEventListe:{remove:function remove(){var _Module$removeEventLi,_Module$remove;if(removed){return;}(_Module$removeEventLi=Module.removeEventListener)===null||_Module$removeEventLi===void 0?void 0:_Module$removeEventLi.call(Module,eventName,handler);(_Module$remove=Module.remove)===null||_Module$remove===void 0?void 0:_Module$remove.call(Module,eventName,handler);removed=true;}};return subscription;}export function addListener(Module){var _Module$addListener;for(var _len2=arguments.length,rest=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){rest[_key2-1]=arguments[_key2];}var eventName=rest[0],handler=rest[1];var removed=false;var subscription=(_Module$addListener=Module.addListener(eventName,handler))!==null&&_Module$addListener!==void 0?_Module$addListener:{remove:function remove(){if(removed){return;}Module.removeEventListener(eventName,handler);removed=true;}};return subscription;}","map":{"version":3,"sources":["addEventListener.tsx"],"names":["addEventListener","Module","rest","eventName","handler","removed","subscription","remove","removeEventListener","addListener"],"mappings":"AAKA,MAAO,SAASA,iBAAgB,CAQ9BC,MAAS,CAAuD,CAAA,GAAA,sBAAA,CAAA,IAAA,GAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAlDC,IAAI,CAAA,GAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,CAAJA,IAAI,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA,CAClB,GAAOC,UAAS,CAAaD,IAAI,IAAfE,OAAO,CAAIF,IAAI,IAEjC,GAAIG,QAAO,CAAG,KAAK,CAEnB,GAAMC,aAAY,CAAA,CAAA,qBAAA,CAAGL,MAAM,CAACD,gBAAgB,CAACG,SAAS,CAAEC,OAAO,CAAC,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,qBAAA,CAAI,CAClEG,MAAM,CAAE,iBAAM,CAAA,GAAA,sBAAA,CAAA,cAAA,CACZ,GAAIF,OAAO,CAAE,CACX,OACF,CAEA,CAAA,qBAAA,CAAA,MAAM,CAACG,mBAAmB,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAA1B,qBAAA,CAAA,IAAA,CAAA,MAAM,CAAuBL,SAAS,CAAEC,OAAO,CAAC,CAChD,CAAA,cAAA,CAAA,MAAM,CAACG,MAAM,IAAA,IAAA,EAAA,cAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAb,cAAA,CAAA,IAAA,CAAA,MAAM,CAAUJ,SAAS,CAAEC,OAAO,CAAC,CACnCC,OAAO,CAAG,IAAI,CAChB,CACF,CAAC,CAED,MAAOC,aAAY,CACrB,CAEA,MAAO,SAASG,YAAW,CAKzBR,MAAS,CAAkD,CAAA,GAAA,oBAAA,CAAA,IAAA,GAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAA7CC,IAAI,CAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA,CAAJA,IAAI,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAClB,GAAOC,UAAS,CAAaD,IAAI,IAAfE,OAAO,CAAIF,IAAI,IAEjC,GAAIG,QAAO,CAAG,KAAK,CAEnB,GAAMC,aAAY,CAAA,CAAA,mBAAA,CAAGL,MAAM,CAACQ,WAAW,CAACN,SAAS,CAAEC,OAAO,CAAC,IAAA,IAAA,EAAA,mBAAA,GAAA,IAAA,EAAA,CAAA,mBAAA,CAAI,CAC7DG,MAAM,CAAE,iBAAM,CACZ,GAAIF,OAAO,CAAE,CACX,OACF,CAEAJ,MAAM,CAACO,mBAAmB,CAACL,SAAS,CAAEC,OAAO,CAAC,CAC9CC,OAAO,CAAG,IAAI,CAChB,CACF,CAAC,CAED,MAAOC,aAAY,CACrB","sourcesContent":["import type {\n  NativeEventSubscription,\n  EmitterSubscription,\n} from 'react-native';\n\nexport function addEventListener<\n  T extends {\n    addEventListener: (\n      ...args: any\n    ) => NativeEventSubscription | EmitterSubscription;\n  } & { removeEventListener?: (...args: any) => void } & {\n    remove?: (...args: any) => void;\n  }\n>(Module: T, ...rest: Parameters<typeof Module.addEventListener>) {\n  const [eventName, handler] = rest;\n\n  let removed = false;\n\n  const subscription = Module.addEventListener(eventName, handler) ?? {\n    remove: () => {\n      if (removed) {\n        return;\n      }\n\n      Module.removeEventListener?.(eventName, handler);\n      Module.remove?.(eventName, handler);\n      removed = true;\n    },\n  };\n\n  return subscription;\n}\n\nexport function addListener<\n  T extends {\n    addListener: (...args: any) => EmitterSubscription;\n    removeEventListener: (...args: any) => void;\n  }\n>(Module: T, ...rest: Parameters<typeof Module.addListener>) {\n  const [eventName, handler] = rest;\n\n  let removed = false;\n\n  const subscription = Module.addListener(eventName, handler) ?? {\n    remove: () => {\n      if (removed) {\n        return;\n      }\n\n      Module.removeEventListener(eventName, handler);\n      removed = true;\n    },\n  };\n\n  return subscription;\n}\n"]},"metadata":{},"sourceType":"module"}
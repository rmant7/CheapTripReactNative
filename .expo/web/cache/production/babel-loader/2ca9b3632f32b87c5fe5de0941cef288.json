{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"size\",\"style\",\"theme\"],_excluded2=[\"backgroundColor\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{withInternalTheme}from\"../../core/theming\";import{white}from\"../../styles/themes/v2/colors\";import getContrastingColor from\"../../utils/getContrastingColor\";import Icon from\"../Icon\";var defaultSize=64;var Avatar=function Avatar(_ref){var _theme$colors,_rest$color;var icon=_ref.icon,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.primary:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,_excluded2);var textColor=(_rest$color=rest.color)!==null&&_rest$color!==void 0?_rest$color:getContrastingColor(backgroundColor,white,'rgba(0, 0, 0, .54)');return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(Icon,{source:icon,color:textColor,size:size*0.6}));};Avatar.displayName='Avatar.Icon';var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'}});export default withInternalTheme(Avatar);","map":{"version":3,"mappings":"6cAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,uHAG9B,OAASC,iBAAiB,0BAC1B,OAASC,KAAK,qCAEd,MAAOC,oBAAmB,uCAC1B,MAAOC,KAAI,eAEX,GAAMC,YAAW,CAAG,EAAE,CAyCtB,GAAMC,OAAM,CAAG,QAATA,OAAM,CAAGC,KAAgE,kCAA7DC,KAAI,CAAoDD,KAAxDC,IAAI,WAAoDD,KAAlDE,IAAI,CAAJA,IAAI,oBAAGJ,WAAW,WAAEK,KAAK,CAAyBH,KAA9BG,KAAK,CAAEC,KAAK,CAAkBJ,KAAvBI,KAAK,CAAKC,8BAAaL,gBACxE,UACEM,UAAU,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAI,CAAC,CAAC,6BADzBK,eAAe,CAAfA,eAAe,+CAAGJ,KAAK,CAACK,MAAM,wCAAZC,cAAcC,OAAO,uBAAKC,qDAEpD,GAAMC,UAAS,cACbR,IAAI,CAACS,KAAK,2CACVlB,mBAAmB,CAACY,eAAe,CAAEb,KAAK,CAAE,oBAAoB,CAAC,CAEnE,MACEF,qBAACsB,IAAI,WACHZ,KAAK,CAAE,CACL,CACEa,KAAK,CAAEd,IAAI,CACXe,MAAM,CAAEf,IAAI,CACZgB,YAAY,CAAEhB,IAAI,CAAG,CAAC,CACtBM,+BACF,CAAC,CACDW,MAAM,CAACC,SAAS,CAChBR,SAAS,CACT,EACEP,IAAI,EAERZ,oBAACI,IAAI,EAACwB,MAAM,CAAEpB,IAAK,CAACa,KAAK,CAAED,SAAU,CAACX,IAAI,CAAEA,IAAI,CAAG,GAAI,EAAG,CACrD,CAEX,CAAC,CAEDH,MAAM,CAACuB,WAAW,CAAG,aAAa,CAElC,GAAMH,OAAM,CAAGb,UAAU,CAACiB,MAAM,CAAC,CAC/BH,SAAS,CAAE,CACTI,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QACd,CACF,CAAC,CAAC,CAEF,cAAe/B,kBAAiB,CAACK,MAAM,CAAC","names":["React","withInternalTheme","white","getContrastingColor","Icon","defaultSize","Avatar","_ref","icon","size","style","theme","rest","StyleSheet","flatten","backgroundColor","colors","_theme$colors","primary","restStyle","textColor","color","View","width","height","borderRadius","styles","container","source","displayName","create","justifyContent","alignItems"],"sources":["AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport Icon, { IconSource } from '../Icon';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({ icon, size = defaultSize, style, theme, ...rest }: Props) => {\n  const { backgroundColor = theme.colors?.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withInternalTheme(Avatar);\n"]},"metadata":{},"sourceType":"module"}
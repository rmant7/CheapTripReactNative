{"ast":null,"code":"import color from'color';var getUnderlayColor=function getUnderlayColor(_ref){var theme=_ref.theme,calculatedRippleColor=_ref.calculatedRippleColor,underlayColor=_ref.underlayColor;if(underlayColor!=null){return underlayColor;}if(theme.isV3){return color(calculatedRippleColor).rgb().string();}return color(calculatedRippleColor).fade(0.5).rgb().string();};var getRippleColor=function getRippleColor(_ref2){var theme=_ref2.theme,rippleColor=_ref2.rippleColor;if(rippleColor){return rippleColor;}if(theme.isV3){return color(theme.colors.onSurface).alpha(0.12).rgb().string();}if(theme.dark){return color(theme.colors.text).alpha(0.32).rgb().string();}return color(theme.colors.text).alpha(0.2).rgb().string();};export var getTouchableRippleColors=function getTouchableRippleColors(_ref3){var theme=_ref3.theme,rippleColor=_ref3.rippleColor,underlayColor=_ref3.underlayColor;var calculatedRippleColor=getRippleColor({theme:theme,rippleColor:rippleColor});return{calculatedRippleColor:calculatedRippleColor,calculatedUnderlayColor:getUnderlayColor({theme:theme,calculatedRippleColor:calculatedRippleColor,underlayColor:underlayColor})};};","map":{"version":3,"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CAIzB,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAGC,KAQnB,IAPJC,MAAK,CAOND,KAPCC,KAAK,CACLC,qBAAqB,CAMtBF,KANCE,qBAAqB,CACrBC,cAKDH,KALCG,cAMA,GAAIA,aAAa,EAAI,IAAI,CAAE,CACzB,MAAOA,cAAa,CACtB,CAEA,GAAIF,KAAK,CAACG,IAAI,CAAE,CACd,MAAON,MAAK,CAACI,qBAAqB,CAAC,CAACG,GAAG,EAAE,CAACC,MAAM,EAAE,CACpD,CAEA,MAAOR,MAAK,CAACI,qBAAqB,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC,CAACF,GAAG,EAAE,CAACC,MAAM,EAAE,CAC9D,CAAC,CAED,GAAME,eAAc,CAAG,QAAjBA,eAAc,CAAGC,MAMjB,IALJR,MAAK,CAKNQ,MALCR,KAAK,CACLS,YAIDD,MAJCC,YAKA,GAAIA,WAAW,CAAE,CACf,MAAOA,YAAW,CACpB,CAEA,GAAIT,KAAK,CAACG,IAAI,CAAE,CACd,MAAON,MAAK,CAACG,KAAK,CAACU,MAAM,CAACC,SAAS,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACR,GAAG,EAAE,CAACC,MAAM,EAAE,CACjE,CAEA,GAAIL,KAAK,CAACa,IAAI,CAAE,CACd,MAAOhB,MAAK,CAACG,KAAK,CAACU,MAAM,CAACI,IAAI,CAAC,CAACF,KAAK,CAAC,IAAI,CAAC,CAACR,GAAG,EAAE,CAACC,MAAM,EAAE,CAC5D,CACA,MAAOR,MAAK,CAACG,KAAK,CAACU,MAAM,CAACI,IAAI,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC,CAACR,GAAG,EAAE,CAACC,MAAM,EAAE,CAC3D,CAAC,CAED,MAAO,IAAMU,yBAAwB,CAAG,QAA3BA,yBAAwB,CAAGC,MAQlC,IAPJhB,MAAK,CAONgB,MAPChB,KAAK,CACLS,WAAW,CAMZO,MANCP,WAAW,CACXP,cAKDc,MALCd,cAMA,GAAMD,sBAAqB,CAAGM,cAAc,CAAC,CAAEP,KAAK,CAALA,KAAK,CAAES,uBAAY,CAAC,CAAC,CACpE,MAAO,CACLR,qBAAqB,CAArBA,qBAAqB,CACrBgB,uBAAuB,CAAEnB,gBAAgB,CAAC,CACxCE,KAAK,CAALA,KAAK,CACLC,qBAAqB,CAArBA,qBAAqB,CACrBC,2BACF,CAAC,CACH,CAAC,CACH,CAAC","names":["color","getUnderlayColor","_ref","theme","calculatedRippleColor","underlayColor","isV3","rgb","string","fade","getRippleColor","_ref2","rippleColor","colors","onSurface","alpha","dark","text","getTouchableRippleColors","_ref3","calculatedUnderlayColor"],"sources":["utils.ts"],"sourcesContent":["import color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\nconst getUnderlayColor = ({\n  theme,\n  calculatedRippleColor,\n  underlayColor,\n}: {\n  theme: InternalTheme;\n  calculatedRippleColor: string;\n  underlayColor?: string;\n}) => {\n  if (underlayColor != null) {\n    return underlayColor;\n  }\n\n  if (theme.isV3) {\n    return color(calculatedRippleColor).rgb().string();\n  }\n\n  return color(calculatedRippleColor).fade(0.5).rgb().string();\n};\n\nconst getRippleColor = ({\n  theme,\n  rippleColor,\n}: {\n  theme: InternalTheme;\n  rippleColor?: string;\n}) => {\n  if (rippleColor) {\n    return rippleColor;\n  }\n\n  if (theme.isV3) {\n    return color(theme.colors.onSurface).alpha(0.12).rgb().string();\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.32).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.2).rgb().string();\n};\n\nexport const getTouchableRippleColors = ({\n  theme,\n  rippleColor,\n  underlayColor,\n}: {\n  theme: InternalTheme;\n  rippleColor?: string;\n  underlayColor?: string;\n}) => {\n  const calculatedRippleColor = getRippleColor({ theme, rippleColor });\n  return {\n    calculatedRippleColor,\n    calculatedUnderlayColor: getUnderlayColor({\n      theme,\n      calculatedRippleColor,\n      underlayColor,\n    }),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
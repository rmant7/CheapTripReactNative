{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"disabled\",\"compact\",\"mode\",\"dark\",\"loading\",\"icon\",\"buttonColor\",\"textColor\",\"children\",\"accessibilityLabel\",\"accessibilityHint\",\"onPress\",\"onPressIn\",\"onPressOut\",\"onLongPress\",\"delayLongPress\",\"style\",\"theme\",\"uppercase\",\"contentStyle\",\"labelStyle\",\"testID\",\"accessible\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{withInternalTheme}from\"../../core/theming\";import ActivityIndicator from\"../ActivityIndicator\";import Icon from\"../Icon\";import Surface from\"../Surface\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import{getButtonColors}from\"./utils\";var Button=function Button(_ref){var _borderRadius,_StyleSheet$flatten;var disabled=_ref.disabled,compact=_ref.compact,_ref$mode=_ref.mode,mode=_ref$mode===void 0?'text':_ref$mode,dark=_ref.dark,loading=_ref.loading,icon=_ref.icon,customButtonColor=_ref.buttonColor,customTextColor=_ref.textColor,children=_ref.children,accessibilityLabel=_ref.accessibilityLabel,accessibilityHint=_ref.accessibilityHint,onPress=_ref.onPress,onPressIn=_ref.onPressIn,onPressOut=_ref.onPressOut,onLongPress=_ref.onLongPress,delayLongPress=_ref.delayLongPress,style=_ref.style,theme=_ref.theme,_ref$uppercase=_ref.uppercase,uppercase=_ref$uppercase===void 0?!theme.isV3:_ref$uppercase,contentStyle=_ref.contentStyle,labelStyle=_ref.labelStyle,_ref$testID=_ref.testID,testID=_ref$testID===void 0?'button':_ref$testID,accessible=_ref.accessible,rest=_objectWithoutProperties(_ref,_excluded);var isMode=React.useCallback(function(modeToCompare){return mode===modeToCompare;},[mode]);var roundness=theme.roundness,isV3=theme.isV3,animation=theme.animation;var isElevationEntitled=!disabled&&(isV3?isMode('elevated'):isMode('contained'));var initialElevation=isV3?1:2;var activeElevation=isV3?2:8;var _React$useRef=React.useRef(new Animated.Value(isElevationEntitled?initialElevation:0)),elevation=_React$useRef.current;React.useEffect(function(){elevation.setValue(isElevationEntitled?initialElevation:0);},[isElevationEntitled,elevation,initialElevation]);var handlePressIn=function handlePressIn(e){onPressIn===null||onPressIn===void 0?void 0:onPressIn(e);if(isV3?isMode('elevated'):isMode('contained')){var scale=animation.scale;Animated.timing(elevation,{toValue:activeElevation,duration:200*scale,useNativeDriver:true}).start();}};var handlePressOut=function handlePressOut(e){onPressOut===null||onPressOut===void 0?void 0:onPressOut(e);if(isV3?isMode('elevated'):isMode('contained')){var scale=animation.scale;Animated.timing(elevation,{toValue:initialElevation,duration:150*scale,useNativeDriver:true}).start();}};var borderRadius=(isV3?5:1)*roundness;var iconSize=isV3?18:16;var _getButtonColors=getButtonColors({customButtonColor:customButtonColor,customTextColor:customTextColor,theme:theme,mode:mode,disabled:disabled,dark:dark}),backgroundColor=_getButtonColors.backgroundColor,borderColor=_getButtonColors.borderColor,textColor=_getButtonColors.textColor,borderWidth=_getButtonColors.borderWidth;var rippleColor=color(textColor).alpha(0.12).rgb().string();var buttonStyle={backgroundColor:backgroundColor,borderColor:borderColor,borderWidth:borderWidth,borderRadius:borderRadius};var touchableStyle={borderRadius:style?(_borderRadius=(StyleSheet.flatten(style)||{}).borderRadius)!==null&&_borderRadius!==void 0?_borderRadius:borderRadius:borderRadius};var _ref2=StyleSheet.flatten(labelStyle)||{},customLabelColor=_ref2.color,customLabelSize=_ref2.fontSize;var font=isV3?theme.fonts.labelLarge:theme.fonts.medium;var textStyle=_objectSpread({color:textColor},font);var iconStyle=((_StyleSheet$flatten=StyleSheet.flatten(contentStyle))===null||_StyleSheet$flatten===void 0?void 0:_StyleSheet$flatten.flexDirection)==='row-reverse'?[styles.iconReverse,isV3&&styles[\"md3IconReverse\"+(compact?'Compact':'')],isV3&&isMode('text')&&styles[\"md3IconReverseTextMode\"+(compact?'Compact':'')]]:[styles.icon,isV3&&styles[\"md3Icon\"+(compact?'Compact':'')],isV3&&isMode('text')&&styles[\"md3IconTextMode\"+(compact?'Compact':'')]];return React.createElement(Surface,_extends({},rest,{style:[styles.button,compact&&styles.compact,buttonStyle,style,!isV3&&{elevation:elevation}]},isV3&&{elevation:elevation}),React.createElement(TouchableRipple,{borderless:true,onPress:onPress,onLongPress:onLongPress,onPressIn:handlePressIn,onPressOut:handlePressOut,delayLongPress:delayLongPress,accessibilityLabel:accessibilityLabel,accessibilityHint:accessibilityHint,accessibilityRole:\"button\",accessibilityState:{disabled:disabled},accessible:accessible,disabled:disabled,rippleColor:rippleColor,style:touchableStyle,testID:testID},React.createElement(View,{style:[styles.content,contentStyle]},icon&&loading!==true?React.createElement(View,{style:iconStyle,testID:testID+\"-icon-container\"},React.createElement(Icon,{source:icon,size:customLabelSize!==null&&customLabelSize!==void 0?customLabelSize:iconSize,color:typeof customLabelColor==='string'?customLabelColor:textColor})):null,loading?React.createElement(ActivityIndicator,{size:customLabelSize!==null&&customLabelSize!==void 0?customLabelSize:iconSize,color:typeof customLabelColor==='string'?customLabelColor:textColor,style:iconStyle}):null,React.createElement(Text,{variant:\"labelLarge\",selectable:false,numberOfLines:1,style:[styles.label,!isV3&&styles.md2Label,isV3&&(isMode('text')?icon||loading?styles.md3LabelTextAddons:styles.md3LabelText:styles.md3Label),compact&&styles.compactLabel,uppercase&&styles.uppercaseLabel,textStyle,labelStyle]},children))));};var styles=StyleSheet.create({button:{minWidth:64,borderStyle:'solid'},compact:{minWidth:'auto'},content:{flexDirection:'row',alignItems:'center',justifyContent:'center'},icon:{marginLeft:12,marginRight:-4},iconReverse:{marginRight:12,marginLeft:-4},md3Icon:{marginLeft:16,marginRight:-16},md3IconCompact:{marginLeft:8,marginRight:0},md3IconReverse:{marginLeft:-16,marginRight:16},md3IconReverseCompact:{marginLeft:0,marginRight:8},md3IconTextMode:{marginLeft:12,marginRight:-8},md3IconTextModeCompact:{marginLeft:6,marginRight:0},md3IconReverseTextMode:{marginLeft:-8,marginRight:12},md3IconReverseTextModeCompact:{marginLeft:0,marginRight:6},label:{textAlign:'center',marginVertical:9,marginHorizontal:16},md2Label:{letterSpacing:1},compactLabel:{marginHorizontal:8},uppercaseLabel:{textTransform:'uppercase'},md3Label:{marginVertical:10,marginHorizontal:24},md3LabelText:{marginHorizontal:12},md3LabelTextAddons:{marginHorizontal:16}});export default withInternalTheme(Button);","map":{"version":3,"sources":["Button.tsx"],"names":["React","color","withInternalTheme","ActivityIndicator","Icon","Surface","TouchableRipple","Text","getButtonColors","Button","disabled","compact","mode","dark","loading","icon","buttonColor","customButtonColor","textColor","customTextColor","children","accessibilityLabel","accessibilityHint","onPress","onPressIn","onPressOut","onLongPress","delayLongPress","style","theme","uppercase","isV3","contentStyle","labelStyle","testID","accessible","rest","isMode","useCallback","modeToCompare","roundness","animation","isElevationEntitled","initialElevation","activeElevation","current","elevation","useRef","Animated","Value","useEffect","setValue","handlePressIn","e","scale","timing","toValue","duration","useNativeDriver","start","handlePressOut","borderRadius","iconSize","backgroundColor","borderColor","borderWidth","rippleColor","alpha","rgb","string","buttonStyle","touchableStyle","StyleSheet","flatten","customLabelColor","fontSize","customLabelSize","font","fonts","labelLarge","medium","textStyle","iconStyle","flexDirection","styles","iconReverse","button","content","label","md2Label","md3LabelTextAddons","md3LabelText","md3Label","compactLabel","uppercaseLabel","create","minWidth","borderStyle","alignItems","justifyContent","marginLeft","marginRight","md3Icon","md3IconCompact","md3IconReverse","md3IconReverseCompact","md3IconTextMode","md3IconTextModeCompact","md3IconReverseTextMode","md3IconReverseTextModeCompact","textAlign","marginVertical","marginHorizontal","letterSpacing","textTransform"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { ButtonMode, getButtonColors } from './utils';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Mode of the button. You can change the mode to adjust the styling to give it desired emphasis.\n   * - `text` - flat button without background or outline, used for the lowest priority actions, especially when presenting multiple options.\n   * - `outlined` - button with an outline without background, typically used for important, but not primary action – represents medium emphasis.\n   * - `contained` - button with a background color, used for important action, have the most visual impact and high emphasis.\n   * - `elevated` - button with a background color and elevation, used when absolutely necessary e.g. button requires visual separation from a patterned background. @supported Available in v5.x with theme version 3\n   * - `contained-tonal` - button with a secondary background color, an alternative middle ground between contained and outlined buttons. @supported Available in v5.x with theme version 3\n   */\n  mode?: 'text' | 'outlined' | 'contained' | 'elevated' | 'contained-tonal';\n  /**\n   * Whether the color is a dark color. A dark button will render light text and vice-versa. Only applicable for:\n   *  * `contained` mode for theme version 2\n   *  * `contained`, `contained-tonal` and `elevated` modes for theme version 3.\n   */\n  dark?: boolean;\n  /**\n   * Use a compact look, useful for `text` buttons in a row.\n   */\n  compact?: boolean;\n  /**\n   * @deprecated Deprecated in v5.x - use `buttonColor` or `textColor` instead.\n   * Custom text color for flat button, or background color for contained button.\n   */\n  color?: string;\n  /**\n   * Custom button's background color.\n   */\n  buttonColor?: string;\n  /**\n   * Custom button's text color.\n   */\n  textColor?: string;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Icon to display for the `Button`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Label text of the button.\n   */\n  children: React.ReactNode;\n  /**\n   * Make the label text uppercased. Note that this won't work if you pass React elements as children.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility hint for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityHint?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute as soon as the touchable element is pressed and invoked even before onPress.\n   */\n  onPressIn?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute as soon as the touch is released even before onPress.\n   */\n  onPressOut?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * Style of button's inner content.\n   * Use this prop to apply custom height and width and to set the icon on the right with `flexDirection: 'row-reverse'`.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the button text.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * A button is component that the user can press to trigger an action.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/button-1.png\" />\n *     <figcaption>Text button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-2.png\" />\n *     <figcaption>Outlined button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-3.png\" />\n *     <figcaption>Contained button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-4.png\" />\n *     <figcaption>Elevated button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-5.png\" />\n *     <figcaption>Contained-tonal button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Button icon=\"camera\" mode=\"contained\" onPress={() => console.log('Pressed')}>\n *     Press me\n *   </Button>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Button = ({\n  disabled,\n  compact,\n  mode = 'text',\n  dark,\n  loading,\n  icon,\n  buttonColor: customButtonColor,\n  textColor: customTextColor,\n  children,\n  accessibilityLabel,\n  accessibilityHint,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  delayLongPress,\n  style,\n  theme,\n  uppercase = !theme.isV3,\n  contentStyle,\n  labelStyle,\n  testID = 'button',\n  accessible,\n  ...rest\n}: Props) => {\n  const isMode = React.useCallback(\n    (modeToCompare: ButtonMode) => {\n      return mode === modeToCompare;\n    },\n    [mode]\n  );\n  const { roundness, isV3, animation } = theme;\n\n  const isElevationEntitled =\n    !disabled && (isV3 ? isMode('elevated') : isMode('contained'));\n  const initialElevation = isV3 ? 1 : 2;\n  const activeElevation = isV3 ? 2 : 8;\n\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(isElevationEntitled ? initialElevation : 0)\n  );\n\n  React.useEffect(() => {\n    elevation.setValue(isElevationEntitled ? initialElevation : 0);\n  }, [isElevationEntitled, elevation, initialElevation]);\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    onPressIn?.(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const { scale } = animation;\n      Animated.timing(elevation, {\n        toValue: activeElevation,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    onPressOut?.(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const { scale } = animation;\n      Animated.timing(elevation, {\n        toValue: initialElevation,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const borderRadius = (isV3 ? 5 : 1) * roundness;\n  const iconSize = isV3 ? 18 : 16;\n\n  const { backgroundColor, borderColor, textColor, borderWidth } =\n    getButtonColors({\n      customButtonColor,\n      customTextColor,\n      theme,\n      mode,\n      disabled,\n      dark,\n    });\n\n  const rippleColor = color(textColor).alpha(0.12).rgb().string();\n\n  const buttonStyle = {\n    backgroundColor,\n    borderColor,\n    borderWidth,\n    borderRadius,\n  };\n  const touchableStyle = {\n    borderRadius: style\n      ? ((StyleSheet.flatten(style) || {}) as ViewStyle).borderRadius ??\n        borderRadius\n      : borderRadius,\n  };\n\n  const { color: customLabelColor, fontSize: customLabelSize } =\n    StyleSheet.flatten(labelStyle) || {};\n\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  const textStyle = {\n    color: textColor,\n    ...font,\n  };\n\n  const iconStyle =\n    StyleSheet.flatten(contentStyle)?.flexDirection === 'row-reverse'\n      ? [\n          styles.iconReverse,\n          isV3 && styles[`md3IconReverse${compact ? 'Compact' : ''}`],\n          isV3 &&\n            isMode('text') &&\n            styles[`md3IconReverseTextMode${compact ? 'Compact' : ''}`],\n        ]\n      : [\n          styles.icon,\n          isV3 && styles[`md3Icon${compact ? 'Compact' : ''}`],\n          isV3 &&\n            isMode('text') &&\n            styles[`md3IconTextMode${compact ? 'Compact' : ''}`],\n        ];\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          styles.button,\n          compact && styles.compact,\n          buttonStyle,\n          style,\n          !isV3 && { elevation },\n        ] as ViewStyle\n      }\n      {...(isV3 && { elevation: elevation })}\n    >\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        onLongPress={onLongPress}\n        onPressIn={handlePressIn}\n        onPressOut={handlePressOut}\n        delayLongPress={delayLongPress}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityHint={accessibilityHint}\n        accessibilityRole=\"button\"\n        accessibilityState={{ disabled }}\n        accessible={accessible}\n        disabled={disabled}\n        rippleColor={rippleColor}\n        style={touchableStyle}\n        testID={testID}\n      >\n        <View style={[styles.content, contentStyle]}>\n          {icon && loading !== true ? (\n            <View style={iconStyle} testID={`${testID}-icon-container`}>\n              <Icon\n                source={icon}\n                size={customLabelSize ?? iconSize}\n                color={\n                  typeof customLabelColor === 'string'\n                    ? customLabelColor\n                    : textColor\n                }\n              />\n            </View>\n          ) : null}\n          {loading ? (\n            <ActivityIndicator\n              size={customLabelSize ?? iconSize}\n              color={\n                typeof customLabelColor === 'string'\n                  ? customLabelColor\n                  : textColor\n              }\n              style={iconStyle}\n            />\n          ) : null}\n          <Text\n            variant=\"labelLarge\"\n            selectable={false}\n            numberOfLines={1}\n            style={[\n              styles.label,\n              !isV3 && styles.md2Label,\n              isV3 &&\n                (isMode('text')\n                  ? icon || loading\n                    ? styles.md3LabelTextAddons\n                    : styles.md3LabelText\n                  : styles.md3Label),\n              compact && styles.compactLabel,\n              uppercase && styles.uppercaseLabel,\n              textStyle,\n              labelStyle,\n            ]}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid',\n  },\n  compact: {\n    minWidth: 'auto',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4,\n  },\n  iconReverse: {\n    marginRight: 12,\n    marginLeft: -4,\n  },\n  /* eslint-disable react-native/no-unused-styles */\n  md3Icon: {\n    marginLeft: 16,\n    marginRight: -16,\n  },\n  md3IconCompact: {\n    marginLeft: 8,\n    marginRight: 0,\n  },\n  md3IconReverse: {\n    marginLeft: -16,\n    marginRight: 16,\n  },\n  md3IconReverseCompact: {\n    marginLeft: 0,\n    marginRight: 8,\n  },\n  md3IconTextMode: {\n    marginLeft: 12,\n    marginRight: -8,\n  },\n  md3IconTextModeCompact: {\n    marginLeft: 6,\n    marginRight: 0,\n  },\n  md3IconReverseTextMode: {\n    marginLeft: -8,\n    marginRight: 12,\n  },\n  md3IconReverseTextModeCompact: {\n    marginLeft: 0,\n    marginRight: 6,\n  },\n  /* eslint-enable react-native/no-unused-styles */\n  label: {\n    textAlign: 'center',\n    marginVertical: 9,\n    marginHorizontal: 16,\n  },\n  md2Label: {\n    letterSpacing: 1,\n  },\n  compactLabel: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  md3Label: {\n    marginVertical: 10,\n    marginHorizontal: 24,\n  },\n  md3LabelText: {\n    marginHorizontal: 12,\n  },\n  md3LabelTextAddons: {\n    marginHorizontal: 16,\n  },\n});\n\nexport default withInternalTheme(Button);\n"]},"metadata":{},"sourceType":"module"}
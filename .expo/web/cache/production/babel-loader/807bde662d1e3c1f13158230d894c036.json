{"ast":null,"code":"import{EventEmitter}from\"../EventEmitter\";import Platform from\"../Platform\";import{CodedError}from\"../errors/CodedError\";import NativeErrorManager from\"./NativeErrorManager\";if(__DEV__&&Platform.OS==='android'&&NativeErrorManager){var onNewException='ExpoModulesCoreErrorManager.onNewException';var eventEmitter=new EventEmitter(NativeErrorManager);eventEmitter.addListener(onNewException,function(_ref){var message=_ref.message;console.error(message);});}global.ExpoModulesCore_CodedError=CodedError;","map":{"version":3,"sources":["../../src/sweet/setUpErrorManager.fx.ts"],"names":[],"mappings":"AAAA,OAAS,YAAY,uBACrB,MAAO,SAAQ,mBACf,OAAS,UAAU,4BACnB,MAAO,mBAAkB,4BAEzB,GAAI,OAAO,EAAI,QAAQ,CAAC,EAAE,GAAK,SAAS,EAAI,kBAAkB,CAAE,CAC9D,GAAM,eAAc,CAAG,4CAA4C,CACnE,GAAM,aAAY,CAAG,GAAI,aAAY,CAAC,kBAAkB,CAAC,CAEzD,YAAY,CAAC,WAAW,CAAC,cAAc,CAAE,cAAqC,IAAlC,QAAO,MAAP,OAAO,CACjD,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CACxB,CAAC,CAAC,CACH,CAGD,MAAM,CAAC,0BAA0B,CAAG,UAAU","sourcesContent":["import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport { CodedError } from '../errors/CodedError';\nimport NativeErrorManager from './NativeErrorManager';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n\n  eventEmitter.addListener(onNewException, ({ message }: { message: string }) => {\n    console.error(message);\n  });\n}\n\n// We have to export `CodedError` via global object to use in later in the C++ code.\nglobal.ExpoModulesCore_CodedError = CodedError;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"background\",\"borderless\",\"disabled\",\"rippleColor\",\"underlayColor\",\"children\",\"theme\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import Pressable from\"react-native-web/dist/exports/Pressable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{withInternalTheme}from\"../../core/theming\";import{getTouchableRippleColors}from\"./utils\";var TouchableRipple=function TouchableRipple(_ref){var style=_ref.style,_background=_ref.background,_ref$borderless=_ref.borderless,borderless=_ref$borderless===void 0?false:_ref$borderless,disabledProp=_ref.disabled,rippleColor=_ref.rippleColor,_underlayColor=_ref.underlayColor,children=_ref.children,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var handlePressIn=function handlePressIn(e){var _touches$;var centered=rest.centered,onPressIn=rest.onPressIn;onPressIn===null||onPressIn===void 0?void 0:onPressIn(e);var _getTouchableRippleCo=getTouchableRippleColors({theme:theme,rippleColor:rippleColor}),calculatedRippleColor=_getTouchableRippleCo.calculatedRippleColor;var button=e.currentTarget;var style=window.getComputedStyle(button);var dimensions=button.getBoundingClientRect();var touchX;var touchY;var _e$nativeEvent=e.nativeEvent,changedTouches=_e$nativeEvent.changedTouches,touches=_e$nativeEvent.touches;var touch=(_touches$=touches===null||touches===void 0?void 0:touches[0])!==null&&_touches$!==void 0?_touches$:changedTouches===null||changedTouches===void 0?void 0:changedTouches[0];if(centered||!touch){touchX=dimensions.width/2;touchY=dimensions.height/2;}else{var _touch$locationX,_touch$locationY;touchX=(_touch$locationX=touch.locationX)!==null&&_touch$locationX!==void 0?_touch$locationX:e.pageX;touchY=(_touch$locationY=touch.locationY)!==null&&_touch$locationY!==void 0?_touch$locationY:e.pageY;}var size=centered?Math.min(dimensions.width,dimensions.height)*1.25:Math.max(dimensions.width,dimensions.height)*2;var container=document.createElement('span');container.setAttribute('data-paper-ripple','');Object.assign(container.style,{position:'absolute',pointerEvents:'none',top:'0',left:'0',right:'0',bottom:'0',borderTopLeftRadius:style.borderTopLeftRadius,borderTopRightRadius:style.borderTopRightRadius,borderBottomRightRadius:style.borderBottomRightRadius,borderBottomLeftRadius:style.borderBottomLeftRadius,overflow:centered?'visible':'hidden'});var ripple=document.createElement('span');Object.assign(ripple.style,{position:'absolute',pointerEvents:'none',backgroundColor:calculatedRippleColor,borderRadius:'50%',transitionProperty:'transform opacity',transitionDuration:Math.min(size*1.5,350)+\"ms\",transitionTimingFunction:'linear',transformOrigin:'center',transform:'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',opacity:'0.5',left:touchX+\"px\",top:touchY+\"px\",width:size+\"px\",height:size+\"px\"});container.appendChild(ripple);button.appendChild(container);requestAnimationFrame(function(){requestAnimationFrame(function(){Object.assign(ripple.style,{transform:'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',opacity:'1'});});});};var handlePressOut=function handlePressOut(e){var _rest$onPressOut;(_rest$onPressOut=rest.onPressOut)===null||_rest$onPressOut===void 0?void 0:_rest$onPressOut.call(rest,e);var containers=e.currentTarget.querySelectorAll('[data-paper-ripple]');requestAnimationFrame(function(){requestAnimationFrame(function(){containers.forEach(function(container){var ripple=container.firstChild;Object.assign(ripple.style,{transitionDuration:'250ms',opacity:0});setTimeout(function(){var parentNode=container.parentNode;if(parentNode){parentNode.removeChild(container);}},500);});});});};var disabled=disabledProp||!rest.onPress;return React.createElement(Pressable,_extends({},rest,{onPressIn:handlePressIn,onPressOut:handlePressOut,disabled:disabled,style:[styles.touchable,borderless&&styles.borderless,style]}),React.Children.only(children));};TouchableRipple.supported=true;var styles=StyleSheet.create({touchable:_objectSpread({position:'relative'},Platform.OS==='web'&&{cursor:'pointer'}),borderless:{overflow:'hidden'}});export default withInternalTheme(TouchableRipple);","map":{"version":3,"mappings":"szCAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,8LAU9B,OAASC,iBAAiB,0BAE1B,OAASC,wBAAwB,eA8EjC,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAGC,KAUX,IATXC,MAAK,CASCD,KATNC,KAAK,CACOC,WAAW,CAQjBF,KARNG,UAAU,iBAQJH,KAPNI,UAAU,CAAVA,UAAU,0BAAG,KAAK,iBACRC,YAAY,CAMhBL,KANNM,QAAQ,CACRC,WAAW,CAKLP,KALNO,WAAW,CACIC,cAAc,CAIvBR,KAJNS,aAAa,CACbC,QAAQ,CAGFV,KAHNU,QAAQ,CACRC,KAAK,CAECX,KAFNW,KAAK,CACFC,8BACGZ,gBACN,GAAMa,cAAa,CAAIC,QAAjBD,cAAa,CAAIC,CAAM,CAAK,eAChC,GAAQC,SAAQ,CAAgBH,IAAI,CAA5BG,QAAQ,CAAEC,UAAcJ,IAAI,CAAlBI,UAElBA,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAGF,CAAC,CAAC,CAEd,0BAAkChB,wBAAwB,CAAC,CACzDa,KAAK,CAALA,KAAK,CACLJ,uBACF,CAAC,CAAC,CAHMU,kEAKR,GAAMC,OAAM,CAAGJ,CAAC,CAACK,aAAa,CAC9B,GAAMlB,MAAK,CAAGmB,MAAM,CAACC,gBAAgB,CAACH,MAAM,CAAC,CAC7C,GAAMI,WAAU,CAAGJ,MAAM,CAACK,qBAAqB,EAAE,CAEjD,GAAIC,OAAM,CACV,GAAIC,OAAM,CAEV,mBAAoCX,CAAC,CAACY,WAAW,CAAzCC,cAAc,gBAAdA,cAAc,CAAEC,+BACxB,GAAMC,MAAK,YAAGD,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAG,CAAC,CAAC,uCAAID,cAAc,SAAdA,cAAc,iBAAdA,cAAc,CAAG,CAAC,CAAC,CAGjD,GAAIZ,QAAQ,EAAI,CAACc,KAAK,CAAE,CACtBL,MAAM,CAAGF,UAAU,CAACQ,KAAK,CAAG,CAAC,CAC7BL,MAAM,CAAGH,UAAU,CAACS,MAAM,CAAG,CAAC,CAChC,CAAC,IAAM,uCACLP,MAAM,mBAAGK,KAAK,CAACG,SAAS,qDAAIlB,CAAC,CAACmB,KAAK,CACnCR,MAAM,mBAAGI,KAAK,CAACK,SAAS,qDAAIpB,CAAC,CAACqB,KAAK,CACrC,CAGA,GAAMC,KAAI,CAAGrB,QAAQ,CAEjBsB,IAAI,CAACC,GAAG,CAAChB,UAAU,CAACQ,KAAK,CAAER,UAAU,CAACS,MAAM,CAAC,CAAG,IAAI,CAEpDM,IAAI,CAACE,GAAG,CAACjB,UAAU,CAACQ,KAAK,CAAER,UAAU,CAACS,MAAM,CAAC,CAAG,CAAC,CAGrD,GAAMS,UAAS,CAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAEhDF,SAAS,CAACG,YAAY,CAAC,mBAAmB,CAAE,EAAE,CAAC,CAE/CC,MAAM,CAACC,MAAM,CAACL,SAAS,CAACvC,KAAK,CAAE,CAC7B6C,QAAQ,CAAE,UAAU,CACpBC,aAAa,CAAE,MAAM,CACrBC,GAAG,CAAE,GAAG,CACRC,IAAI,CAAE,GAAG,CACTC,KAAK,CAAE,GAAG,CACVC,MAAM,CAAE,GAAG,CACXC,mBAAmB,CAAEnD,KAAK,CAACmD,mBAAmB,CAC9CC,oBAAoB,CAAEpD,KAAK,CAACoD,oBAAoB,CAChDC,uBAAuB,CAAErD,KAAK,CAACqD,uBAAuB,CACtDC,sBAAsB,CAAEtD,KAAK,CAACsD,sBAAsB,CACpDC,QAAQ,CAAEzC,QAAQ,CAAG,SAAS,CAAG,QACnC,CAAC,CAAC,CAGF,GAAM0C,OAAM,CAAGhB,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAE7CE,MAAM,CAACC,MAAM,CAACY,MAAM,CAACxD,KAAK,CAAE,CAC1B6C,QAAQ,CAAE,UAAU,CACpBC,aAAa,CAAE,MAAM,CACrBW,eAAe,CAAEzC,qBAAqB,CACtC0C,YAAY,CAAE,KAAK,CAGnBC,kBAAkB,CAAE,mBAAmB,CACvCC,kBAAkB,CAAKxB,IAAI,CAACC,GAAG,CAACF,IAAI,CAAG,GAAG,CAAE,GAAG,CAAE,KAAG,CACpD0B,wBAAwB,CAAE,QAAQ,CAClCC,eAAe,CAAE,QAAQ,CAGzBC,SAAS,CAAE,mDAAmD,CAC9DC,OAAO,CAAE,KAAK,CAGdhB,IAAI,CAAKzB,MAAO,KAAG,CACnBwB,GAAG,CAAKvB,MAAO,KAAG,CAClBK,KAAK,CAAKM,IAAK,KAAG,CAClBL,MAAM,CAAKK,IAAK,KAClB,CAAC,CAAC,CAGFI,SAAS,CAAC0B,WAAW,CAACT,MAAM,CAAC,CAC7BvC,MAAM,CAACgD,WAAW,CAAC1B,SAAS,CAAC,CAK7B2B,qBAAqB,CAAC,UAAM,CAC1BA,qBAAqB,CAAC,UAAM,CAC1BvB,MAAM,CAACC,MAAM,CAACY,MAAM,CAACxD,KAAK,CAAE,CAC1B+D,SAAS,CAAE,6CAA6C,CACxDC,OAAO,CAAE,GACX,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAED,GAAMG,eAAc,CAAItD,QAAlBsD,eAAc,CAAItD,CAAM,CAAK,sBACjC,sBAAI,CAACuD,UAAU,2CAAfC,0BAAI,CAAcxD,CAAC,CAAC,CAEpB,GAAMyD,WAAU,CAAGzD,CAAC,CAACK,aAAa,CAACqD,gBAAgB,CACjD,qBAAqB,CACL,CAElBL,qBAAqB,CAAC,UAAM,CAC1BA,qBAAqB,CAAC,UAAM,CAC1BI,UAAU,CAACE,OAAO,CAAEjC,kBAAS,CAAK,CAChC,GAAMiB,OAAM,CAAGjB,SAAS,CAACkC,UAA6B,CAEtD9B,MAAM,CAACC,MAAM,CAACY,MAAM,CAACxD,KAAK,CAAE,CAC1B4D,kBAAkB,CAAE,OAAO,CAC3BI,OAAO,CAAE,CACX,CAAC,CAAC,CAGFU,UAAU,CAAC,UAAM,CACf,GAAQC,YAAepC,SAAS,CAAxBoC,WAER,GAAIA,UAAU,CAAE,CACdA,UAAU,CAACC,WAAW,CAACrC,SAAS,CAAC,CACnC,CACF,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAED,GAAMlC,SAAQ,CAAGD,YAAY,EAAI,CAACO,IAAI,CAACkE,OAAO,CAE9C,MACElF,qBAACmF,SAAS,aACJnE,IAAI,EACRI,SAAS,CAAEH,aAAc,CACzBwD,UAAU,CAAED,cAAe,CAC3B9D,QAAQ,CAAEA,QAAS,CACnBL,KAAK,CAAE,CAAC+E,MAAM,CAACC,SAAS,CAAE7E,UAAU,EAAI4E,MAAM,CAAC5E,UAAU,CAAEH,KAAK,CAAE,GAEjEL,KAAK,CAACsF,QAAQ,CAACC,IAAI,CAACzE,QAAQ,CAAC,CACpB,CAEhB,CAAC,CAKDX,eAAe,CAACqF,SAAS,CAAG,IAAI,CAEhC,GAAMJ,OAAM,CAAGK,UAAU,CAACC,MAAM,CAAC,CAC/BL,SAAS,gBACPnC,QAAQ,CAAE,UAAU,EAChByC,QAAQ,CAACC,EAAE,GAAK,KAAK,EAAI,CAAEC,MAAM,CAAE,SAAU,CAAC,CACnD,CACDrF,UAAU,CAAE,CACVoD,QAAQ,CAAE,QACZ,CACF,CAAC,CAAC,CAEF,cAAe3D,kBAAiB,CAACE,eAAe,CAAC","names":["React","withInternalTheme","getTouchableRippleColors","TouchableRipple","_ref","style","_background","background","borderless","disabledProp","disabled","rippleColor","_underlayColor","underlayColor","children","theme","rest","handlePressIn","e","centered","onPressIn","calculatedRippleColor","button","currentTarget","window","getComputedStyle","dimensions","getBoundingClientRect","touchX","touchY","nativeEvent","changedTouches","touches","touch","width","height","locationX","pageX","locationY","pageY","size","Math","min","max","container","document","createElement","setAttribute","Object","assign","position","pointerEvents","top","left","right","bottom","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","overflow","ripple","backgroundColor","borderRadius","transitionProperty","transitionDuration","transitionTimingFunction","transformOrigin","transform","opacity","appendChild","requestAnimationFrame","handlePressOut","onPressOut","_rest$onPressOut","containers","querySelectorAll","forEach","firstChild","setTimeout","parentNode","removeChild","onPress","Pressable","styles","touchable","Children","only","supported","StyleSheet","create","Platform","OS","cursor"],"sources":["TouchableRipple.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport { getTouchableRippleColors } from './utils';\n\nexport type Props = React.ComponentPropsWithRef<typeof Pressable> & {\n  /**\n   * Whether to render the ripple outside the view bounds.\n   */\n  borderless?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: Object;\n  /**\n   * Whether to start the ripple at the center (Web).\n   */\n  centered?: boolean;\n  /**\n   * Whether to prevent interaction with the touchable.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press. If not set, will cause the touchable to be disabled.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Color of the ripple effect (Android >= 5.0 and Web).\n   */\n  rippleColor?: string;\n  /**\n   * Color of the underlay for the highlight effect (Android < 5.0 and iOS).\n   */\n  underlayColor?: string;\n  /**\n   * Content of the `TouchableRipple`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * A wrapper for views that should respond to touches.\n * Provides a material \"ink ripple\" interaction effect for supported platforms (>= Android Lollipop).\n * On unsupported platforms, it falls back to a highlight effect.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/touchable-ripple.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Text, TouchableRipple } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <TouchableRipple\n *     onPress={() => console.log('Pressed')}\n *     rippleColor=\"rgba(0, 0, 0, .32)\"\n *   >\n *     <Text>Press anywhere</Text>\n *   </TouchableRipple>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Pressable props https://reactnative.dev/docs/Pressable#props\n */\nconst TouchableRipple = ({\n  style,\n  background: _background,\n  borderless = false,\n  disabled: disabledProp,\n  rippleColor,\n  underlayColor: _underlayColor,\n  children,\n  theme,\n  ...rest\n}: Props) => {\n  const handlePressIn = (e: any) => {\n    const { centered, onPressIn } = rest;\n\n    onPressIn?.(e);\n\n    const { calculatedRippleColor } = getTouchableRippleColors({\n      theme,\n      rippleColor,\n    });\n\n    const button = e.currentTarget;\n    const style = window.getComputedStyle(button);\n    const dimensions = button.getBoundingClientRect();\n\n    let touchX;\n    let touchY;\n\n    const { changedTouches, touches } = e.nativeEvent;\n    const touch = touches?.[0] ?? changedTouches?.[0];\n\n    // If centered or it was pressed using keyboard - enter or space\n    if (centered || !touch) {\n      touchX = dimensions.width / 2;\n      touchY = dimensions.height / 2;\n    } else {\n      touchX = touch.locationX ?? e.pageX;\n      touchY = touch.locationY ?? e.pageY;\n    }\n\n    // Get the size of the button to determine how big the ripple should be\n    const size = centered\n      ? // If ripple is always centered, we don't need to make it too big\n        Math.min(dimensions.width, dimensions.height) * 1.25\n      : // Otherwise make it twice as big so clicking on one end spreads ripple to other\n        Math.max(dimensions.width, dimensions.height) * 2;\n\n    // Create a container for our ripple effect so we don't need to change the parent's style\n    const container = document.createElement('span');\n\n    container.setAttribute('data-paper-ripple', '');\n\n    Object.assign(container.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      borderTopLeftRadius: style.borderTopLeftRadius,\n      borderTopRightRadius: style.borderTopRightRadius,\n      borderBottomRightRadius: style.borderBottomRightRadius,\n      borderBottomLeftRadius: style.borderBottomLeftRadius,\n      overflow: centered ? 'visible' : 'hidden',\n    });\n\n    // Create span to show the ripple effect\n    const ripple = document.createElement('span');\n\n    Object.assign(ripple.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      backgroundColor: calculatedRippleColor,\n      borderRadius: '50%',\n\n      /* Transition configuration */\n      transitionProperty: 'transform opacity',\n      transitionDuration: `${Math.min(size * 1.5, 350)}ms`,\n      transitionTimingFunction: 'linear',\n      transformOrigin: 'center',\n\n      /* We'll animate these properties */\n      transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n      opacity: '0.5',\n\n      // Position the ripple where cursor was\n      left: `${touchX}px`,\n      top: `${touchY}px`,\n      width: `${size}px`,\n      height: `${size}px`,\n    });\n\n    // Finally, append it to DOM\n    container.appendChild(ripple);\n    button.appendChild(container);\n\n    // rAF runs in the same frame as the event handler\n    // Use double rAF to ensure the transition class is added in next frame\n    // This will make sure that the transition animation is triggered\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        Object.assign(ripple.style, {\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n          opacity: '1',\n        });\n      });\n    });\n  };\n\n  const handlePressOut = (e: any) => {\n    rest.onPressOut?.(e);\n\n    const containers = e.currentTarget.querySelectorAll(\n      '[data-paper-ripple]'\n    ) as HTMLElement[];\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        containers.forEach((container) => {\n          const ripple = container.firstChild as HTMLSpanElement;\n\n          Object.assign(ripple.style, {\n            transitionDuration: '250ms',\n            opacity: 0,\n          });\n\n          // Finally remove the span after the transition\n          setTimeout(() => {\n            const { parentNode } = container;\n\n            if (parentNode) {\n              parentNode.removeChild(container);\n            }\n          }, 500);\n        });\n      });\n    });\n  };\n\n  const disabled = disabledProp || !rest.onPress;\n\n  return (\n    <Pressable\n      {...rest}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      disabled={disabled}\n      style={[styles.touchable, borderless && styles.borderless, style]}\n    >\n      {React.Children.only(children)}\n    </Pressable>\n  );\n};\n\n/**\n * Whether ripple effect is supported.\n */\nTouchableRipple.supported = true;\n\nconst styles = StyleSheet.create({\n  touchable: {\n    position: 'relative',\n    ...(Platform.OS === 'web' && { cursor: 'pointer' }),\n  },\n  borderless: {\n    overflow: 'hidden',\n  },\n});\n\nexport default withInternalTheme(TouchableRipple);\n"]},"metadata":{},"sourceType":"module"}
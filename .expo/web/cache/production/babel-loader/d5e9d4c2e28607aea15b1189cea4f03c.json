{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"id\",\"initialRouteName\",\"children\",\"screenListeners\",\"screenOptions\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{createNavigatorFactory,StackActions,StackRouter,useNavigationBuilder}from'@react-navigation/native';import*as React from'react';import warnOnce from'warn-once';import StackView from\"../views/Stack/StackView\";function StackNavigator(_ref){var id=_ref.id,initialRouteName=_ref.initialRouteName,children=_ref.children,screenListeners=_ref.screenListeners,screenOptions=_ref.screenOptions,rest=_objectWithoutProperties(_ref,_excluded);var mode=rest.mode;warnOnce(mode!=null,\"Stack Navigator: 'mode=\\\"\"+mode+\"\\\"' is deprecated. Use 'presentation: \\\"\"+mode+\"\\\"' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator#presentation for more details.\");var headerMode=rest.headerMode;warnOnce(headerMode==='none',\"Stack Navigator: 'headerMode=\\\"none\\\"' is deprecated. Use 'headerShown: false' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headershown for more details.\");warnOnce(headerMode!=null&&headerMode!=='none',\"Stack Navigator: 'headerMode' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headermode for more details.\");var keyboardHandlingEnabled=rest.keyboardHandlingEnabled;warnOnce(keyboardHandlingEnabled!==undefined,\"Stack Navigator: 'keyboardHandlingEnabled' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#keyboardhandlingenabled for more details.\");var defaultScreenOptions={presentation:mode,headerShown:headerMode?headerMode!=='none':true,headerMode:headerMode&&headerMode!=='none'?headerMode:undefined,keyboardHandlingEnabled:keyboardHandlingEnabled};var _useNavigationBuilder=useNavigationBuilder(StackRouter,{id:id,initialRouteName:initialRouteName,children:children,screenListeners:screenListeners,screenOptions:screenOptions,defaultScreenOptions:defaultScreenOptions}),state=_useNavigationBuilder.state,descriptors=_useNavigationBuilder.descriptors,navigation=_useNavigationBuilder.navigation,NavigationContent=_useNavigationBuilder.NavigationContent;React.useEffect(function(){var _navigation$addListen;return(_navigation$addListen=navigation.addListener)===null||_navigation$addListen===void 0?void 0:_navigation$addListen.call(navigation,'tabPress',function(e){var isFocused=navigation.isFocused();requestAnimationFrame(function(){if(state.index>0&&isFocused&&!e.defaultPrevented){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.popToTop()),{},{target:state.key}));}});});},[navigation,state.index,state.key]);return React.createElement(NavigationContent,null,React.createElement(StackView,_extends({},rest,{state:state,descriptors:descriptors,navigation:navigation})));}export default createNavigatorFactory(StackNavigator);","map":{"version":3,"mappings":"6xCAAA,OACEA,sBAAsB,CAKtBC,YAAY,CAEZC,WAAW,CAEXC,oBAAoB,KACf,0BAA0B,CACjC,MAAO,GAAKC,MAAK,KAAM,OAAO,CAC9B,MAAOC,SAAQ,KAAM,WAAW,CAQhC,MAAOC,UAAS,gCAWhB,QAASC,eAAc,MAOb,IANRC,GAAE,CAMIC,KANND,EAAE,CACFE,gBAAgB,CAKVD,KALNC,gBAAgB,CAChBC,QAAQ,CAIFF,KAJNE,QAAQ,CACRC,eAAe,CAGTH,KAHNG,eAAe,CACfC,aAAa,CAEPJ,KAFNI,aAAa,CACVC,8BACGL,gBAEN,GAAMM,KAAI,CAAGD,IAAI,CAACC,IAAoC,CAEtDV,QAAQ,CACNU,IAAI,EAAI,IAAI,6BACeA,IAAK,4CAAwCA,IAAK,0HAC9E,CAGD,GAAMC,WAAU,CAAGF,IAAI,CAACE,UAAkD,CAE1EX,QAAQ,CACNW,UAAU,GAAK,MAAM,qMAEtB,CAEDX,QAAQ,CACNW,UAAU,EAAI,IAAI,EAAIA,UAAU,GAAK,MAAM,oMAE5C,CAGD,GAAMC,wBAAuB,CAAGH,IAAI,CAACG,uBAAuB,CAE5DZ,QAAQ,CACNY,uBAAuB,GAAKC,SAAS,8NAEtC,CAED,GAAMC,qBAA4C,CAAG,CACnDC,YAAY,CAAEL,IAAI,CAClBM,WAAW,CAAEL,UAAU,CAAGA,UAAU,GAAK,MAAM,CAAG,IAAI,CACtDA,UAAU,CAAEA,UAAU,EAAIA,UAAU,GAAK,MAAM,CAAGA,UAAU,CAAGE,SAAS,CACxED,+CACF,CAAC,CAED,0BACEd,oBAAoB,CAMlBD,WAAW,CAAE,CACbM,EAAE,CAAFA,EAAE,CACFE,gBAAgB,CAAhBA,gBAAgB,CAChBC,QAAQ,CAARA,QAAQ,CACRC,eAAe,CAAfA,eAAe,CACfC,aAAa,CAAbA,aAAa,CACbM,yCACF,CAAC,CAAC,CAdIG,KAAK,uBAALA,KAAK,CAAEC,WAAW,uBAAXA,WAAW,CAAEC,UAAU,uBAAVA,UAAU,CAAEC,0DAgBxCrB,KAAK,CAACsB,SAAS,CACb,2CACE,uBACAF,UAAU,CAACG,WAAW,gDAAtBC,qCAAU,CAAe,UAAU,CAAGC,UAAC,CAAK,CAC1C,GAAMC,UAAS,CAAGN,UAAU,CAACM,SAAS,EAAE,CAIxCC,qBAAqB,CAAC,UAAM,CAC1B,GACET,KAAK,CAACU,KAAK,CAAG,CAAC,EACfF,SAAS,EACT,CAAED,CAAC,CAA2CI,gBAAgB,CAC9D,CAGAT,UAAU,CAACU,QAAQ,gCACdjC,YAAY,CAACkC,QAAQ,EAAE,MAC1BC,MAAM,CAAEd,KAAK,CAACe,MACd,CACJ,CACF,CAAC,CAAC,CACJ,CAAC,EAAC,EACJ,CAACb,UAAU,CAAEF,KAAK,CAACU,KAAK,CAAEV,KAAK,CAACe,GAAG,CAAC,CACrC,CAED,MACEjC,qBAACqB,iBAAiB,MAChBrB,oBAACE,SAAS,aACJQ,IAAI,EACRQ,KAAK,CAAEA,KAAM,CACbC,WAAW,CAAEA,WAAY,CACzBC,UAAU,CAAEA,UAAW,GACvB,CACgB,CAExB,CAEA,cAAexB,uBAAsB,CAKnCO,cAAc,CAAC","names":["createNavigatorFactory","StackActions","StackRouter","useNavigationBuilder","React","warnOnce","StackView","StackNavigator","id","_ref","initialRouteName","children","screenListeners","screenOptions","rest","mode","headerMode","keyboardHandlingEnabled","undefined","defaultScreenOptions","presentation","headerShown","state","descriptors","navigation","NavigationContent","useEffect","addListener","_navigation$addListen","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","popToTop","target","key"],"sourceRoot":"../../src","sources":["createStackNavigator.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
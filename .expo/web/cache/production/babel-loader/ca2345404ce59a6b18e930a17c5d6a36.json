{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"name\",\"color\",\"size\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import Platform from\"react-native-web/dist/exports/Platform\";import{black}from\"../styles/themes/v2/colors\";var MaterialCommunityIcons;try{MaterialCommunityIcons=require(\"@expo/vector-icons/MaterialCommunityIcons\").default;}catch(e){var isErrorLogged=false;MaterialCommunityIcons=function MaterialCommunityIcons(_ref){var name=_ref.name,color=_ref.color,size=_ref.size,rest=_objectWithoutProperties(_ref,_excluded);if(!isErrorLogged){if(!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)){console.error(e);}console.warn(\"Tried to use the icon '\"+name+\"' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.\",\"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.\");isErrorLogged=true;}return React.createElement(Text,_extends({},rest,{style:[styles.icon,{color:color,fontSize:size}],pointerEvents:\"none\",selectable:false}),\"\\u25A1\");};}export var accessibilityProps=Platform.OS==='web'?{role:'img',focusable:false}:{accessibilityElementsHidden:true,importantForAccessibility:'no-hide-descendants'};var defaultIcon=function defaultIcon(_ref2){var name=_ref2.name,_ref2$color=_ref2.color,color=_ref2$color===void 0?black:_ref2$color,size=_ref2.size,direction=_ref2.direction,allowFontScaling=_ref2.allowFontScaling;return React.createElement(MaterialCommunityIcons,_extends({allowFontScaling:allowFontScaling,name:name,color:color,size:size,style:[{transform:[{scaleX:direction==='rtl'?-1:1}],lineHeight:size},styles.icon],pointerEvents:\"none\",selectable:false},accessibilityProps));};var styles=StyleSheet.create({icon:{backgroundColor:'transparent'}});export default defaultIcon;","map":{"version":3,"sources":["MaterialCommunityIcon.tsx"],"names":["React","black","MaterialCommunityIcons","require","default","e","isErrorLogged","name","color","size","rest","test","message","console","error","warn","styles","icon","fontSize","accessibilityProps","Platform","OS","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","direction","allowFontScaling","transform","scaleX","lineHeight","StyleSheet","create","backgroundColor"],"mappings":"saAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,mLAG9B,OAASC,KAAK,kCAUd,GAAIC,uBAOH,CAED,GAAI,CAEFA,sBAAsB,CACpBC,OAAO,6CAAoD,CAACC,OAAO,CACvE,CAAE,MAAOC,CAAC,CAAE,CACV,GAAIC,cAAa,CAAG,KAAK,CAGzBJ,sBAAsB,CAAG,gCAAA,IAAA,CAAoC,CAAnC,GAAEK,KAAI,CAAwB,IAAA,CAA5BA,IAAI,CAAEC,KAAK,CAAiB,IAAA,CAAtBA,KAAK,CAAEC,IAAI,CAAW,IAAA,CAAfA,IAAI,CAAKC,IAAAA,0BAAM,IAAA,YAEtD,GAAI,CAACJ,aAAa,CAAE,CAClB,GACE,CAAC,6DAA6D,CAACK,IAAI,CAChEN,CAAC,CAASO,OAAO,CACnB,CACD,CACAC,OAAO,CAACC,KAAK,CAACT,CAAC,CAAC,CAClB,CAEAQ,OAAO,CAACE,IAAI,2BACgBR,IAAK,kSAEhC,CAEDD,aAAa,CAAG,IAAI,CACtB,CAEA,MACE,MAAA,CAAA,aAAA,CAAC,IAAI,CAAA,QAAA,CAAA,CAAA,CAAA,CACCI,IAAI,CAAA,CACR,KAAK,CAAE,CAACM,MAAM,CAACC,IAAI,CAAE,CAAET,KAAK,CAALA,KAAK,CAAEU,QAAQ,CAAET,IAAK,CAAC,CAAA,CAE9C,aAAa,CAAC,MAAM,CACpB,UAAU,CAAE,KAAM,CAAA,CAAA,CAAA,QAAA,CAGb,CAEX,CAAC,CACH,CAEA,MAAO,IAAMU,mBAAkB,CAC7BC,QAAQ,CAACC,EAAE,GAAK,KAAK,CACjB,CACEC,IAAI,CAAE,KAAK,CACXC,SAAS,CAAE,KACb,CAAC,CACD,CACEC,2BAA2B,CAAE,IAAI,CACjCC,yBAAyB,CACvB,qBACJ,CAAC,CAEP,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAG,KAAA,CAAA,CAAA,GAClBnB,KAAI,CAKM,KAAA,CALVA,IAAI,aAKM,KAAA,CAJVC,KAAK,CAALA,KAAK,sBAAGP,KAAK,aACbQ,IAAI,CAGM,KAAA,CAHVA,IAAI,CACJkB,SAAS,CAEC,KAAA,CAFVA,SAAS,CACTC,gBAAAA,CACU,KAAA,CADVA,gBAAAA,CACU,MACV,MAAA,CAAA,aAAA,CAAC,sBAAsB,CAAA,QAAA,CAAA,CACrB,gBAAgB,CAAEA,gBAAiB,CACnC,IAAI,CAAErB,IAAK,CACX,KAAK,CAAEC,KAAM,CACb,IAAI,CAAEC,IAAK,CACX,KAAK,CAAE,CACL,CACEoB,SAAS,CAAE,CAAC,CAAEC,MAAM,CAAEH,SAAS,GAAK,KAAK,CAAG,CAAC,CAAC,CAAG,CAAE,CAAC,CAAC,CACrDI,UAAU,CAAEtB,IACd,CAAC,CACDO,MAAM,CAACC,IAAI,CACX,CACF,aAAa,CAAC,MAAM,CACpB,UAAU,CAAE,KAAM,CAAA,CACdE,kBAAkB,CAAA,CACtB,CAAA,CACH,CAED,GAAMH,OAAM,CAAGgB,UAAU,CAACC,MAAM,CAAC,CAC/BhB,IAAI,CAAE,CACJiB,eAAe,CAAE,aACnB,CACF,CAAC,CAAC,CAEF,cAAeR,YAAW","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Platform, TextProps, ViewProps } from 'react-native';\n\nimport { black } from '../styles/themes/v2/colors';\n\nexport type IconProps = {\n  name: string;\n  color?: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n  allowFontScaling?: boolean;\n};\n\nlet MaterialCommunityIcons: React.ComponentType<\n  TextProps & {\n    name: string;\n    color: string;\n    size: number;\n    pointerEvents?: ViewProps['pointerEvents'];\n  }\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          (e as any).message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Text\n        {...rest}\n        style={[styles.icon, { color, fontSize: size }]}\n        // @ts-expect-error: Text doesn't support this, but it seems to affect TouchableNativeFeedback\n        pointerEvents=\"none\"\n        selectable={false}\n      >\n        â–¡\n      </Text>\n    );\n  };\n}\n\nexport const accessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility:\n          'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({\n  name,\n  color = black,\n  size,\n  direction,\n  allowFontScaling,\n}: IconProps) => (\n  <MaterialCommunityIcons\n    allowFontScaling={allowFontScaling}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n        lineHeight: size,\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    selectable={false}\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n"]},"metadata":{},"sourceType":"module"}
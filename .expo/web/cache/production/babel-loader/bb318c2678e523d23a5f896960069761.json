{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,\"string\");return typeof key===\"symbol\"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!==\"object\"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||\"default\");if(typeof res!==\"object\")return res;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(hint===\"string\"?String:Number)(input);}import{Background,getDefaultHeaderHeight,SafeAreaProviderCompat}from'@react-navigation/elements';import Color from'color';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{forModalPresentationIOS,forNoAnimation as forNoAnimationCard}from\"../../TransitionConfigs/CardStyleInterpolators\";import{DefaultTransition,ModalFadeTransition,ModalTransition}from\"../../TransitionConfigs/TransitionPresets\";import getDistanceForDirection from\"../../utils/getDistanceForDirection\";import{MaybeScreen,MaybeScreenContainer}from\"../Screens\";import{getIsModalPresentation}from\"./Card\";import CardContainer from\"./CardContainer\";var EPSILON=1e-5;var STATE_INACTIVE=0;var STATE_TRANSITIONING_OR_BELOW_TOP=1;var STATE_ON_TOP=2;var FALLBACK_DESCRIPTOR=Object.freeze({options:{}});var getInterpolationIndex=function getInterpolationIndex(scenes,index){var cardStyleInterpolator=scenes[index].descriptor.options.cardStyleInterpolator;var interpolationIndex=0;for(var i=index-1;i>=0;i--){var _scenes$i;var cardStyleInterpolatorCurrent=(_scenes$i=scenes[i])===null||_scenes$i===void 0?void 0:_scenes$i.descriptor.options.cardStyleInterpolator;if(cardStyleInterpolatorCurrent!==cardStyleInterpolator){break;}interpolationIndex++;}return interpolationIndex;};var getIsModal=function getIsModal(scene,interpolationIndex,isParentModal){if(isParentModal){return true;}var cardStyleInterpolator=scene.descriptor.options.cardStyleInterpolator;var isModalPresentation=getIsModalPresentation(cardStyleInterpolator);var isModal=isModalPresentation&&interpolationIndex!==0;return isModal;};var getHeaderHeights=function getHeaderHeights(scenes,insets,isParentHeaderShown,isParentModal,layout,previous){return scenes.reduce(function(acc,curr,index){var _curr$descriptor$opti=curr.descriptor.options,_curr$descriptor$opti2=_curr$descriptor$opti.headerStatusBarHeight,headerStatusBarHeight=_curr$descriptor$opti2===void 0?isParentHeaderShown?0:insets.top:_curr$descriptor$opti2,headerStyle=_curr$descriptor$opti.headerStyle;var style=StyleSheet.flatten(headerStyle||{});var height='height'in style&&typeof style.height==='number'?style.height:previous[curr.route.key];var interpolationIndex=getInterpolationIndex(scenes,index);var isModal=getIsModal(curr,interpolationIndex,isParentModal);acc[curr.route.key]=typeof height==='number'?height:getDefaultHeaderHeight(layout,isModal,headerStatusBarHeight);return acc;},{});};var getDistanceFromOptions=function getDistanceFromOptions(layout,descriptor){var _ref4=(descriptor===null||descriptor===void 0?void 0:descriptor.options)||{},presentation=_ref4.presentation,_ref4$gestureDirectio=_ref4.gestureDirection,gestureDirection=_ref4$gestureDirectio===void 0?presentation==='modal'?ModalTransition.gestureDirection:DefaultTransition.gestureDirection:_ref4$gestureDirectio;return getDistanceForDirection(layout,gestureDirection);};var getProgressFromGesture=function getProgressFromGesture(gesture,layout,descriptor){var distance=getDistanceFromOptions({width:Math.max(1,layout.width),height:Math.max(1,layout.height)},descriptor);if(distance>0){return gesture.interpolate({inputRange:[0,distance],outputRange:[1,0]});}return gesture.interpolate({inputRange:[distance,0],outputRange:[0,1]});};var CardStack=function(_React$Component){_inherits(CardStack,_React$Component);var _super=_createSuper(CardStack);function CardStack(_props){var _this;_classCallCheck(this,CardStack);_this=_super.call(this,_props);_defineProperty(_assertThisInitialized(_this),\"handleLayout\",function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;var layout={width:width,height:height};_this.setState(function(state,props){if(height===state.layout.height&&width===state.layout.width){return null;}return{layout:layout,headerHeights:getHeaderHeights(state.scenes,props.insets,props.isParentHeaderShown,props.isParentModal,layout,state.headerHeights)};});});_defineProperty(_assertThisInitialized(_this),\"handleHeaderLayout\",function(_ref){var route=_ref.route,height=_ref.height;_this.setState(function(_ref2){var headerHeights=_ref2.headerHeights;var previousHeight=headerHeights[route.key];if(previousHeight===height){return null;}return{headerHeights:_objectSpread(_objectSpread({},headerHeights),{},_defineProperty2({},route.key,height))};});});_defineProperty(_assertThisInitialized(_this),\"getFocusedRoute\",function(){var state=_this.props.state;return state.routes[state.index];});_defineProperty(_assertThisInitialized(_this),\"getPreviousScene\",function(_ref3){var route=_ref3.route;var getPreviousRoute=_this.props.getPreviousRoute;var scenes=_this.state.scenes;var previousRoute=getPreviousRoute({route:route});if(previousRoute){var previousScene=scenes.find(function(scene){return scene.descriptor.route.key===previousRoute.key;});return previousScene;}return undefined;});_this.state={routes:[],scenes:[],gestures:{},layout:SafeAreaProviderCompat.initialMetrics.frame,descriptors:_this.props.descriptors,headerHeights:{}};return _this;}_createClass(CardStack,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,insets=_this$props.insets,state=_this$props.state,routes=_this$props.routes,closingRouteKeys=_this$props.closingRouteKeys,onOpenRoute=_this$props.onOpenRoute,onCloseRoute=_this$props.onCloseRoute,renderHeader=_this$props.renderHeader,renderScene=_this$props.renderScene,isParentHeaderShown=_this$props.isParentHeaderShown,isParentModal=_this$props.isParentModal,onTransitionStart=_this$props.onTransitionStart,onTransitionEnd=_this$props.onTransitionEnd,onGestureStart=_this$props.onGestureStart,onGestureEnd=_this$props.onGestureEnd,onGestureCancel=_this$props.onGestureCancel,_this$props$detachIna=_this$props.detachInactiveScreens,detachInactiveScreens=_this$props$detachIna===void 0?Platform.OS==='web'||Platform.OS==='android'||Platform.OS==='ios':_this$props$detachIna;var _this$state=this.state,scenes=_this$state.scenes,layout=_this$state.layout,gestures=_this$state.gestures,headerHeights=_this$state.headerHeights;var focusedRoute=state.routes[state.index];var focusedHeaderHeight=headerHeights[focusedRoute.key];var isFloatHeaderAbsolute=this.state.scenes.slice(-2).some(function(scene){var _scene$descriptor$opt;var options=(_scene$descriptor$opt=scene.descriptor.options)!=null?_scene$descriptor$opt:{};var headerMode=options.headerMode,headerTransparent=options.headerTransparent,_options$headerShown=options.headerShown,headerShown=_options$headerShown===void 0?true:_options$headerShown;if(headerTransparent||headerShown===false||headerMode==='screen'){return true;}return false;});var activeScreensLimit=1;for(var i=scenes.length-1;i>=0;i--){var options=scenes[i].descriptor.options;var _options$detachPrevio=options.detachPreviousScreen,detachPreviousScreen=_options$detachPrevio===void 0?options.presentation==='transparentModal'?false:getIsModalPresentation(options.cardStyleInterpolator)?i!==scenes.map(function(scene){return scene.descriptor.options.cardStyleInterpolator;}).lastIndexOf(forModalPresentationIOS):true:_options$detachPrevio;if(detachPreviousScreen===false){activeScreensLimit++;}else{if(i<=scenes.length-2){break;}}}var floatingHeader=React.createElement(React.Fragment,{key:\"header\"},renderHeader({mode:'float',layout:layout,scenes:scenes,getPreviousScene:this.getPreviousScene,getFocusedRoute:this.getFocusedRoute,onContentHeightChange:this.handleHeaderLayout,style:[styles.floating,isFloatHeaderAbsolute&&[{height:focusedHeaderHeight},styles.absolute]]}));return React.createElement(Background,null,isFloatHeaderAbsolute?null:floatingHeader,React.createElement(MaybeScreenContainer,{enabled:detachInactiveScreens,style:styles.container,onLayout:this.handleLayout},routes.map(function(route,index,self){var _scenes,_scenes2;var focused=focusedRoute.key===route.key;var gesture=gestures[route.key];var scene=scenes[index];var isScreenActive=1;if(index<self.length-activeScreensLimit-1){isScreenActive=STATE_INACTIVE;}else{var sceneForActivity=scenes[self.length-1];var outputValue=index===self.length-1?STATE_ON_TOP:index>=self.length-activeScreensLimit?STATE_TRANSITIONING_OR_BELOW_TOP:STATE_INACTIVE;isScreenActive=sceneForActivity?sceneForActivity.progress.current.interpolate({inputRange:[0,1-EPSILON,1],outputRange:[1,1,outputValue],extrapolate:'clamp'}):STATE_TRANSITIONING_OR_BELOW_TOP;}var _scene$descriptor$opt2=scene.descriptor.options,_scene$descriptor$opt3=_scene$descriptor$opt2.headerShown,headerShown=_scene$descriptor$opt3===void 0?true:_scene$descriptor$opt3,headerTransparent=_scene$descriptor$opt2.headerTransparent,headerStyle=_scene$descriptor$opt2.headerStyle,headerTintColor=_scene$descriptor$opt2.headerTintColor,freezeOnBlur=_scene$descriptor$opt2.freezeOnBlur;var safeAreaInsetTop=insets.top;var safeAreaInsetRight=insets.right;var safeAreaInsetBottom=insets.bottom;var safeAreaInsetLeft=insets.left;var headerHeight=headerShown!==false?headerHeights[route.key]:0;var headerDarkContent;if(headerShown){if(typeof headerTintColor==='string'){headerDarkContent=Color(headerTintColor).isDark();}else{var flattenedHeaderStyle=StyleSheet.flatten(headerStyle);if(flattenedHeaderStyle&&'backgroundColor'in flattenedHeaderStyle&&typeof flattenedHeaderStyle.backgroundColor==='string'){headerDarkContent=!Color(flattenedHeaderStyle.backgroundColor).isDark();}}}var interpolationIndex=getInterpolationIndex(scenes,index);var isModal=getIsModal(scene,interpolationIndex,isParentModal);var isNextScreenTransparent=((_scenes=scenes[index+1])===null||_scenes===void 0?void 0:_scenes.descriptor.options.presentation)==='transparentModal';var detachCurrentScreen=((_scenes2=scenes[index+1])===null||_scenes2===void 0?void 0:_scenes2.descriptor.options.detachPreviousScreen)!==false;return React.createElement(MaybeScreen,{key:route.key,style:StyleSheet.absoluteFill,enabled:detachInactiveScreens,active:isScreenActive,freezeOnBlur:freezeOnBlur,pointerEvents:\"box-none\"},React.createElement(CardContainer,{index:index,interpolationIndex:interpolationIndex,modal:isModal,active:index===self.length-1,focused:focused,closing:closingRouteKeys.includes(route.key),layout:layout,gesture:gesture,scene:scene,safeAreaInsetTop:safeAreaInsetTop,safeAreaInsetRight:safeAreaInsetRight,safeAreaInsetBottom:safeAreaInsetBottom,safeAreaInsetLeft:safeAreaInsetLeft,onGestureStart:onGestureStart,onGestureCancel:onGestureCancel,onGestureEnd:onGestureEnd,headerHeight:headerHeight,isParentHeaderShown:isParentHeaderShown,onHeaderHeightChange:_this2.handleHeaderLayout,getPreviousScene:_this2.getPreviousScene,getFocusedRoute:_this2.getFocusedRoute,headerDarkContent:headerDarkContent,hasAbsoluteFloatHeader:isFloatHeaderAbsolute&&!headerTransparent,renderHeader:renderHeader,renderScene:renderScene,onOpenRoute:onOpenRoute,onCloseRoute:onCloseRoute,onTransitionStart:onTransitionStart,onTransitionEnd:onTransitionEnd,isNextScreenTransparent:isNextScreenTransparent,detachCurrentScreen:detachCurrentScreen}));})),isFloatHeaderAbsolute?floatingHeader:null);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.routes===state.routes&&props.descriptors===state.descriptors){return null;}var gestures=props.routes.reduce(function(acc,curr){var descriptor=props.descriptors[curr.key];var _ref5=(descriptor===null||descriptor===void 0?void 0:descriptor.options)||{},animationEnabled=_ref5.animationEnabled;acc[curr.key]=state.gestures[curr.key]||new Animated.Value(props.openingRouteKeys.includes(curr.key)&&animationEnabled!==false?getDistanceFromOptions(state.layout,descriptor):0);return acc;},{});var scenes=props.routes.map(function(route,index,self){var _descriptor$options$h;var previousRoute=self[index-1];var nextRoute=self[index+1];var oldScene=state.scenes[index];var currentGesture=gestures[route.key];var previousGesture=previousRoute?gestures[previousRoute.key]:undefined;var nextGesture=nextRoute?gestures[nextRoute.key]:undefined;var descriptor=props.descriptors[route.key]||state.descriptors[route.key]||(oldScene?oldScene.descriptor:FALLBACK_DESCRIPTOR);var nextDescriptor=props.descriptors[nextRoute===null||nextRoute===void 0?void 0:nextRoute.key]||state.descriptors[nextRoute===null||nextRoute===void 0?void 0:nextRoute.key];var previousDescriptor=props.descriptors[previousRoute===null||previousRoute===void 0?void 0:previousRoute.key]||state.descriptors[previousRoute===null||previousRoute===void 0?void 0:previousRoute.key];var optionsForTransitionConfig=index!==self.length-1&&nextDescriptor&&nextDescriptor.options.presentation!=='transparentModal'?nextDescriptor.options:descriptor.options;var defaultTransitionPreset=optionsForTransitionConfig.presentation==='modal'?ModalTransition:optionsForTransitionConfig.presentation==='transparentModal'?ModalFadeTransition:DefaultTransition;var _optionsForTransition=optionsForTransitionConfig.animationEnabled,animationEnabled=_optionsForTransition===void 0?Platform.OS!=='web'&&Platform.OS!=='windows'&&Platform.OS!=='macos':_optionsForTransition,_optionsForTransition2=optionsForTransitionConfig.gestureEnabled,gestureEnabled=_optionsForTransition2===void 0?Platform.OS==='ios'&&animationEnabled:_optionsForTransition2,_optionsForTransition3=optionsForTransitionConfig.gestureDirection,gestureDirection=_optionsForTransition3===void 0?defaultTransitionPreset.gestureDirection:_optionsForTransition3,_optionsForTransition4=optionsForTransitionConfig.transitionSpec,transitionSpec=_optionsForTransition4===void 0?defaultTransitionPreset.transitionSpec:_optionsForTransition4,_optionsForTransition5=optionsForTransitionConfig.cardStyleInterpolator,cardStyleInterpolator=_optionsForTransition5===void 0?animationEnabled===false?forNoAnimationCard:defaultTransitionPreset.cardStyleInterpolator:_optionsForTransition5,_optionsForTransition6=optionsForTransitionConfig.headerStyleInterpolator,headerStyleInterpolator=_optionsForTransition6===void 0?defaultTransitionPreset.headerStyleInterpolator:_optionsForTransition6,_optionsForTransition7=optionsForTransitionConfig.cardOverlayEnabled,cardOverlayEnabled=_optionsForTransition7===void 0?Platform.OS!=='ios'&&optionsForTransitionConfig.presentation!=='transparentModal'||getIsModalPresentation(cardStyleInterpolator):_optionsForTransition7;var headerMode=(_descriptor$options$h=descriptor.options.headerMode)!=null?_descriptor$options$h:!(optionsForTransitionConfig.presentation==='modal'||optionsForTransitionConfig.presentation==='transparentModal'||(nextDescriptor===null||nextDescriptor===void 0?void 0:nextDescriptor.options.presentation)==='modal'||(nextDescriptor===null||nextDescriptor===void 0?void 0:nextDescriptor.options.presentation)==='transparentModal'||getIsModalPresentation(cardStyleInterpolator))&&Platform.OS==='ios'&&descriptor.options.header===undefined?'float':'screen';var scene={route:route,descriptor:_objectSpread(_objectSpread({},descriptor),{},{options:_objectSpread(_objectSpread({},descriptor.options),{},{animationEnabled:animationEnabled,cardOverlayEnabled:cardOverlayEnabled,cardStyleInterpolator:cardStyleInterpolator,gestureDirection:gestureDirection,gestureEnabled:gestureEnabled,headerStyleInterpolator:headerStyleInterpolator,transitionSpec:transitionSpec,headerMode:headerMode})}),progress:{current:getProgressFromGesture(currentGesture,state.layout,descriptor),next:nextGesture&&(nextDescriptor===null||nextDescriptor===void 0?void 0:nextDescriptor.options.presentation)!=='transparentModal'?getProgressFromGesture(nextGesture,state.layout,nextDescriptor):undefined,previous:previousGesture?getProgressFromGesture(previousGesture,state.layout,previousDescriptor):undefined},__memo:[state.layout,descriptor,nextDescriptor,previousDescriptor,currentGesture,nextGesture,previousGesture]};if(oldScene&&scene.__memo.every(function(it,i){return oldScene.__memo[i]===it;})){return oldScene;}return scene;});return{routes:props.routes,scenes:scenes,gestures:gestures,descriptors:props.descriptors,headerHeights:getHeaderHeights(scenes,props.insets,props.isParentHeaderShown,props.isParentModal,state.layout,state.headerHeights)};}}]);return CardStack;}(React.Component);export{CardStack as default};var styles=StyleSheet.create({container:{flex:1},absolute:{position:'absolute',top:0,left:0,right:0},floating:{zIndex:1}});","map":{"version":3,"sources":["CardStack.tsx"],"names":["Background","getDefaultHeaderHeight","SafeAreaProviderCompat","Color","React","forModalPresentationIOS","forNoAnimation","forNoAnimationCard","DefaultTransition","ModalFadeTransition","ModalTransition","getDistanceForDirection","MaybeScreen","MaybeScreenContainer","getIsModalPresentation","CardContainer","EPSILON","STATE_INACTIVE","STATE_TRANSITIONING_OR_BELOW_TOP","STATE_ON_TOP","FALLBACK_DESCRIPTOR","Object","freeze","options","getInterpolationIndex","scenes","index","cardStyleInterpolator","descriptor","interpolationIndex","i","cardStyleInterpolatorCurrent","getIsModal","scene","isParentModal","isModalPresentation","isModal","getHeaderHeights","insets","isParentHeaderShown","layout","previous","reduce","acc","curr","headerStatusBarHeight","top","headerStyle","style","StyleSheet","flatten","height","route","key","getDistanceFromOptions","presentation","gestureDirection","getProgressFromGesture","gesture","distance","width","Math","max","interpolate","inputRange","outputRange","CardStack","Component","props","state","routes","descriptors","gestures","animationEnabled","Animated","Value","openingRouteKeys","includes","map","self","previousRoute","nextRoute","oldScene","currentGesture","previousGesture","undefined","nextGesture","nextDescriptor","previousDescriptor","optionsForTransitionConfig","length","defaultTransitionPreset","Platform","OS","gestureEnabled","transitionSpec","headerStyleInterpolator","cardOverlayEnabled","headerMode","header","progress","current","next","__memo","every","it","headerHeights","constructor","initialMetrics","frame","e","nativeEvent","setState","previousHeight","getPreviousRoute","previousScene","find","render","closingRouteKeys","onOpenRoute","onCloseRoute","renderHeader","renderScene","onTransitionStart","onTransitionEnd","onGestureStart","onGestureEnd","onGestureCancel","detachInactiveScreens","focusedRoute","focusedHeaderHeight","isFloatHeaderAbsolute","slice","some","headerTransparent","headerShown","activeScreensLimit","detachPreviousScreen","lastIndexOf","floatingHeader","mode","getPreviousScene","getFocusedRoute","onContentHeightChange","handleHeaderLayout","styles","floating","absolute","container","handleLayout","focused","isScreenActive","sceneForActivity","outputValue","extrapolate","headerTintColor","freezeOnBlur","safeAreaInsetTop","safeAreaInsetRight","right","safeAreaInsetBottom","bottom","safeAreaInsetLeft","left","headerHeight","headerDarkContent","isDark","flattenedHeaderStyle","backgroundColor","isNextScreenTransparent","detachCurrentScreen","absoluteFill","create","flex","position","zIndex"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { Background, getDefaultHeaderHeight, SafeAreaProviderCompat } from '@react-navigation/elements';\nimport Color from 'color';\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet } from 'react-native';\nimport { forModalPresentationIOS, forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport { DefaultTransition, ModalFadeTransition, ModalTransition } from '../../TransitionConfigs/TransitionPresets';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport { MaybeScreen, MaybeScreenContainer } from '../Screens';\nimport { getIsModalPresentation } from './Card';\nimport CardContainer from './CardContainer';\nconst EPSILON = 1e-5;\nconst STATE_INACTIVE = 0;\nconst STATE_TRANSITIONING_OR_BELOW_TOP = 1;\nconst STATE_ON_TOP = 2;\nconst FALLBACK_DESCRIPTOR = Object.freeze({\n  options: {}\n});\nconst getInterpolationIndex = (scenes, index) => {\n  const {\n    cardStyleInterpolator\n  } = scenes[index].descriptor.options;\n\n  // Start from current card and count backwards the number of cards with same interpolation\n  let interpolationIndex = 0;\n  for (let i = index - 1; i >= 0; i--) {\n    var _scenes$i;\n    const cardStyleInterpolatorCurrent = (_scenes$i = scenes[i]) === null || _scenes$i === void 0 ? void 0 : _scenes$i.descriptor.options.cardStyleInterpolator;\n    if (cardStyleInterpolatorCurrent !== cardStyleInterpolator) {\n      break;\n    }\n    interpolationIndex++;\n  }\n  return interpolationIndex;\n};\nconst getIsModal = (scene, interpolationIndex, isParentModal) => {\n  if (isParentModal) {\n    return true;\n  }\n  const {\n    cardStyleInterpolator\n  } = scene.descriptor.options;\n  const isModalPresentation = getIsModalPresentation(cardStyleInterpolator);\n  const isModal = isModalPresentation && interpolationIndex !== 0;\n  return isModal;\n};\nconst getHeaderHeights = (scenes, insets, isParentHeaderShown, isParentModal, layout, previous) => {\n  return scenes.reduce((acc, curr, index) => {\n    const {\n      headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n      headerStyle\n    } = curr.descriptor.options;\n    const style = StyleSheet.flatten(headerStyle || {});\n    const height = 'height' in style && typeof style.height === 'number' ? style.height : previous[curr.route.key];\n    const interpolationIndex = getInterpolationIndex(scenes, index);\n    const isModal = getIsModal(curr, interpolationIndex, isParentModal);\n    acc[curr.route.key] = typeof height === 'number' ? height : getDefaultHeaderHeight(layout, isModal, headerStatusBarHeight);\n    return acc;\n  }, {});\n};\nconst getDistanceFromOptions = (layout, descriptor) => {\n  const {\n    presentation,\n    gestureDirection = presentation === 'modal' ? ModalTransition.gestureDirection : DefaultTransition.gestureDirection\n  } = (descriptor === null || descriptor === void 0 ? void 0 : descriptor.options) || {};\n  return getDistanceForDirection(layout, gestureDirection);\n};\nconst getProgressFromGesture = (gesture, layout, descriptor) => {\n  const distance = getDistanceFromOptions({\n    // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\n    // This causes blank screen on web if it was previously inside container with display: none\n    width: Math.max(1, layout.width),\n    height: Math.max(1, layout.height)\n  }, descriptor);\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0]\n    });\n  }\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1]\n  });\n};\nexport default class CardStack extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.routes === state.routes && props.descriptors === state.descriptors) {\n      return null;\n    }\n    const gestures = props.routes.reduce((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const {\n        animationEnabled\n      } = (descriptor === null || descriptor === void 0 ? void 0 : descriptor.options) || {};\n      acc[curr.key] = state.gestures[curr.key] || new Animated.Value(props.openingRouteKeys.includes(curr.key) && animationEnabled !== false ? getDistanceFromOptions(state.layout, descriptor) : 0);\n      return acc;\n    }, {});\n    const scenes = props.routes.map((route, index, self) => {\n      const previousRoute = self[index - 1];\n      const nextRoute = self[index + 1];\n      const oldScene = state.scenes[index];\n      const currentGesture = gestures[route.key];\n      const previousGesture = previousRoute ? gestures[previousRoute.key] : undefined;\n      const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n      const descriptor = props.descriptors[route.key] || state.descriptors[route.key] || (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n      const nextDescriptor = props.descriptors[nextRoute === null || nextRoute === void 0 ? void 0 : nextRoute.key] || state.descriptors[nextRoute === null || nextRoute === void 0 ? void 0 : nextRoute.key];\n      const previousDescriptor = props.descriptors[previousRoute === null || previousRoute === void 0 ? void 0 : previousRoute.key] || state.descriptors[previousRoute === null || previousRoute === void 0 ? void 0 : previousRoute.key];\n\n      // When a screen is not the last, it should use next screen's transition config\n      // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n      // For example combining a slide and a modal transition would look wrong otherwise\n      // With this approach, combining different transition styles in the same navigator mostly looks right\n      // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n      // but majority of the transitions look alright\n      const optionsForTransitionConfig = index !== self.length - 1 && nextDescriptor && nextDescriptor.options.presentation !== 'transparentModal' ? nextDescriptor.options : descriptor.options;\n      let defaultTransitionPreset = optionsForTransitionConfig.presentation === 'modal' ? ModalTransition : optionsForTransitionConfig.presentation === 'transparentModal' ? ModalFadeTransition : DefaultTransition;\n      const {\n        animationEnabled = Platform.OS !== 'web' && Platform.OS !== 'windows' && Platform.OS !== 'macos',\n        gestureEnabled = Platform.OS === 'ios' && animationEnabled,\n        gestureDirection = defaultTransitionPreset.gestureDirection,\n        transitionSpec = defaultTransitionPreset.transitionSpec,\n        cardStyleInterpolator = animationEnabled === false ? forNoAnimationCard : defaultTransitionPreset.cardStyleInterpolator,\n        headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n        cardOverlayEnabled = Platform.OS !== 'ios' && optionsForTransitionConfig.presentation !== 'transparentModal' || getIsModalPresentation(cardStyleInterpolator)\n      } = optionsForTransitionConfig;\n      const headerMode = descriptor.options.headerMode ?? (!(optionsForTransitionConfig.presentation === 'modal' || optionsForTransitionConfig.presentation === 'transparentModal' || (nextDescriptor === null || nextDescriptor === void 0 ? void 0 : nextDescriptor.options.presentation) === 'modal' || (nextDescriptor === null || nextDescriptor === void 0 ? void 0 : nextDescriptor.options.presentation) === 'transparentModal' || getIsModalPresentation(cardStyleInterpolator)) && Platform.OS === 'ios' && descriptor.options.header === undefined ? 'float' : 'screen');\n      const scene = {\n        route,\n        descriptor: {\n          ...descriptor,\n          options: {\n            ...descriptor.options,\n            animationEnabled,\n            cardOverlayEnabled,\n            cardStyleInterpolator,\n            gestureDirection,\n            gestureEnabled,\n            headerStyleInterpolator,\n            transitionSpec,\n            headerMode\n          }\n        },\n        progress: {\n          current: getProgressFromGesture(currentGesture, state.layout, descriptor),\n          next: nextGesture && (nextDescriptor === null || nextDescriptor === void 0 ? void 0 : nextDescriptor.options.presentation) !== 'transparentModal' ? getProgressFromGesture(nextGesture, state.layout, nextDescriptor) : undefined,\n          previous: previousGesture ? getProgressFromGesture(previousGesture, state.layout, previousDescriptor) : undefined\n        },\n        __memo: [state.layout, descriptor, nextDescriptor, previousDescriptor, currentGesture, nextGesture, previousGesture]\n      };\n      if (oldScene && scene.__memo.every((it, i) => {\n        // @ts-expect-error: we haven't added __memo to the annotation to prevent usage elsewhere\n        return oldScene.__memo[i] === it;\n      })) {\n        return oldScene;\n      }\n      return scene;\n    });\n    return {\n      routes: props.routes,\n      scenes,\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(scenes, props.insets, props.isParentHeaderShown, props.isParentModal, state.layout, state.headerHeights)\n    };\n  }\n  constructor(_props) {\n    super(_props);\n    _defineProperty(this, \"handleLayout\", e => {\n      const {\n        height,\n        width\n      } = e.nativeEvent.layout;\n      const layout = {\n        width,\n        height\n      };\n      this.setState((state, props) => {\n        if (height === state.layout.height && width === state.layout.width) {\n          return null;\n        }\n        return {\n          layout,\n          headerHeights: getHeaderHeights(state.scenes, props.insets, props.isParentHeaderShown, props.isParentModal, layout, state.headerHeights)\n        };\n      });\n    });\n    _defineProperty(this, \"handleHeaderLayout\", _ref => {\n      let {\n        route,\n        height\n      } = _ref;\n      this.setState(_ref2 => {\n        let {\n          headerHeights\n        } = _ref2;\n        const previousHeight = headerHeights[route.key];\n        if (previousHeight === height) {\n          return null;\n        }\n        return {\n          headerHeights: {\n            ...headerHeights,\n            [route.key]: height\n          }\n        };\n      });\n    });\n    _defineProperty(this, \"getFocusedRoute\", () => {\n      const {\n        state\n      } = this.props;\n      return state.routes[state.index];\n    });\n    _defineProperty(this, \"getPreviousScene\", _ref3 => {\n      let {\n        route\n      } = _ref3;\n      const {\n        getPreviousRoute\n      } = this.props;\n      const {\n        scenes\n      } = this.state;\n      const previousRoute = getPreviousRoute({\n        route\n      });\n      if (previousRoute) {\n        const previousScene = scenes.find(scene => scene.descriptor.route.key === previousRoute.key);\n        return previousScene;\n      }\n      return undefined;\n    });\n    this.state = {\n      routes: [],\n      scenes: [],\n      gestures: {},\n      layout: SafeAreaProviderCompat.initialMetrics.frame,\n      descriptors: this.props.descriptors,\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      headerHeights: {}\n    };\n  }\n  render() {\n    const {\n      insets,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      renderHeader,\n      renderScene,\n      isParentHeaderShown,\n      isParentModal,\n      onTransitionStart,\n      onTransitionEnd,\n      onGestureStart,\n      onGestureEnd,\n      onGestureCancel,\n      detachInactiveScreens = Platform.OS === 'web' || Platform.OS === 'android' || Platform.OS === 'ios'\n    } = this.props;\n    const {\n      scenes,\n      layout,\n      gestures,\n      headerHeights\n    } = this.state;\n    const focusedRoute = state.routes[state.index];\n    const focusedHeaderHeight = headerHeights[focusedRoute.key];\n    const isFloatHeaderAbsolute = this.state.scenes.slice(-2).some(scene => {\n      const options = scene.descriptor.options ?? {};\n      const {\n        headerMode,\n        headerTransparent,\n        headerShown = true\n      } = options;\n      if (headerTransparent || headerShown === false || headerMode === 'screen') {\n        return true;\n      }\n      return false;\n    });\n    let activeScreensLimit = 1;\n    for (let i = scenes.length - 1; i >= 0; i--) {\n      const {\n        options\n      } = scenes[i].descriptor;\n      const {\n        // By default, we don't want to detach the previous screen of the active one for modals\n        detachPreviousScreen = options.presentation === 'transparentModal' ? false : getIsModalPresentation(options.cardStyleInterpolator) ? i !== scenes.map(scene => scene.descriptor.options.cardStyleInterpolator).lastIndexOf(forModalPresentationIOS) : true\n      } = options;\n      if (detachPreviousScreen === false) {\n        activeScreensLimit++;\n      } else {\n        // Check at least last 2 screens before stopping\n        // This will make sure that screen isn't detached when another screen is animating on top of the transparent one\n        // For example, (Opaque -> Transparent -> Opaque)\n        if (i <= scenes.length - 2) {\n          break;\n        }\n      }\n    }\n    const floatingHeader = /*#__PURE__*/React.createElement(React.Fragment, {\n      key: \"header\"\n    }, renderHeader({\n      mode: 'float',\n      layout,\n      scenes,\n      getPreviousScene: this.getPreviousScene,\n      getFocusedRoute: this.getFocusedRoute,\n      onContentHeightChange: this.handleHeaderLayout,\n      style: [styles.floating, isFloatHeaderAbsolute && [\n      // Without this, the header buttons won't be touchable on Android when headerTransparent: true\n      {\n        height: focusedHeaderHeight\n      }, styles.absolute]]\n    }));\n    return /*#__PURE__*/React.createElement(Background, null, isFloatHeaderAbsolute ? null : floatingHeader, /*#__PURE__*/React.createElement(MaybeScreenContainer, {\n      enabled: detachInactiveScreens,\n      style: styles.container,\n      onLayout: this.handleLayout\n    }, routes.map((route, index, self) => {\n      var _scenes, _scenes2;\n      const focused = focusedRoute.key === route.key;\n      const gesture = gestures[route.key];\n      const scene = scenes[index];\n\n      // For the screens that shouldn't be active, the value is 0\n      // For those that should be active, but are not the top screen, the value is 1\n      // For those on top of the stack and with interaction enabled, the value is 2\n      // For the old implementation, it stays the same it was\n      let isScreenActive = 1;\n      if (index < self.length - activeScreensLimit - 1) {\n        // screen should be inactive because it is too deep in the stack\n        isScreenActive = STATE_INACTIVE;\n      } else {\n        const sceneForActivity = scenes[self.length - 1];\n        const outputValue = index === self.length - 1 ? STATE_ON_TOP // the screen is on top after the transition\n        : index >= self.length - activeScreensLimit ? STATE_TRANSITIONING_OR_BELOW_TOP // the screen should stay active after the transition, it is not on top but is in activeLimit\n        : STATE_INACTIVE; // the screen should be active only during the transition, it is at the edge of activeLimit\n        isScreenActive = sceneForActivity ? sceneForActivity.progress.current.interpolate({\n          inputRange: [0, 1 - EPSILON, 1],\n          outputRange: [1, 1, outputValue],\n          extrapolate: 'clamp'\n        }) : STATE_TRANSITIONING_OR_BELOW_TOP;\n      }\n      const {\n        headerShown = true,\n        headerTransparent,\n        headerStyle,\n        headerTintColor,\n        freezeOnBlur\n      } = scene.descriptor.options;\n      const safeAreaInsetTop = insets.top;\n      const safeAreaInsetRight = insets.right;\n      const safeAreaInsetBottom = insets.bottom;\n      const safeAreaInsetLeft = insets.left;\n      const headerHeight = headerShown !== false ? headerHeights[route.key] : 0;\n      let headerDarkContent;\n      if (headerShown) {\n        if (typeof headerTintColor === 'string') {\n          headerDarkContent = Color(headerTintColor).isDark();\n        } else {\n          const flattenedHeaderStyle = StyleSheet.flatten(headerStyle);\n          if (flattenedHeaderStyle && 'backgroundColor' in flattenedHeaderStyle && typeof flattenedHeaderStyle.backgroundColor === 'string') {\n            headerDarkContent = !Color(flattenedHeaderStyle.backgroundColor).isDark();\n          }\n        }\n      }\n\n      // Start from current card and count backwards the number of cards with same interpolation\n      const interpolationIndex = getInterpolationIndex(scenes, index);\n      const isModal = getIsModal(scene, interpolationIndex, isParentModal);\n      const isNextScreenTransparent = ((_scenes = scenes[index + 1]) === null || _scenes === void 0 ? void 0 : _scenes.descriptor.options.presentation) === 'transparentModal';\n      const detachCurrentScreen = ((_scenes2 = scenes[index + 1]) === null || _scenes2 === void 0 ? void 0 : _scenes2.descriptor.options.detachPreviousScreen) !== false;\n      return /*#__PURE__*/React.createElement(MaybeScreen, {\n        key: route.key,\n        style: StyleSheet.absoluteFill,\n        enabled: detachInactiveScreens,\n        active: isScreenActive,\n        freezeOnBlur: freezeOnBlur,\n        pointerEvents: \"box-none\"\n      }, /*#__PURE__*/React.createElement(CardContainer, {\n        index: index,\n        interpolationIndex: interpolationIndex,\n        modal: isModal,\n        active: index === self.length - 1,\n        focused: focused,\n        closing: closingRouteKeys.includes(route.key),\n        layout: layout,\n        gesture: gesture,\n        scene: scene,\n        safeAreaInsetTop: safeAreaInsetTop,\n        safeAreaInsetRight: safeAreaInsetRight,\n        safeAreaInsetBottom: safeAreaInsetBottom,\n        safeAreaInsetLeft: safeAreaInsetLeft,\n        onGestureStart: onGestureStart,\n        onGestureCancel: onGestureCancel,\n        onGestureEnd: onGestureEnd,\n        headerHeight: headerHeight,\n        isParentHeaderShown: isParentHeaderShown,\n        onHeaderHeightChange: this.handleHeaderLayout,\n        getPreviousScene: this.getPreviousScene,\n        getFocusedRoute: this.getFocusedRoute,\n        headerDarkContent: headerDarkContent,\n        hasAbsoluteFloatHeader: isFloatHeaderAbsolute && !headerTransparent,\n        renderHeader: renderHeader,\n        renderScene: renderScene,\n        onOpenRoute: onOpenRoute,\n        onCloseRoute: onCloseRoute,\n        onTransitionStart: onTransitionStart,\n        onTransitionEnd: onTransitionEnd,\n        isNextScreenTransparent: isNextScreenTransparent,\n        detachCurrentScreen: detachCurrentScreen\n      }));\n    })), isFloatHeaderAbsolute ? floatingHeader : null);\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  },\n  floating: {\n    zIndex: 1\n  }\n});\n//# sourceMappingURL=CardStack.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import color from'color';import{black,white}from\"../../styles/themes/v2/colors\";var getBorderColor=function getBorderColor(_ref){var theme=_ref.theme,isOutlined=_ref.isOutlined,disabled=_ref.disabled,selectedColor=_ref.selectedColor,backgroundColor=_ref.backgroundColor;var isSelectedColor=selectedColor!==undefined;if(theme.isV3){if(disabled){return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();}if(isSelectedColor){return color(selectedColor).alpha(0.29).rgb().string();}return theme.colors.outline;}if(isOutlined){if(isSelectedColor){return color(selectedColor).alpha(0.29).rgb().string();}if(theme.dark){return color(white).alpha(0.29).rgb().string();}return color(black).alpha(0.29).rgb().string();}return backgroundColor;};var getTextColor=function getTextColor(_ref2){var theme=_ref2.theme,isOutlined=_ref2.isOutlined,disabled=_ref2.disabled,selectedColor=_ref2.selectedColor;var isSelectedColor=selectedColor!==undefined;if(theme.isV3){if(disabled){return theme.colors.onSurfaceDisabled;}if(isSelectedColor){return selectedColor;}if(isOutlined){return theme.colors.onSurfaceVariant;}return theme.colors.onSecondaryContainer;}if(disabled){return theme.colors.disabled;}if(isSelectedColor){return color(selectedColor).alpha(0.87).rgb().string();}return color(theme.colors.text).alpha(0.87).rgb().string();};var getDefaultBackgroundColor=function getDefaultBackgroundColor(_ref3){var theme=_ref3.theme,isOutlined=_ref3.isOutlined;if(theme.isV3){if(isOutlined){return theme.colors.surface;}return theme.colors.secondaryContainer;}if(isOutlined){var _theme$colors;return(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.surface;}if(theme.dark){return'#383838';}return'#ebebeb';};var getBackgroundColor=function getBackgroundColor(_ref4){var theme=_ref4.theme,isOutlined=_ref4.isOutlined,disabled=_ref4.disabled,customBackgroundColor=_ref4.customBackgroundColor;if(typeof customBackgroundColor==='string'){return customBackgroundColor;}if(theme.isV3){if(disabled){if(isOutlined){return'transparent';}return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();}}return getDefaultBackgroundColor({theme:theme,isOutlined:isOutlined});};var getSelectedBackgroundColor=function getSelectedBackgroundColor(_ref5){var theme=_ref5.theme,isOutlined=_ref5.isOutlined,disabled=_ref5.disabled,customBackgroundColor=_ref5.customBackgroundColor,showSelectedOverlay=_ref5.showSelectedOverlay;var backgroundColor=getBackgroundColor({theme:theme,disabled:disabled,isOutlined:isOutlined,customBackgroundColor:customBackgroundColor});if(theme.isV3){if(isOutlined){if(showSelectedOverlay){return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant),0.12).rgb().string();}return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant),0).rgb().string();}if(showSelectedOverlay){return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer),0.12).rgb().string();}return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer),0).rgb().string();}if(theme.dark){if(isOutlined){return color(backgroundColor).lighten(0.2).rgb().string();}return color(backgroundColor).lighten(0.4).rgb().string();}if(isOutlined){return color(backgroundColor).darken(0.08).rgb().string();}return color(backgroundColor).darken(0.2).rgb().string();};var getIconColor=function getIconColor(_ref6){var theme=_ref6.theme,isOutlined=_ref6.isOutlined,disabled=_ref6.disabled,selectedColor=_ref6.selectedColor;var isSelectedColor=selectedColor!==undefined;if(theme.isV3){if(disabled){return theme.colors.onSurfaceDisabled;}if(isSelectedColor){return selectedColor;}if(isOutlined){return theme.colors.onSurfaceVariant;}return theme.colors.onSecondaryContainer;}if(disabled){return theme.colors.disabled;}if(isSelectedColor){return color(selectedColor).alpha(0.54).rgb().string();}return color(theme.colors.text).alpha(0.54).rgb().string();};var getUnderlayColor=function getUnderlayColor(_ref7){var theme=_ref7.theme,isOutlined=_ref7.isOutlined,disabled=_ref7.disabled,selectedColor=_ref7.selectedColor,selectedBackgroundColor=_ref7.selectedBackgroundColor;var isSelectedColor=selectedColor!==undefined;var textColor=getTextColor({theme:theme,disabled:disabled,selectedColor:selectedColor,isOutlined:isOutlined});if(theme.isV3){if(isSelectedColor){return color(selectedColor).alpha(0.12).rgb().string();}return color(textColor).alpha(0.12).rgb().string();}if(isSelectedColor){return color(selectedColor).fade(0.5).rgb().string();}return selectedBackgroundColor;};export var getChipColors=function getChipColors(_ref8){var isOutlined=_ref8.isOutlined,theme=_ref8.theme,selectedColor=_ref8.selectedColor,showSelectedOverlay=_ref8.showSelectedOverlay,customBackgroundColor=_ref8.customBackgroundColor,disabled=_ref8.disabled;var baseChipColorProps={theme:theme,isOutlined:isOutlined,disabled:disabled};var backgroundColor=getBackgroundColor(_objectSpread(_objectSpread({},baseChipColorProps),{},{customBackgroundColor:customBackgroundColor}));var selectedBackgroundColor=getSelectedBackgroundColor(_objectSpread(_objectSpread({},baseChipColorProps),{},{customBackgroundColor:customBackgroundColor,showSelectedOverlay:showSelectedOverlay}));return{borderColor:getBorderColor(_objectSpread(_objectSpread({},baseChipColorProps),{},{selectedColor:selectedColor,backgroundColor:backgroundColor})),textColor:getTextColor(_objectSpread(_objectSpread({},baseChipColorProps),{},{selectedColor:selectedColor})),iconColor:getIconColor(_objectSpread(_objectSpread({},baseChipColorProps),{},{selectedColor:selectedColor})),underlayColor:getUnderlayColor(_objectSpread(_objectSpread({},baseChipColorProps),{},{selectedColor:selectedColor,selectedBackgroundColor:selectedBackgroundColor})),backgroundColor:backgroundColor,selectedBackgroundColor:selectedBackgroundColor};};","map":{"version":3,"sources":["helpers.tsx"],"names":["color","black","white","getBorderColor","theme","isOutlined","disabled","selectedColor","backgroundColor","isSelectedColor","undefined","isV3","colors","onSurfaceVariant","alpha","rgb","string","outline","dark","getTextColor","onSurfaceDisabled","onSecondaryContainer","text","getDefaultBackgroundColor","surface","secondaryContainer","getBackgroundColor","customBackgroundColor","getSelectedBackgroundColor","showSelectedOverlay","mix","lighten","darken","getIconColor","getUnderlayColor","selectedBackgroundColor","textColor","fade","getChipColors","baseChipColorProps","borderColor","iconColor","underlayColor"],"mappings":"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","sourcesContent":["import type { ColorValue } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  isOutlined: boolean;\n  disabled?: boolean;\n};\n\nconst getBorderColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  backgroundColor,\n}: BaseProps & { backgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n\n    return color(black).alpha(0.29).rgb().string();\n  }\n\n  return backgroundColor;\n};\n\nconst getTextColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getDefaultBackgroundColor = ({\n  theme,\n  isOutlined,\n}: Omit<BaseProps, 'disabled' | 'selectedColor'>) => {\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n\n    return theme.colors.secondaryContainer;\n  }\n\n  if (isOutlined) {\n    return theme.colors?.surface;\n  }\n\n  if (theme.dark) {\n    return '#383838';\n  }\n\n  return '#ebebeb';\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n}) => {\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n\n  return getDefaultBackgroundColor({ theme, isOutlined });\n};\n\nconst getSelectedBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n  showSelectedOverlay,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  showSelectedOverlay?: boolean;\n}) => {\n  const backgroundColor = getBackgroundColor({\n    theme,\n    disabled,\n    isOutlined,\n    customBackgroundColor,\n  });\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor)\n          .mix(color(theme.colors.onSurfaceVariant), 0.12)\n          .rgb()\n          .string();\n      }\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSurfaceVariant), 0)\n        .rgb()\n        .string();\n    }\n\n    if (showSelectedOverlay) {\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSecondaryContainer), 0.12)\n        .rgb()\n        .string();\n    }\n\n    return color(backgroundColor)\n      .mix(color(theme.colors.onSecondaryContainer), 0)\n      .rgb()\n      .string();\n  }\n\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\n\nconst getIconColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getUnderlayColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  selectedBackgroundColor,\n}: BaseProps & { selectedBackgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n  const textColor = getTextColor({\n    theme,\n    disabled,\n    selectedColor,\n    isOutlined,\n  });\n\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n\n  return selectedBackgroundColor;\n};\n\nexport const getChipColors = ({\n  isOutlined,\n  theme,\n  selectedColor,\n  showSelectedOverlay,\n  customBackgroundColor,\n  disabled,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  disabled?: boolean;\n  showSelectedOverlay?: boolean;\n  selectedColor?: string;\n}) => {\n  const baseChipColorProps = { theme, isOutlined, disabled };\n\n  const backgroundColor = getBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n  });\n\n  const selectedBackgroundColor = getSelectedBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n    showSelectedOverlay,\n  });\n\n  return {\n    borderColor: getBorderColor({\n      ...baseChipColorProps,\n      selectedColor,\n      backgroundColor,\n    }),\n    textColor: getTextColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    iconColor: getIconColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    underlayColor: getUnderlayColor({\n      ...baseChipColorProps,\n      selectedColor,\n      selectedBackgroundColor,\n    }),\n    backgroundColor,\n    selectedBackgroundColor,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
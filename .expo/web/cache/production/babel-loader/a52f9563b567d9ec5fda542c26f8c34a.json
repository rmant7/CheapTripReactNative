{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"numberOfPointers\",\"direction\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import Hammer from'@egjs/hammerjs';import{Direction}from\"./constants\";import{GesturePropError}from\"./Errors\";import DraggingGestureHandler from\"./DraggingGestureHandler\";import{isnan}from\"./utils\";var FlingGestureHandler=function(_DraggingGestureHandl){_inherits(FlingGestureHandler,_DraggingGestureHandl);var _super=_createSuper(FlingGestureHandler);function FlingGestureHandler(){_classCallCheck(this,FlingGestureHandler);return _super.apply(this,arguments);}_createClass(FlingGestureHandler,[{key:\"name\",get:function get(){return'swipe';}},{key:\"NativeGestureClass\",get:function get(){return Hammer.Swipe;}},{key:\"onGestureActivated\",value:function onGestureActivated(event){this.sendEvent(_objectSpread(_objectSpread({},event),{},{eventType:Hammer.INPUT_MOVE,isFinal:false,isFirst:true}));this.isGestureRunning=false;this.hasGestureFailed=false;this.sendEvent(_objectSpread(_objectSpread({},event),{},{eventType:Hammer.INPUT_END,isFinal:true}));}},{key:\"onRawEvent\",value:function onRawEvent(ev){var _this=this;_get(_getPrototypeOf(FlingGestureHandler.prototype),\"onRawEvent\",this).call(this,ev);if(this.hasGestureFailed){return;}if(ev.isFinal){setTimeout(function(){if(_this.isGestureRunning){_this.cancelEvent(ev);}});}else if(!this.hasGestureFailed&&!this.isGestureRunning){var gesture=this.hammer.get(this.name);if(gesture.options.enable(gesture,ev)){this.onStart(ev);this.sendEvent(ev);}}}},{key:\"getHammerConfig\",value:function getHammerConfig(){return{pointers:this.config.numberOfPointers,direction:this.getDirection()};}},{key:\"getTargetDirections\",value:function getTargetDirections(direction){var directions=[];if(direction&Direction.RIGHT){directions.push(Hammer.DIRECTION_RIGHT);}if(direction&Direction.LEFT){directions.push(Hammer.DIRECTION_LEFT);}if(direction&Direction.UP){directions.push(Hammer.DIRECTION_UP);}if(direction&Direction.DOWN){directions.push(Hammer.DIRECTION_DOWN);}return directions;}},{key:\"getDirection\",value:function getDirection(){var _this$getConfig=this.getConfig(),direction=_this$getConfig.direction;var directions=[];if(direction&Direction.RIGHT){directions.push(Hammer.DIRECTION_HORIZONTAL);}if(direction&Direction.LEFT){directions.push(Hammer.DIRECTION_HORIZONTAL);}if(direction&Direction.UP){directions.push(Hammer.DIRECTION_VERTICAL);}if(direction&Direction.DOWN){directions.push(Hammer.DIRECTION_VERTICAL);}directions=_toConsumableArray(new Set(directions));if(directions.length===0)return Hammer.DIRECTION_NONE;if(directions.length===1)return directions[0];return Hammer.DIRECTION_ALL;}},{key:\"isGestureEnabledForEvent\",value:function isGestureEnabledForEvent(_ref,_recognizer,_ref2){var numberOfPointers=_ref.numberOfPointers;var pointerLength=_ref2.maxPointers;var validPointerCount=pointerLength===numberOfPointers;if(!validPointerCount&&this.isGestureRunning){return{failed:true};}return{success:validPointerCount};}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref3){var _ref3$numberOfPointer=_ref3.numberOfPointers,numberOfPointers=_ref3$numberOfPointer===void 0?1:_ref3$numberOfPointer,direction=_ref3.direction,props=_objectWithoutProperties(_ref3,_excluded);if(isnan(direction)||typeof direction!=='number'){throw new GesturePropError('direction',direction,'number');}return _get(_getPrototypeOf(FlingGestureHandler.prototype),\"updateGestureConfig\",this).call(this,_objectSpread({numberOfPointers:numberOfPointers,direction:direction},props));}}]);return FlingGestureHandler;}(DraggingGestureHandler);export default FlingGestureHandler;","map":{"version":3,"mappings":"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","names":["Hammer","Direction","GesturePropError","DraggingGestureHandler","isnan","FlingGestureHandler","Swipe","onGestureActivated","event","sendEvent","eventType","INPUT_MOVE","isFinal","isFirst","isGestureRunning","hasGestureFailed","INPUT_END","onRawEvent","ev","setTimeout","cancelEvent","gesture","hammer","get","name","options","enable","onStart","getHammerConfig","pointers","config","numberOfPointers","direction","getDirection","getTargetDirections","directions","RIGHT","push","DIRECTION_RIGHT","LEFT","DIRECTION_LEFT","UP","DIRECTION_UP","DOWN","DIRECTION_DOWN","getConfig","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","Set","length","DIRECTION_NONE","DIRECTION_ALL","isGestureEnabledForEvent","_recognizer","pointerLength","maxPointers","validPointerCount","failed","success","updateGestureConfig","props"],"sources":["FlingGestureHandler.ts"],"sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\n\nimport { Direction } from './constants';\nimport { GesturePropError } from './Errors';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isnan } from './utils';\nimport { HammerInputExt } from './GestureHandler';\n\nclass FlingGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'swipe';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Swipe;\n  }\n\n  onGestureActivated(event: HammerInputExt) {\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_MOVE,\n      isFinal: false,\n      isFirst: true,\n    });\n    this.isGestureRunning = false;\n    this.hasGestureFailed = false;\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_END,\n      isFinal: true,\n    });\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      setTimeout(() => {\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore FIXME(TS)\n      if (gesture.options.enable(gesture, ev)) {\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      // @ts-ignore FIXME(TS)\n      pointers: this.config.numberOfPointers,\n      direction: this.getDirection(),\n    };\n  }\n\n  getTargetDirections(direction: number) {\n    const directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_RIGHT);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_LEFT);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_UP);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_DOWN);\n    }\n    // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n    return directions;\n  }\n\n  getDirection() {\n    // @ts-ignore FIXME(TS)\n    const { direction } = this.getConfig();\n\n    let directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    directions = [...new Set(directions)];\n\n    if (directions.length === 0) return Hammer.DIRECTION_NONE;\n    if (directions.length === 1) return directions[0];\n    return Hammer.DIRECTION_ALL;\n  }\n\n  isGestureEnabledForEvent(\n    { numberOfPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    const validPointerCount = pointerLength === numberOfPointers;\n    if (!validPointerCount && this.isGestureRunning) {\n      return { failed: true };\n    }\n    return { success: validPointerCount };\n  }\n\n  updateGestureConfig({ numberOfPointers = 1, direction, ...props }: any) {\n    if (isnan(direction) || typeof direction !== 'number') {\n      throw new GesturePropError('direction', direction, 'number');\n    }\n    return super.updateGestureConfig({\n      numberOfPointers,\n      direction,\n      ...props,\n    });\n  }\n}\n\nexport default FlingGestureHandler;\n"]},"metadata":{},"sourceType":"module"}
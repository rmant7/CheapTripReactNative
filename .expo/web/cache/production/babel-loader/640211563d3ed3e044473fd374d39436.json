{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";var _excluded=[\"enabled\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import{State}from\"../../State\";import{PointerType,TouchEventType,EventTypes}from\"../interfaces\";import GestureHandlerOrchestrator from\"../tools/GestureHandlerOrchestrator\";import InteractionManager from\"../tools/InteractionManager\";import PointerEventManager from\"../tools/PointerEventManager\";import PointerTracker from\"../tools/PointerTracker\";import TouchEventManager from\"../tools/TouchEventManager\";import{isPointerInBounds}from\"../utils\";var GestureHandler=function(){function GestureHandler(){var _this=this;_classCallCheck(this,GestureHandler);_defineProperty(this,\"lastSentState\",null);_defineProperty(this,\"currentState\",State.UNDETERMINED);_defineProperty(this,\"shouldCancellWhenOutside\",false);_defineProperty(this,\"hasCustomActivationCriteria\",void 0);_defineProperty(this,\"enabled\",false);_defineProperty(this,\"ref\",void 0);_defineProperty(this,\"propsRef\",void 0);_defineProperty(this,\"handlerTag\",void 0);_defineProperty(this,\"config\",{enabled:false});_defineProperty(this,\"view\",void 0);_defineProperty(this,\"eventManagers\",[]);_defineProperty(this,\"tracker\",new PointerTracker());_defineProperty(this,\"activationIndex\",0);_defineProperty(this,\"awaiting\",false);_defineProperty(this,\"active\",false);_defineProperty(this,\"shouldResetProgress\",false);_defineProperty(this,\"pointerType\",PointerType.NONE);_defineProperty(this,\"sendEvent\",function(newState,oldState){var _this$propsRef$curren=_this.propsRef.current,onGestureHandlerEvent=_this$propsRef$curren.onGestureHandlerEvent,onGestureHandlerStateChange=_this$propsRef$curren.onGestureHandlerStateChange;var resultEvent=_this.transformEventData(newState,oldState);if(_this.lastSentState!==newState){_this.lastSentState=newState;invokeNullableMethod(onGestureHandlerStateChange,resultEvent);}if(_this.currentState===State.ACTIVE){resultEvent.nativeEvent.oldState=undefined;invokeNullableMethod(onGestureHandlerEvent,resultEvent);}});this.hasCustomActivationCriteria=false;}_createClass(GestureHandler,[{key:\"init\",value:function init(ref,propsRef){this.propsRef=propsRef;this.ref=ref;this.currentState=State.UNDETERMINED;this.setView();this.addEventManager(new PointerEventManager(this.view));this.addEventManager(new TouchEventManager(this.view));}},{key:\"setView\",value:function setView(){if(!this.ref){throw new Error(\"Cannot find HTML Element for handler \"+this.handlerTag);}this.view=findNodeHandle(this.ref);this.view.style['touchAction']='none';this.view.style['WebkitTouchCallout']='none';if(!this.config.userSelect){this.view.style['webkitUserSelect']='none';this.view.style['userSelect']='none';}else{this.view.style['webkitUserSelect']=this.config.userSelect;this.view.style['userSelect']=this.config.userSelect;}}},{key:\"addEventManager\",value:function addEventManager(manager){manager.setOnPointerDown(this.onPointerDown.bind(this));manager.setOnPointerAdd(this.onPointerAdd.bind(this));manager.setOnPointerUp(this.onPointerUp.bind(this));manager.setOnPointerRemove(this.onPointerRemove.bind(this));manager.setOnPointerMove(this.onPointerMove.bind(this));manager.setOnPointerEnter(this.onPointerEnter.bind(this));manager.setOnPointerOut(this.onPointerOut.bind(this));manager.setOnPointerCancel(this.onPointerCancel.bind(this));manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));manager.setListeners();this.eventManagers.push(manager);}},{key:\"onCancel\",value:function onCancel(){}},{key:\"onReset\",value:function onReset(){}},{key:\"resetProgress\",value:function resetProgress(){}},{key:\"reset\",value:function reset(){this.tracker.resetTracker();this.onReset();this.resetProgress();this.eventManagers.forEach(function(manager){return manager.resetManager();});this.currentState=State.UNDETERMINED;}},{key:\"moveToState\",value:function moveToState(newState,sendIfDisabled){if(this.currentState===newState){return;}var oldState=this.currentState;this.currentState=newState;if(this.tracker.getTrackedPointersCount()>0&&this.config.needsPointerData&&this.isFinished()){this.cancelTouches();}GestureHandlerOrchestrator.getInstance().onHandlerStateChange(this,newState,oldState,sendIfDisabled);this.onStateChange(newState,oldState);}},{key:\"onStateChange\",value:function onStateChange(_newState,_oldState){}},{key:\"begin\",value:function begin(){if(!this.checkHitSlop()){return;}if(this.currentState===State.UNDETERMINED){this.moveToState(State.BEGAN);}}},{key:\"fail\",value:function fail(sendIfDisabled){if(this.currentState===State.ACTIVE||this.currentState===State.BEGAN){this.moveToState(State.FAILED,sendIfDisabled);this.view.style.cursor='auto';}this.resetProgress();}},{key:\"cancel\",value:function cancel(sendIfDisabled){if(this.currentState===State.ACTIVE||this.currentState===State.UNDETERMINED||this.currentState===State.BEGAN){this.onCancel();this.moveToState(State.CANCELLED,sendIfDisabled);this.view.style.cursor='auto';}}},{key:\"activate\",value:function activate(){var _force=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(this.currentState===State.UNDETERMINED||this.currentState===State.BEGAN){this.moveToState(State.ACTIVE);this.view.style.cursor='grab';}}},{key:\"end\",value:function end(){if(this.currentState===State.BEGAN||this.currentState===State.ACTIVE){this.moveToState(State.END);this.view.style.cursor='auto';}this.resetProgress();}},{key:\"isAwaiting\",value:function isAwaiting(){return this.awaiting;}},{key:\"setAwaiting\",value:function setAwaiting(value){this.awaiting=value;}},{key:\"isActive\",value:function isActive(){return this.active;}},{key:\"setActive\",value:function setActive(value){this.active=value;}},{key:\"getShouldResetProgress\",value:function getShouldResetProgress(){return this.shouldResetProgress;}},{key:\"setShouldResetProgress\",value:function setShouldResetProgress(value){this.shouldResetProgress=value;}},{key:\"getActivationIndex\",value:function getActivationIndex(){return this.activationIndex;}},{key:\"setActivationIndex\",value:function setActivationIndex(value){this.activationIndex=value;}},{key:\"shouldWaitForHandlerFailure\",value:function shouldWaitForHandlerFailure(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldWaitForHandlerFailure(this,handler);}},{key:\"shouldRequireToWaitForFailure\",value:function shouldRequireToWaitForFailure(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(this,handler);}},{key:\"shouldRecognizeSimultaneously\",value:function shouldRecognizeSimultaneously(handler){if(handler===this){return true;}return InteractionManager.getInstance().shouldRecognizeSimultaneously(this,handler);}},{key:\"shouldBeCancelledByOther\",value:function shouldBeCancelledByOther(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldHandlerBeCancelledBy(this,handler);}},{key:\"onPointerDown\",value:function onPointerDown(event){GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);this.pointerType=event.pointerType;if(this.pointerType===PointerType.TOUCH){GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);}if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerAdd\",value:function onPointerAdd(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerUp\",value:function onPointerUp(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerRemove\",value:function onPointerRemove(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerMove\",value:function onPointerMove(event){this.tryToSendMoveEvent(false);if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerOut\",value:function onPointerOut(event){if(this.shouldCancellWhenOutside){switch(this.currentState){case State.ACTIVE:this.cancel();break;case State.BEGAN:this.fail();break;}return;}if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerEnter\",value:function onPointerEnter(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerCancel\",value:function onPointerCancel(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerOutOfBounds\",value:function onPointerOutOfBounds(event){this.tryToSendMoveEvent(true);if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"tryToSendMoveEvent\",value:function tryToSendMoveEvent(out){if(this.enabled&&this.active&&(!out||out&&!this.shouldCancellWhenOutside)){this.sendEvent(this.currentState,this.currentState);}}},{key:\"sendTouchEvent\",value:function sendTouchEvent(event){if(!this.enabled){return;}var onGestureHandlerEvent=this.propsRef.current.onGestureHandlerEvent;var touchEvent=this.transformTouchEvent(event);if(touchEvent){invokeNullableMethod(onGestureHandlerEvent,touchEvent);}}},{key:\"transformEventData\",value:function transformEventData(newState,oldState){return{nativeEvent:_objectSpread(_objectSpread({numberOfPointers:this.tracker.getTrackedPointersCount(),state:newState,pointerInside:isPointerInBounds(this.view,{x:this.tracker.getLastAvgX(),y:this.tracker.getLastAvgY()})},this.transformNativeEvent()),{},{handlerTag:this.handlerTag,target:this.ref,oldState:newState!==oldState?oldState:undefined}),timeStamp:Date.now()};}},{key:\"transformTouchEvent\",value:function transformTouchEvent(event){var _this2=this;var _event$touchEventType;var rect=this.view.getBoundingClientRect();var all=[];var changed=[];var trackerData=this.tracker.getData();if(trackerData.size===0||!trackerData.has(event.pointerId)){return;}trackerData.forEach(function(element,key){var id=_this2.tracker.getMappedTouchEventId(key);all.push({id:id,x:element.lastX-rect.left,y:element.lastY-rect.top,absoluteX:element.lastX,absoluteY:element.lastY});});if(event.eventType!==EventTypes.CANCEL){changed.push({id:this.tracker.getMappedTouchEventId(event.pointerId),x:event.x-rect.left,y:event.y-rect.top,absoluteX:event.x,absoluteY:event.y});}else{trackerData.forEach(function(element,key){var id=_this2.tracker.getMappedTouchEventId(key);changed.push({id:id,x:element.lastX-rect.left,y:element.lastY-rect.top,absoluteX:element.lastX,absoluteY:element.lastY});});}var eventType=TouchEventType.UNDETERMINED;switch(event.eventType){case EventTypes.DOWN:case EventTypes.ADDITIONAL_POINTER_DOWN:eventType=TouchEventType.DOWN;break;case EventTypes.UP:case EventTypes.ADDITIONAL_POINTER_UP:eventType=TouchEventType.UP;break;case EventTypes.MOVE:eventType=TouchEventType.MOVE;break;case EventTypes.CANCEL:eventType=TouchEventType.CANCELLED;break;}var numberOfTouches=all.length;if(event.eventType===EventTypes.UP||event.eventType===EventTypes.ADDITIONAL_POINTER_UP){--numberOfTouches;}return{nativeEvent:{handlerTag:this.handlerTag,state:this.currentState,eventType:(_event$touchEventType=event.touchEventType)!==null&&_event$touchEventType!==void 0?_event$touchEventType:eventType,changedTouches:changed,allTouches:all,numberOfTouches:numberOfTouches},timeStamp:Date.now()};}},{key:\"cancelTouches\",value:function cancelTouches(){var _this3=this;var rect=this.view.getBoundingClientRect();var all=[];var changed=[];var trackerData=this.tracker.getData();if(trackerData.size===0){return;}trackerData.forEach(function(element,key){var id=_this3.tracker.getMappedTouchEventId(key);all.push({id:id,x:element.lastX-rect.left,y:element.lastY-rect.top,absoluteX:element.lastX,absoluteY:element.lastY});changed.push({id:id,x:element.lastX-rect.left,y:element.lastY-rect.top,absoluteX:element.lastX,absoluteY:element.lastY});});var cancelEvent={nativeEvent:{handlerTag:this.handlerTag,state:this.currentState,eventType:TouchEventType.CANCELLED,changedTouches:changed,allTouches:all,numberOfTouches:all.length},timeStamp:Date.now()};var onGestureHandlerEvent=this.propsRef.current.onGestureHandlerEvent;invokeNullableMethod(onGestureHandlerEvent,cancelEvent);}},{key:\"transformNativeEvent\",value:function transformNativeEvent(){return{};}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref){var _ref$enabled=_ref.enabled,enabled=_ref$enabled===void 0?true:_ref$enabled,props=_objectWithoutProperties(_ref,_excluded);this.config=_objectSpread({enabled:enabled},props);this.enabled=enabled;if(this.config.shouldCancelWhenOutside!==undefined){this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);}this.validateHitSlops();if(this.enabled){return;}switch(this.currentState){case State.ACTIVE:this.fail(true);break;case State.UNDETERMINED:GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(this);break;default:this.cancel(true);break;}}},{key:\"checkCustomActivationCriteria\",value:function checkCustomActivationCriteria(criterias){for(var key in this.config){if(criterias.indexOf(key)>=0){this.hasCustomActivationCriteria=true;}}}},{key:\"validateHitSlops\",value:function validateHitSlops(){if(!this.config.hitSlop){return;}if(this.config.hitSlop.left!==undefined&&this.config.hitSlop.right!==undefined&&this.config.hitSlop.width!==undefined){throw new Error('HitSlop Error: Cannot define left, right and width at the same time');}if(this.config.hitSlop.width!==undefined&&this.config.hitSlop.left===undefined&&this.config.hitSlop.right===undefined){throw new Error('HitSlop Error: When width is defined, either left or right has to be defined');}if(this.config.hitSlop.height!==undefined&&this.config.hitSlop.top!==undefined&&this.config.hitSlop.bottom!==undefined){throw new Error('HitSlop Error: Cannot define top, bottom and height at the same time');}if(this.config.hitSlop.height!==undefined&&this.config.hitSlop.top===undefined&&this.config.hitSlop.bottom===undefined){throw new Error('HitSlop Error: When height is defined, either top or bottom has to be defined');}}},{key:\"checkHitSlop\",value:function checkHitSlop(){if(!this.config.hitSlop){return true;}var width=this.view.getBoundingClientRect().width;var height=this.view.getBoundingClientRect().height;var left=0;var top=0;var right=width;var bottom=height;if(this.config.hitSlop.horizontal!==undefined){left-=this.config.hitSlop.horizontal;right+=this.config.hitSlop.horizontal;}if(this.config.hitSlop.vertical!==undefined){top-=this.config.hitSlop.vertical;bottom+=this.config.hitSlop.vertical;}if(this.config.hitSlop.left!==undefined){left=-this.config.hitSlop.left;}if(this.config.hitSlop.right!==undefined){right=width+this.config.hitSlop.right;}if(this.config.hitSlop.top!==undefined){top=-this.config.hitSlop.top;}if(this.config.hitSlop.bottom!==undefined){bottom=width+this.config.hitSlop.bottom;}if(this.config.hitSlop.width!==undefined){if(this.config.hitSlop.left!==undefined){right=left+this.config.hitSlop.width;}else if(this.config.hitSlop.right!==undefined){left=right-this.config.hitSlop.width;}}if(this.config.hitSlop.height!==undefined){if(this.config.hitSlop.top!==undefined){bottom=top+this.config.hitSlop.height;}else if(this.config.hitSlop.bottom!==undefined){top=bottom-this.config.hitSlop.height;}}var rect=this.view.getBoundingClientRect();var offsetX=this.tracker.getLastX()-rect.left;var offsetY=this.tracker.getLastY()-rect.top;if(offsetX>=left&&offsetX<=right&&offsetY>=top&&offsetY<=bottom){return true;}return false;}},{key:\"isPointerInBounds\",value:function isPointerInBounds(_ref2){var x=_ref2.x,y=_ref2.y;var rect=this.view.getBoundingClientRect();return x>=rect.left&&x<=rect.right&&y>=rect.top&&y<=rect.bottom;}},{key:\"resetConfig\",value:function resetConfig(){}},{key:\"getTag\",value:function getTag(){return this.handlerTag;}},{key:\"setTag\",value:function setTag(tag){this.handlerTag=tag;}},{key:\"getConfig\",value:function getConfig(){return this.config;}},{key:\"getShouldEnableGestureOnSetup\",value:function getShouldEnableGestureOnSetup(){throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');}},{key:\"getView\",value:function getView(){return this.view;}},{key:\"getEventManagers\",value:function getEventManagers(){return this.eventManagers;}},{key:\"getTracker\",value:function getTracker(){return this.tracker;}},{key:\"getTrackedPointersID\",value:function getTrackedPointersID(){return this.tracker.getTrackedPointersID();}},{key:\"getState\",value:function getState(){return this.currentState;}},{key:\"isEnabled\",value:function isEnabled(){return this.enabled;}},{key:\"isFinished\",value:function isFinished(){return this.currentState===State.END||this.currentState===State.FAILED||this.currentState===State.CANCELLED;}},{key:\"setShouldCancelWhenOutside\",value:function setShouldCancelWhenOutside(shouldCancel){this.shouldCancellWhenOutside=shouldCancel;}},{key:\"getShouldCancelWhenOutside\",value:function getShouldCancelWhenOutside(){return this.shouldCancellWhenOutside;}},{key:\"getPointerType\",value:function getPointerType(){return this.pointerType;}}]);return GestureHandler;}();export{GestureHandler as default};function invokeNullableMethod(method,event){if(!method){return;}if(typeof method==='function'){method(event);return;}if('__getHandler'in method&&typeof method.__getHandler==='function'){var handler=method.__getHandler();invokeNullableMethod(handler,event);return;}if(!('__nodeConfig'in method)){return;}var argMapping=method.__nodeConfig.argMapping;if(!Array.isArray(argMapping)){return;}for(var _ref3 of argMapping.entries()){var _ref4=_slicedToArray(_ref3,2);var index=_ref4[0];var _ref4$=_slicedToArray(_ref4[1],2);var key=_ref4$[0];var value=_ref4$[1];if(!(key in event.nativeEvent)){continue;}var nativeValue=event.nativeEvent[key];if(value!==null&&value!==void 0&&value.setValue){value.setValue(nativeValue);}else{method.__nodeConfig.argMapping[index]=[key,nativeValue];}}return;}","map":{"version":3,"mappings":"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","names":["State","PointerType","TouchEventType","EventTypes","GestureHandlerOrchestrator","InteractionManager","PointerEventManager","PointerTracker","TouchEventManager","isPointerInBounds","GestureHandler","constructor","UNDETERMINED","enabled","NONE","newState","oldState","propsRef","current","onGestureHandlerEvent","onGestureHandlerStateChange","resultEvent","transformEventData","lastSentState","invokeNullableMethod","currentState","ACTIVE","nativeEvent","undefined","hasCustomActivationCriteria","init","ref","setView","addEventManager","view","Error","handlerTag","findNodeHandle","style","config","userSelect","manager","setOnPointerDown","onPointerDown","bind","setOnPointerAdd","onPointerAdd","setOnPointerUp","onPointerUp","setOnPointerRemove","onPointerRemove","setOnPointerMove","onPointerMove","setOnPointerEnter","onPointerEnter","setOnPointerOut","onPointerOut","setOnPointerCancel","onPointerCancel","setOnPointerOutOfBounds","onPointerOutOfBounds","setListeners","eventManagers","push","onCancel","onReset","resetProgress","reset","tracker","resetTracker","forEach","resetManager","moveToState","sendIfDisabled","getTrackedPointersCount","needsPointerData","isFinished","cancelTouches","getInstance","onHandlerStateChange","onStateChange","_newState","_oldState","begin","checkHitSlop","BEGAN","fail","FAILED","cursor","cancel","CANCELLED","activate","_force","end","END","isAwaiting","awaiting","setAwaiting","value","isActive","active","setActive","getShouldResetProgress","shouldResetProgress","setShouldResetProgress","getActivationIndex","activationIndex","setActivationIndex","shouldWaitForHandlerFailure","handler","shouldRequireToWaitForFailure","shouldRequireHandlerToWaitForFailure","shouldRecognizeSimultaneously","shouldBeCancelledByOther","shouldHandlerBeCancelledBy","event","recordHandlerIfNotPresent","pointerType","TOUCH","cancelMouseAndPenGestures","sendTouchEvent","tryToSendMoveEvent","shouldCancellWhenOutside","out","sendEvent","touchEvent","transformTouchEvent","numberOfPointers","state","pointerInside","x","getLastAvgX","y","getLastAvgY","transformNativeEvent","target","timeStamp","Date","now","rect","getBoundingClientRect","all","changed","trackerData","getData","size","has","pointerId","element","key","id","getMappedTouchEventId","lastX","left","lastY","top","absoluteX","absoluteY","eventType","CANCEL","DOWN","ADDITIONAL_POINTER_DOWN","UP","ADDITIONAL_POINTER_UP","MOVE","numberOfTouches","length","touchEventType","changedTouches","allTouches","cancelEvent","updateGestureConfig","props","shouldCancelWhenOutside","setShouldCancelWhenOutside","validateHitSlops","removeHandlerFromOrchestrator","checkCustomActivationCriteria","criterias","indexOf","hitSlop","right","width","height","bottom","horizontal","vertical","offsetX","getLastX","offsetY","getLastY","resetConfig","getTag","setTag","tag","getConfig","getShouldEnableGestureOnSetup","getView","getEventManagers","getTracker","getTrackedPointersID","getState","isEnabled","shouldCancel","getShouldCancelWhenOutside","getPointerType","method","__getHandler","argMapping","__nodeConfig","Array","isArray","entries","index","nativeValue","setValue"],"sources":["GestureHandler.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { findNodeHandle } from 'react-native';\nimport { State } from '../../State';\nimport {\n  Config,\n  AdaptedEvent,\n  PropsRef,\n  ResultEvent,\n  PointerData,\n  ResultTouchEvent,\n  PointerType,\n  TouchEventType,\n  EventTypes,\n} from '../interfaces';\nimport EventManager from '../tools/EventManager';\nimport GestureHandlerOrchestrator from '../tools/GestureHandlerOrchestrator';\nimport InteractionManager from '../tools/InteractionManager';\nimport PointerEventManager from '../tools/PointerEventManager';\nimport PointerTracker, { TrackerElement } from '../tools/PointerTracker';\nimport TouchEventManager from '../tools/TouchEventManager';\nimport { isPointerInBounds } from '../utils';\n\nexport default abstract class GestureHandler {\n  private lastSentState: State | null = null;\n  protected currentState: State = State.UNDETERMINED;\n\n  protected shouldCancellWhenOutside = false;\n  protected hasCustomActivationCriteria: boolean;\n  protected enabled = false;\n\n  private ref!: number;\n  private propsRef!: React.RefObject<unknown>;\n  private handlerTag!: number;\n  protected config: Config = { enabled: false };\n  protected view!: HTMLElement;\n\n  protected eventManagers: EventManager[] = [];\n  protected tracker: PointerTracker = new PointerTracker();\n\n  // Orchestrator properties\n  protected activationIndex = 0;\n  protected awaiting = false;\n  protected active = false;\n  protected shouldResetProgress = false;\n  protected pointerType: PointerType = PointerType.NONE;\n\n  public constructor() {\n    this.hasCustomActivationCriteria = false;\n  }\n\n  //\n  // Initializing handler\n  //\n\n  protected init(ref: number, propsRef: React.RefObject<unknown>) {\n    this.propsRef = propsRef;\n    this.ref = ref;\n\n    this.currentState = State.UNDETERMINED;\n\n    this.setView();\n    this.addEventManager(new PointerEventManager(this.view));\n    this.addEventManager(new TouchEventManager(this.view));\n  }\n\n  private setView() {\n    if (!this.ref) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${this.handlerTag}`\n      );\n    }\n\n    this.view = findNodeHandle(this.ref) as unknown as HTMLElement;\n    this.view.style['touchAction'] = 'none';\n    //@ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = 'none';\n\n    if (!this.config.userSelect) {\n      this.view.style['webkitUserSelect'] = 'none';\n      this.view.style['userSelect'] = 'none';\n    } else {\n      this.view.style['webkitUserSelect'] = this.config.userSelect;\n      this.view.style['userSelect'] = this.config.userSelect;\n    }\n  }\n\n  private addEventManager(manager: EventManager): void {\n    manager.setOnPointerDown(this.onPointerDown.bind(this));\n    manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n    manager.setOnPointerUp(this.onPointerUp.bind(this));\n    manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n    manager.setOnPointerMove(this.onPointerMove.bind(this));\n    manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n    manager.setOnPointerOut(this.onPointerOut.bind(this));\n    manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n    manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n    manager.setListeners();\n\n    this.eventManagers.push(manager);\n  }\n\n  //\n  // Resetting handler\n  //\n\n  protected onCancel(): void {}\n  protected onReset(): void {}\n  protected resetProgress(): void {}\n\n  public reset(): void {\n    this.tracker.resetTracker();\n    this.onReset();\n    this.resetProgress();\n    this.eventManagers.forEach((manager: EventManager) =>\n      manager.resetManager()\n    );\n    this.currentState = State.UNDETERMINED;\n  }\n\n  //\n  // State logic\n  //\n\n  public moveToState(newState: State, sendIfDisabled?: boolean) {\n    if (this.currentState === newState) {\n      return;\n    }\n\n    const oldState = this.currentState;\n    this.currentState = newState;\n\n    if (\n      this.tracker.getTrackedPointersCount() > 0 &&\n      this.config.needsPointerData &&\n      this.isFinished()\n    ) {\n      this.cancelTouches();\n    }\n\n    GestureHandlerOrchestrator.getInstance().onHandlerStateChange(\n      this,\n      newState,\n      oldState,\n      sendIfDisabled\n    );\n\n    this.onStateChange(newState, oldState);\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {}\n\n  public begin(): void {\n    if (!this.checkHitSlop()) {\n      return;\n    }\n\n    if (this.currentState === State.UNDETERMINED) {\n      this.moveToState(State.BEGAN);\n    }\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send fail event\n   */\n  public fail(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.BEGAN\n    ) {\n      this.moveToState(State.FAILED, sendIfDisabled);\n      this.view.style.cursor = 'auto';\n    }\n\n    this.resetProgress();\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send cancel event\n   */\n  public cancel(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.onCancel();\n      this.moveToState(State.CANCELLED, sendIfDisabled);\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  public activate(_force = false) {\n    if (\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.moveToState(State.ACTIVE);\n      this.view.style.cursor = 'grab';\n    }\n  }\n\n  public end() {\n    if (\n      this.currentState === State.BEGAN ||\n      this.currentState === State.ACTIVE\n    ) {\n      this.moveToState(State.END);\n      this.view.style.cursor = 'auto';\n    }\n\n    this.resetProgress();\n  }\n\n  //\n  // Methods for orchestrator\n  //\n\n  public isAwaiting(): boolean {\n    return this.awaiting;\n  }\n  public setAwaiting(value: boolean): void {\n    this.awaiting = value;\n  }\n\n  public isActive(): boolean {\n    return this.active;\n  }\n  public setActive(value: boolean): void {\n    this.active = value;\n  }\n\n  public getShouldResetProgress(): boolean {\n    return this.shouldResetProgress;\n  }\n  public setShouldResetProgress(value: boolean): void {\n    this.shouldResetProgress = value;\n  }\n\n  public getActivationIndex(): number {\n    return this.activationIndex;\n  }\n  public setActivationIndex(value: number): void {\n    this.activationIndex = value;\n  }\n\n  public shouldWaitForHandlerFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldWaitForHandlerFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRequireToWaitForFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return true;\n    }\n\n    return InteractionManager.getInstance().shouldRecognizeSimultaneously(\n      this,\n      handler\n    );\n  }\n\n  public shouldBeCancelledByOther(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldHandlerBeCancelledBy(\n      this,\n      handler\n    );\n  }\n\n  //\n  // Event actions\n  //\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);\n    this.pointerType = event.pointerType;\n\n    if (this.pointerType === PointerType.TOUCH) {\n      GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);\n    }\n\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Adding another pointer to existing ones\n  protected onPointerAdd(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerUp(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Removing pointer, when there is more than one pointers\n  protected onPointerRemove(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(false);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerOut(event: AdaptedEvent): void {\n    if (this.shouldCancellWhenOutside) {\n      switch (this.currentState) {\n        case State.ACTIVE:\n          this.cancel();\n          break;\n        case State.BEGAN:\n          this.fail();\n          break;\n      }\n      return;\n    }\n\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerEnter(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerCancel(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(true);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  private tryToSendMoveEvent(out: boolean): void {\n    if (\n      this.enabled &&\n      this.active &&\n      (!out || (out && !this.shouldCancellWhenOutside))\n    ) {\n      this.sendEvent(this.currentState, this.currentState);\n    }\n  }\n\n  public sendTouchEvent(event: AdaptedEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    const touchEvent: ResultTouchEvent | undefined =\n      this.transformTouchEvent(event);\n\n    if (touchEvent) {\n      invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n    }\n  }\n\n  //\n  // Events Sending\n  //\n\n  public sendEvent = (newState: State, oldState: State): void => {\n    const { onGestureHandlerEvent, onGestureHandlerStateChange }: PropsRef =\n      this.propsRef.current as PropsRef;\n\n    const resultEvent: ResultEvent = this.transformEventData(\n      newState,\n      oldState\n    );\n\n    // In the new API oldState field has to be undefined, unless we send event state changed\n    // Here the order is flipped to avoid workarounds such as making backup of the state and setting it to undefined first, then changing it back\n    // Flipping order with setting oldState to undefined solves issue, when events were being sent twice instead of once\n    // However, this may cause trouble in the future (but for now we don't know that)\n\n    if (this.lastSentState !== newState) {\n      this.lastSentState = newState;\n      invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n    }\n    if (this.currentState === State.ACTIVE) {\n      resultEvent.nativeEvent.oldState = undefined;\n      invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n    }\n  };\n\n  private transformEventData(newState: State, oldState: State): ResultEvent {\n    return {\n      nativeEvent: {\n        numberOfPointers: this.tracker.getTrackedPointersCount(),\n        state: newState,\n        pointerInside: isPointerInBounds(this.view, {\n          x: this.tracker.getLastAvgX(),\n          y: this.tracker.getLastAvgY(),\n        }),\n        ...this.transformNativeEvent(),\n        handlerTag: this.handlerTag,\n        target: this.ref,\n        oldState: newState !== oldState ? oldState : undefined,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private transformTouchEvent(\n    event: AdaptedEvent\n  ): ResultTouchEvent | undefined {\n    const rect = this.view.getBoundingClientRect();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    // This if handles edge case where all pointers have been cancelled\n    // When pointercancel is triggered, reset method is called. This means that tracker will be reset after first pointer being cancelled\n    // The problem is, that handler will receive another pointercancel event from the rest of the pointers\n    // To avoid crashing, we don't send event if tracker tracks no pointers, i.e. has been reset\n    if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.lastX - rect.left,\n        y: element.lastY - rect.top,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n    });\n\n    // Each pointer sends its own event, so we want changed touches to contain only the pointer that has changed.\n    // However, if the event is cancel, we want to cancel all pointers to avoid crashes\n    if (event.eventType !== EventTypes.CANCEL) {\n      changed.push({\n        id: this.tracker.getMappedTouchEventId(event.pointerId),\n        x: event.x - rect.left,\n        y: event.y - rect.top,\n        absoluteX: event.x,\n        absoluteY: event.y,\n      });\n    } else {\n      trackerData.forEach((element: TrackerElement, key: number): void => {\n        const id: number = this.tracker.getMappedTouchEventId(key);\n\n        changed.push({\n          id: id,\n          x: element.lastX - rect.left,\n          y: element.lastY - rect.top,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY,\n        });\n      });\n    }\n\n    let eventType: TouchEventType = TouchEventType.UNDETERMINED;\n\n    switch (event.eventType) {\n      case EventTypes.DOWN:\n      case EventTypes.ADDITIONAL_POINTER_DOWN:\n        eventType = TouchEventType.DOWN;\n        break;\n      case EventTypes.UP:\n      case EventTypes.ADDITIONAL_POINTER_UP:\n        eventType = TouchEventType.UP;\n        break;\n      case EventTypes.MOVE:\n        eventType = TouchEventType.MOVE;\n        break;\n      case EventTypes.CANCEL:\n        eventType = TouchEventType.CANCELLED;\n        break;\n    }\n\n    // Here, when we receive up event, we want to decrease number of touches\n    // That's because we want handler to send information that there's one pointer less\n    // However, we still want this pointer to be present in allTouches array, so that its data can be accessed\n    let numberOfTouches: number = all.length;\n\n    if (\n      event.eventType === EventTypes.UP ||\n      event.eventType === EventTypes.ADDITIONAL_POINTER_UP\n    ) {\n      --numberOfTouches;\n    }\n\n    return {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: event.touchEventType ?? eventType,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: numberOfTouches,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private cancelTouches(): void {\n    const rect = this.view.getBoundingClientRect();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    if (trackerData.size === 0) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.lastX - rect.left,\n        y: element.lastY - rect.top,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n\n      changed.push({\n        id: id,\n        x: element.lastX - rect.left,\n        y: element.lastY - rect.top,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n    });\n\n    const cancelEvent: ResultTouchEvent = {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: TouchEventType.CANCELLED,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: all.length,\n      },\n      timeStamp: Date.now(),\n    };\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n  }\n\n  protected transformNativeEvent() {\n    return {};\n  }\n\n  //\n  // Handling config\n  //\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    this.config = { enabled: enabled, ...props };\n    this.enabled = enabled;\n\n    if (this.config.shouldCancelWhenOutside !== undefined) {\n      this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);\n    }\n\n    this.validateHitSlops();\n\n    if (this.enabled) {\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.ACTIVE:\n        this.fail(true);\n        break;\n      case State.UNDETERMINED:\n        GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(\n          this\n        );\n        break;\n      default:\n        this.cancel(true);\n        break;\n    }\n  }\n\n  protected checkCustomActivationCriteria(criterias: string[]): void {\n    for (const key in this.config) {\n      if (criterias.indexOf(key) >= 0) {\n        this.hasCustomActivationCriteria = true;\n      }\n    }\n  }\n\n  private validateHitSlops(): void {\n    if (!this.config.hitSlop) {\n      return;\n    }\n\n    if (\n      this.config.hitSlop.left !== undefined &&\n      this.config.hitSlop.right !== undefined &&\n      this.config.hitSlop.width !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define left, right and width at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.width !== undefined &&\n      this.config.hitSlop.left === undefined &&\n      this.config.hitSlop.right === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When width is defined, either left or right has to be defined'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top !== undefined &&\n      this.config.hitSlop.bottom !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define top, bottom and height at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top === undefined &&\n      this.config.hitSlop.bottom === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When height is defined, either top or bottom has to be defined'\n      );\n    }\n  }\n\n  private checkHitSlop(): boolean {\n    if (!this.config.hitSlop) {\n      return true;\n    }\n\n    const width = this.view.getBoundingClientRect().width;\n    const height = this.view.getBoundingClientRect().height;\n\n    let left = 0;\n    let top = 0;\n    let right: number = width;\n    let bottom: number = height;\n\n    if (this.config.hitSlop.horizontal !== undefined) {\n      left -= this.config.hitSlop.horizontal;\n      right += this.config.hitSlop.horizontal;\n    }\n\n    if (this.config.hitSlop.vertical !== undefined) {\n      top -= this.config.hitSlop.vertical;\n      bottom += this.config.hitSlop.vertical;\n    }\n\n    if (this.config.hitSlop.left !== undefined) {\n      left = -this.config.hitSlop.left;\n    }\n\n    if (this.config.hitSlop.right !== undefined) {\n      right = width + this.config.hitSlop.right;\n    }\n\n    if (this.config.hitSlop.top !== undefined) {\n      top = -this.config.hitSlop.top;\n    }\n\n    if (this.config.hitSlop.bottom !== undefined) {\n      bottom = width + this.config.hitSlop.bottom;\n    }\n    if (this.config.hitSlop.width !== undefined) {\n      if (this.config.hitSlop.left !== undefined) {\n        right = left + this.config.hitSlop.width;\n      } else if (this.config.hitSlop.right !== undefined) {\n        left = right - this.config.hitSlop.width;\n      }\n    }\n\n    if (this.config.hitSlop.height !== undefined) {\n      if (this.config.hitSlop.top !== undefined) {\n        bottom = top + this.config.hitSlop.height;\n      } else if (this.config.hitSlop.bottom !== undefined) {\n        top = bottom - this.config.hitSlop.height;\n      }\n    }\n\n    const rect: DOMRect = this.view.getBoundingClientRect();\n    const offsetX: number = this.tracker.getLastX() - rect.left;\n    const offsetY: number = this.tracker.getLastY() - rect.top;\n\n    if (\n      offsetX >= left &&\n      offsetX <= right &&\n      offsetY >= top &&\n      offsetY <= bottom\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  public isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    const rect: DOMRect = this.view.getBoundingClientRect();\n\n    return (\n      x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom\n    );\n  }\n\n  protected resetConfig(): void {}\n\n  //\n  // Getters and setters\n  //\n\n  public getTag(): number {\n    return this.handlerTag;\n  }\n  public setTag(tag: number): void {\n    this.handlerTag = tag;\n  }\n\n  protected getConfig() {\n    return this.config;\n  }\n\n  public getShouldEnableGestureOnSetup(): boolean {\n    throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n  }\n\n  public getView(): HTMLElement {\n    return this.view;\n  }\n\n  public getEventManagers(): EventManager[] {\n    return this.eventManagers;\n  }\n\n  public getTracker(): PointerTracker {\n    return this.tracker;\n  }\n\n  public getTrackedPointersID(): number[] {\n    return this.tracker.getTrackedPointersID();\n  }\n\n  public getState(): State {\n    return this.currentState;\n  }\n\n  public isEnabled(): boolean {\n    return this.enabled;\n  }\n\n  private isFinished(): boolean {\n    return (\n      this.currentState === State.END ||\n      this.currentState === State.FAILED ||\n      this.currentState === State.CANCELLED\n    );\n  }\n\n  protected setShouldCancelWhenOutside(shouldCancel: boolean) {\n    this.shouldCancellWhenOutside = shouldCancel;\n  }\n  protected getShouldCancelWhenOutside(): boolean {\n    return this.shouldCancellWhenOutside;\n  }\n\n  public getPointerType(): PointerType {\n    return this.pointerType;\n  }\n}\n\nfunction invokeNullableMethod(\n  method:\n    | ((event: ResultEvent | ResultTouchEvent) => void)\n    | { __getHandler: () => (event: ResultEvent | ResultTouchEvent) => void }\n    | { __nodeConfig: { argMapping: unknown[] } },\n  event: ResultEvent | ResultTouchEvent\n): void {\n  if (!method) {\n    return;\n  }\n\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    const handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n\n  const { argMapping } = method.__nodeConfig;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n\n  for (const [index, [key, value]] of argMapping.entries()) {\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const nativeValue = event.nativeEvent[key];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (value?.setValue) {\n      //Reanimated API\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      value.setValue(nativeValue);\n    } else {\n      //RN Animated API\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n\n  return;\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';var PortalConsumer=function(_React$Component){_inherits(PortalConsumer,_React$Component);var _super=_createSuper(PortalConsumer);function PortalConsumer(){var _this;_classCallCheck(this,PortalConsumer);_this=_super.apply(this,arguments);_defineProperty(_assertThisInitialized(_this),\"key\",void 0);return _this;}_createClass(PortalConsumer,[{key:\"componentDidMount\",value:function componentDidMount(){this.checkManager();this.key=this.props.manager.mount(this.props.children);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.checkManager();this.props.manager.update(this.key,this.props.children);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.checkManager();this.props.manager.unmount(this.key);}},{key:\"checkManager\",value:function checkManager(){if(!this.props.manager){throw new Error('Looks like you forgot to wrap your root component with `Provider` component from `react-native-paper`.\\n\\n'+\"Please read our getting-started guide and make sure you've followed all the required steps.\\n\\n\"+'https://callstack.github.io/react-native-paper/getting-started.html');}}},{key:\"render\",value:function render(){return null;}}]);return PortalConsumer;}(React.Component);export{PortalConsumer as default};","map":{"version":3,"mappings":"4wCAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,IASTC,eAAc,+GAAgC,kPACjEC,4BAAoB,CAClB,IAAI,CAACC,YAAY,EAAE,CAEnB,IAAI,CAACC,GAAG,CAAG,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC,CAC1D,mCAEAC,6BAAqB,CACnB,IAAI,CAACN,YAAY,EAAE,CAEnB,IAAI,CAACE,KAAK,CAACC,OAAO,CAACI,MAAM,CAAC,IAAI,CAACN,GAAG,CAAE,IAAI,CAACC,KAAK,CAACG,QAAQ,CAAC,CAC1D,qCAEAG,+BAAuB,CACrB,IAAI,CAACR,YAAY,EAAE,CAEnB,IAAI,CAACE,KAAK,CAACC,OAAO,CAACM,OAAO,CAAC,IAAI,CAACR,GAAG,CAAC,CACtC,6BAIQD,uBAAe,CACrB,GAAI,CAAC,IAAI,CAACE,KAAK,CAACC,OAAO,CAAE,CACvB,KAAM,IAAIO,MAAK,CACb,4GAA4G,CAC1G,iGAAiG,CACjG,qEAAqE,CACxE,CACH,CACF,uBAEAC,iBAAS,CACP,MAAO,KAAI,CACb,6BAjC0Cd,KAAK,CAACe,SAAS,SAAtCd,cAAc","names":["React","PortalConsumer","componentDidMount","checkManager","key","props","manager","mount","children","componentDidUpdate","update","componentWillUnmount","unmount","Error","render","Component"],"sources":["PortalConsumer.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { PortalMethods } from './PortalHost';\n\ntype Props = {\n  manager: PortalMethods;\n  children: React.ReactNode;\n};\n\nexport default class PortalConsumer extends React.Component<Props> {\n  componentDidMount() {\n    this.checkManager();\n\n    this.key = this.props.manager.mount(this.props.children);\n  }\n\n  componentDidUpdate() {\n    this.checkManager();\n\n    this.props.manager.update(this.key, this.props.children);\n  }\n\n  componentWillUnmount() {\n    this.checkManager();\n\n    this.props.manager.unmount(this.key);\n  }\n\n  private key: any;\n\n  private checkManager() {\n    if (!this.props.manager) {\n      throw new Error(\n        'Looks like you forgot to wrap your root component with `Provider` component from `react-native-paper`.\\n\\n' +\n          \"Please read our getting-started guide and make sure you've followed all the required steps.\\n\\n\" +\n          'https://callstack.github.io/react-native-paper/getting-started.html'\n      );\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}